{"version":3,"file":"shorty.mjs","sources":["../src/strings/ariaChecked.ts","../src/strings/ariaDescription.ts","../src/strings/ariaDescribedBy.ts","../src/strings/ariaExpanded.ts","../src/strings/ariaHasPopup.ts","../src/strings/ariaHidden.ts","../src/strings/ariaLabel.ts","../src/strings/ariaLabelledBy.ts","../src/strings/ariaModal.ts","../src/strings/ariaPressed.ts","../src/strings/ariaSelected.ts","../src/strings/ariaValueMin.ts","../src/strings/ariaValueMax.ts","../src/strings/ariaValueNow.ts","../src/strings/ariaValueText.ts","../src/strings/abortEvent.ts","../src/strings/beforeunloadEvent.ts","../src/strings/blurEvent.ts","../src/strings/changeEvent.ts","../src/strings/contextmenuEvent.ts","../src/strings/DOMContentLoadedEvent.ts","../src/strings/DOMMouseScrollEvent.ts","../src/strings/errorEvent.ts","../src/strings/focusEvent.ts","../src/strings/focusinEvent.ts","../src/strings/focusoutEvent.ts","../src/strings/gesturechangeEvent.ts","../src/strings/gestureendEvent.ts","../src/strings/gesturestartEvent.ts","../src/strings/keydownEvent.ts","../src/strings/keypressEvent.ts","../src/strings/keyupEvent.ts","../src/strings/loadEvent.ts","../src/strings/mouseclickEvent.ts","../src/strings/mousedblclickEvent.ts","../src/strings/mousedownEvent.ts","../src/strings/mouseupEvent.ts","../src/strings/mousehoverEvent.ts","../src/strings/mouseenterEvent.ts","../src/strings/mouseleaveEvent.ts","../src/strings/mouseinEvent.ts","../src/strings/mouseoutEvent.ts","../src/strings/mouseoverEvent.ts","../src/strings/mousemoveEvent.ts","../src/strings/mousewheelEvent.ts","../src/strings/moveEvent.ts","../src/strings/orientationchangeEvent.ts","../src/strings/pointercancelEvent.ts","../src/strings/pointerdownEvent.ts","../src/strings/pointerleaveEvent.ts","../src/strings/pointermoveEvent.ts","../src/strings/pointerupEvent.ts","../src/strings/readystatechangeEvent.ts","../src/strings/resetEvent.ts","../src/strings/resizeEvent.ts","../src/strings/selectEvent.ts","../src/strings/selectendEvent.ts","../src/strings/selectstartEvent.ts","../src/strings/scrollEvent.ts","../src/strings/submitEvent.ts","../src/strings/touchstartEvent.ts","../src/strings/touchmoveEvent.ts","../src/strings/touchcancelEvent.ts","../src/strings/touchendEvent.ts","../src/strings/unloadEvent.ts","../src/strings/nativeEvents.ts","../src/strings/loadstartEvent.ts","../src/strings/mouseSwipeEvents.ts","../src/strings/mouseClickEvents.ts","../src/strings/mouseHoverEvents.ts","../src/strings/touchEvents.ts","../src/strings/focusEvents.ts","../src/strings/keyboardEventKeys.ts","../src/strings/keyAlt.ts","../src/strings/keyArrowDown.ts","../src/strings/keyArrowUp.ts","../src/strings/keyArrowLeft.ts","../src/strings/keyArrowRight.ts","../src/strings/keyBackspace.ts","../src/strings/keyCapsLock.ts","../src/strings/keyControl.ts","../src/strings/keyDelete.ts","../src/strings/keyEnter.ts","../src/strings/keyEscape.ts","../src/strings/keyInsert.ts","../src/strings/keyMeta.ts","../src/strings/keyPause.ts","../src/strings/keyScrollLock.ts","../src/strings/keyShift.ts","../src/strings/keySpace.ts","../src/strings/keyTab.ts","../src/strings/animationDuration.ts","../src/strings/animationDelay.ts","../src/strings/animationName.ts","../src/strings/animationEndEvent.ts","../src/strings/transitionDuration.ts","../src/strings/transitionDelay.ts","../src/strings/transitionEndEvent.ts","../src/strings/transitionProperty.ts","../src/strings/addEventListener.ts","../src/strings/removeEventListener.ts","../src/strings/bezierEasings.ts","../src/strings/offsetHeight.ts","../src/strings/offsetWidth.ts","../src/strings/scrollHeight.ts","../src/strings/scrollWidth.ts","../src/strings/tabindex.ts","../src/strings/userAgentData.ts","../src/strings/userAgent.ts","../src/boolean/isMobile.ts","../src/boolean/isApple.ts","../src/boolean/isFirefox.ts","../src/blocks/documentHead.ts","../src/boolean/support3DTransform.ts","../src/event/on.ts","../src/event/off.ts","../src/event/one.ts","../src/misc/noop.ts","../src/boolean/supportPassive.ts","../src/boolean/supportTransform.ts","../src/boolean/supportTouch.ts","../src/boolean/supportAnimation.ts","../src/boolean/supportTransition.ts","../src/attr/getAttribute.ts","../src/attr/getAttributeNS.ts","../src/attr/hasAttribute.ts","../src/attr/hasAttributeNS.ts","../src/attr/setAttribute.ts","../src/attr/setAttributeNS.ts","../src/attr/removeAttribute.ts","../src/attr/removeAttributeNS.ts","../src/class/addClass.ts","../src/class/removeClass.ts","../src/class/hasClass.ts","../src/blocks/documentBody.ts","../src/blocks/documentElement.ts","../src/misc/ArrayFrom.ts","../src/is/isHTMLElement.ts","../src/misc/data.ts","../src/is/isString.ts","../src/is/isNode.ts","../src/is/isWindow.ts","../src/is/isDocument.ts","../src/get/getDocument.ts","../src/misc/ObjectEntries.ts","../src/misc/createElement.ts","../src/misc/createElementNS.ts","../src/misc/dispatchEvent.ts","../src/misc/distinct.ts","../src/get/getElementStyle.ts","../src/get/getElementAnimationDelay.ts","../src/get/getElementAnimationDuration.ts","../src/misc/emulateAnimationEnd.ts","../src/get/getElementTransitionDelay.ts","../src/get/getElementTransitionDuration.ts","../src/misc/emulateTransitionEnd.ts","../src/misc/Float32ArrayFrom.ts","../src/misc/Float64ArrayFrom.ts","../src/misc/focus.ts","../src/misc/normalizeValue.ts","../src/misc/toLowerCase.ts","../src/misc/normalizeOptions.ts","../src/misc/ObjectAssign.ts","../src/misc/ObjectKeys.ts","../src/misc/ObjectValues.ts","../src/is/isObject.ts","../src/misc/createCustomEvent.ts","../src/misc/passiveHandler.ts","../src/misc/reflow.ts","../src/misc/setElementStyle.ts","../src/is/isMap.ts","../src/is/isNumber.ts","../src/misc/timer.ts","../src/misc/toUpperCase.ts","../src/get/getBoundingClientRect.ts","../src/get/getDocumentBody.ts","../src/get/getDocumentElement.ts","../src/get/getDocumentHead.ts","../src/get/getNodeScroll.ts","../src/is/isShadowRoot.ts","../src/get/getParentNode.ts","../src/is/isScaledElement.ts","../src/get/getRectRelativeToOffsetParent.ts","../src/get/getUID.ts","../src/get/getWindow.ts","../src/is/isArray.ts","../src/is/isCanvas.ts","../src/is/isCustomElement.ts","../src/is/isElement.ts","../src/is/isElementInScrollRange.ts","../src/is/isElementInViewport.ts","../src/is/isElementsArray.ts","../src/is/isFunction.ts","../src/is/isHTMLCollection.ts","../src/is/isHTMLImageElement.ts","../src/is/isJSON.ts","../src/is/isWeakMap.ts","../src/is/isMedia.ts","../src/is/isNodeList.ts","../src/is/isRTL.ts","../src/is/isSVGElement.ts","../src/is/isTableElement.ts","../src/selectors/closest.ts","../src/selectors/querySelector.ts","../src/selectors/getElementsByTagName.ts","../src/selectors/getCustomElements.ts","../src/selectors/getElementById.ts","../src/selectors/querySelectorAll.ts","../src/selectors/getElementsByClassName.ts","../src/selectors/matches.ts","../src/index.ts"],"sourcesContent":["/**\n * A global namespace for aria-checked.\n */\nconst ariaChecked = 'aria-checked';\nexport default ariaChecked;\n","/**\n * A global namespace for aria-description.\n */\nconst ariaDescription = 'aria-description';\nexport default ariaDescription;\n","/**\n * A global namespace for aria-describedby.\n */\nconst ariaDescribedBy = 'aria-describedby';\nexport default ariaDescribedBy;\n","/**\n * A global namespace for aria-expanded.\n */\nconst ariaExpanded = 'aria-expanded';\nexport default ariaExpanded;\n","/**\n * A global namespace for aria-haspopup.\n */\nconst ariaHasPopup = 'aria-haspopup';\nexport default ariaHasPopup;\n","/**\n * A global namespace for aria-hidden.\n */\nconst ariaHidden = 'aria-hidden';\nexport default ariaHidden;\n","/**\n * A global namespace for aria-label.\n */\nconst ariaLabel = 'aria-label';\nexport default ariaLabel;\n","/**\n * A global namespace for aria-labelledby.\n */\nconst ariaLabelledBy = 'aria-labelledby';\nexport default ariaLabelledBy;\n","/**\n * A global namespace for aria-modal.\n */\nconst ariaModal = 'aria-modal';\nexport default ariaModal;\n","/**\n * A global namespace for aria-pressed.\n */\nconst ariaPressed = 'aria-pressed';\nexport default ariaPressed;\n","/**\n * A global namespace for aria-selected.\n */\nconst ariaSelected = 'aria-selected';\nexport default ariaSelected;\n","/**\n * A global namespace for aria-valuemin.\n */\nconst ariaValueMin = 'aria-valuemin';\nexport default ariaValueMin;\n","/**\n * A global namespace for aria-valuemax.\n */\nconst ariaValueMax = 'aria-valuemax';\nexport default ariaValueMax;\n","/**\n * A global namespace for aria-valuenow.\n */\nconst ariaValueNow = 'aria-valuenow';\nexport default ariaValueNow;\n","/**\n * A global namespace for aria-valuetext.\n */\nconst ariaValueText = 'aria-valuetext';\nexport default ariaValueText;\n","/**\n * A global namespace for `abort` event.\n */\nconst abortEvent = 'abort';\nexport default abortEvent;\n","/**\n * A global namespace for `beforeunload` event.\n */\nconst beforeunloadEvent = 'beforeunload';\nexport default beforeunloadEvent;\n","/**\n * A global namespace for `blur` event.\n */\nconst blurEvent = 'blur';\nexport default blurEvent;\n","/**\n * A global namespace for `change` event.\n */\nconst changeEvent = 'change';\nexport default changeEvent;\n","/**\n * A global namespace for `contextmenu` event.\n */\nconst contextmenuEvent = 'contextmenu';\nexport default contextmenuEvent;\n","/**\n * A global namespace for `DOMContentLoaded` event.\n */\nconst DOMContentLoadedEvent = 'DOMContentLoaded';\nexport default DOMContentLoadedEvent;\n","/**\n * A global namespace for `DOMMouseScroll` event.\n */\nconst DOMMouseScrollEvent = 'DOMMouseScroll';\nexport default DOMMouseScrollEvent;\n","/**\n * A global namespace for `error` event.\n */\nconst errorEvent = 'error';\nexport default errorEvent;\n","/**\n * A global namespace for `focus` event.\n */\nconst focusEvent = 'focus';\nexport default focusEvent;\n","/**\n * A global namespace for `focusin` event.\n */\nconst focusinEvent = 'focusin';\nexport default focusinEvent;\n","/**\n * A global namespace for `focusout` event.\n */\nconst focusoutEvent = 'focusout';\nexport default focusoutEvent;\n","/**\n * A global namespace for `gesturechange` event.\n */\nconst gesturechangeEvent = 'gesturechange';\nexport default gesturechangeEvent;\n","/**\n * A global namespace for `gestureend` event.\n */\nconst gestureendEvent = 'gestureend';\nexport default gestureendEvent;\n","/**\n * A global namespace for `gesturestart` event.\n */\nconst gesturestartEvent = 'gesturestart';\nexport default gesturestartEvent;\n","/**\n * A global namespace for `keydown` event.\n */\nconst keydownEvent = 'keydown';\nexport default keydownEvent;\n","/**\n * A global namespace for `keypress` event.\n */\nconst keypressEvent = 'keypress';\nexport default keypressEvent;\n","/**\n * A global namespace for `keyup` event.\n */\nconst keyupEvent = 'keyup';\nexport default keyupEvent;\n","/**\n * A global namespace for `load` event.\n */\nconst loadEvent = 'load';\nexport default loadEvent;\n","/**\n * A global namespace for `click` event.\n */\nconst mouseclickEvent = 'click';\nexport default mouseclickEvent;\n","/**\n * A global namespace for `dblclick` event.\n */\nconst mousedblclickEvent = 'dblclick';\nexport default mousedblclickEvent;\n","/**\n * A global namespace for `mousedown` event.\n */\nconst mousedownEvent = 'mousedown';\nexport default mousedownEvent;\n","/**\n * A global namespace for `mouseup` event.\n */\nconst mouseupEvent = 'mouseup';\nexport default mouseupEvent;\n","/**\n * A global namespace for `hover` event.\n */\nconst mousehoverEvent = 'hover';\nexport default mousehoverEvent;\n","/**\n * A global namespace for `mouseenter` event.\n */\nconst mouseenterEvent = 'mouseenter';\nexport default mouseenterEvent;\n","/**\n * A global namespace for `mouseleave` event.\n */\nconst mouseleaveEvent = 'mouseleave';\nexport default mouseleaveEvent;\n","/**\n * A global namespace for `mousein` event.\n */\nconst mouseinEvent = 'mousein';\nexport default mouseinEvent;\n","/**\n * A global namespace for `mouseout` event.\n */\nconst mouseoutEvent = 'mouseout';\nexport default mouseoutEvent;\n","/**\n * A global namespace for `mouseover` event.\n */\nconst mouseoverEvent = 'mouseover';\nexport default mouseoverEvent;\n","/**\n * A global namespace for `mousemove` event.\n */\nconst mousemoveEvent = 'mousemove';\nexport default mousemoveEvent;\n","/**\n * A global namespace for `mousewheel` event.\n */\nconst mousewheelEvent = 'mousewheel';\nexport default mousewheelEvent;\n","/**\n * A global namespace for `move` event.\n */\nconst moveEvent = 'move';\nexport default moveEvent;\n","/**\n * A global namespace for `orientationchange` event.\n */\nconst orientationchangeEvent = 'orientationchange';\nexport default orientationchangeEvent;\n","/**\n * A global namespace for `pointercancel` event.\n */\nconst pointercancelEvent = 'pointercancel';\nexport default pointercancelEvent;\n","/**\n * A global namespace for `pointerdown` event.\n */\nconst pointerdownEvent = 'pointerdown';\nexport default pointerdownEvent;\n","/**\n * A global namespace for `pointerleave` event.\n */\nconst pointerleaveEvent = 'pointerleave';\nexport default pointerleaveEvent;\n","/**\n * A global namespace for `pointermove` event.\n */\nconst pointermoveEvent = 'pointermove';\nexport default pointermoveEvent;\n","/**\n * A global namespace for `pointerup` event.\n */\nconst pointerupEvent = 'pointerup';\nexport default pointerupEvent;\n","/**\n * A global namespace for `readystatechange` event.\n */\nconst readystatechangeEvent = 'readystatechange';\nexport default readystatechangeEvent;\n","/**\n * A global namespace for `reset` event.\n */\nconst resetEvent = 'reset';\nexport default resetEvent;\n","/**\n * A global namespace for `resize` event.\n */\nconst resizeEvent = 'resize';\nexport default resizeEvent;\n","/**\n * A global namespace for `select` event.\n */\nconst selectEvent = 'select';\nexport default selectEvent;\n","/**\n * A global namespace for the `selectend` event.\n */\nconst selectendEvent = 'selectend';\nexport default selectendEvent;\n","/**\n * A global namespace for the `selectstart` event.\n */\nconst selectstartEvent = 'selectstart';\nexport default selectstartEvent;\n","/**\n * A global namespace for `scroll` event.\n */\nconst scrollEvent = 'scroll';\nexport default scrollEvent;\n","/**\n * A global namespace for `submit` event.\n */\nconst submitEvent = 'submit';\nexport default submitEvent;\n","/**\n * A global namespace for `touchstart` event.\n */\nconst touchstartEvent = 'touchstart';\nexport default touchstartEvent;\n","/**\n * A global namespace for `touchmove` event.\n */\nconst touchmoveEvent = 'touchmove';\nexport default touchmoveEvent;\n","/**\n * A global namespace for `touchcancel` event.\n */\nconst touchcancelEvent = 'touchcancel';\nexport default touchcancelEvent;\n","/**\n * A global namespace for `touchend` event.\n */\nconst touchendEvent = 'touchend';\nexport default touchendEvent;\n","/**\n * A global namespace for `unload` event.\n */\nconst unloadEvent = 'unload';\nexport default unloadEvent;\n","import abort from './abortEvent';\nimport beforeunload from './beforeunloadEvent';\nimport blur from './blurEvent';\nimport change from './changeEvent';\nimport contextmenu from './contextmenuEvent';\nimport DOMContentLoaded from './DOMContentLoadedEvent';\nimport DOMMouseScroll from './DOMMouseScrollEvent';\nimport error from './errorEvent';\nimport focus from './focusEvent';\nimport focusin from './focusinEvent';\nimport focusout from './focusoutEvent';\nimport gesturechange from './gesturechangeEvent';\nimport gestureend from './gestureendEvent';\nimport gesturestart from './gesturestartEvent';\nimport keydown from './keydownEvent';\nimport keypress from './keypressEvent';\nimport keyup from './keyupEvent';\nimport load from './loadEvent';\nimport click from './mouseclickEvent';\nimport dblclick from './mousedblclickEvent';\nimport mousedown from './mousedownEvent';\nimport mouseup from './mouseupEvent';\nimport hover from './mousehoverEvent';\nimport mouseenter from './mouseenterEvent';\nimport mouseleave from './mouseleaveEvent';\nimport mousein from './mouseinEvent';\nimport mouseout from './mouseoutEvent';\nimport mouseover from './mouseoverEvent';\nimport mousemove from './mousemoveEvent';\nimport mousewheel from './mousewheelEvent';\nimport move from './moveEvent';\nimport orientationchange from './orientationchangeEvent';\nimport pointercancel from './pointercancelEvent';\nimport pointerdown from './pointerdownEvent';\nimport pointerleave from './pointerleaveEvent';\nimport pointermove from './pointermoveEvent';\nimport pointerup from './pointerupEvent';\nimport readystatechange from './readystatechangeEvent';\nimport reset from './resetEvent';\nimport resize from './resizeEvent';\nimport select from './selectEvent';\nimport selectend from './selectendEvent';\nimport selectstart from './selectstartEvent';\nimport scroll from './scrollEvent';\nimport submit from './submitEvent';\nimport touchstart from './touchstartEvent';\nimport touchmove from './touchmoveEvent';\nimport touchcancel from './touchcancelEvent';\nimport touchend from './touchendEvent';\nimport unload from './unloadEvent';\n\n/**\n * A global namespace for all browser native events.\n */\nconst nativeEvents = {\n  DOMContentLoaded,\n  DOMMouseScroll,\n  abort,\n  beforeunload,\n  blur,\n  change,\n  click,\n  contextmenu,\n  dblclick,\n  error,\n  focus,\n  focusin,\n  focusout,\n  gesturechange,\n  gestureend,\n  gesturestart,\n  hover,\n  keydown,\n  keypress,\n  keyup,\n  load,\n  mousedown,\n  mousemove,\n  mousein,\n  mouseout,\n  mouseenter,\n  mouseleave,\n  mouseover,\n  mouseup,\n  mousewheel,\n  move,\n  orientationchange,\n  pointercancel,\n  pointerdown,\n  pointerleave,\n  pointermove,\n  pointerup,\n  readystatechange,\n  reset,\n  resize,\n  scroll,\n  select,\n  selectend,\n  selectstart,\n  submit,\n  touchcancel,\n  touchend,\n  touchmove,\n  touchstart,\n  unload,\n};\n\nexport default nativeEvents;\n","/**\n * A global namespace for `loadstart` event.\n */\nconst loadstartEvent = 'loadstart';\nexport default loadstartEvent;\n","/**\n * A global namespace for mouse events equivalent to touch events.\n */\nconst mouseSwipeEvents = {\n  start: 'mousedown',\n  end: 'mouseup',\n  move: 'mousemove',\n  cancel: 'mouseleave',\n};\nexport default mouseSwipeEvents;\n","/**\n * A global namespace for mouse click events.\n */\nconst mouseClickEvents = { down: 'mousedown', up: 'mouseup' };\nexport default mouseClickEvents;\n","/**\n * A global namespace for mouse hover events.\n */\nconst mouseHoverEvents =\n  'onmouseleave' in document\n    ? ['mouseenter', 'mouseleave']\n    : /* istanbul ignore next */ ['mouseover', 'mouseout'];\nexport default mouseHoverEvents;\n","/**\n * A global namespace for touch events.\n */\nconst touchEvents = {\n  start: 'touchstart',\n  end: 'touchend',\n  move: 'touchmove',\n  cancel: 'touchcancel',\n};\nexport default touchEvents;\n","/**\n * A global namespace for focus event names.\n */\nconst focusEvents = { in: 'focusin', out: 'focusout' };\nexport default focusEvents;\n","/**\n * A global namespace for keyboard event keys.\n */\nconst keyboardEventKeys = {\n  Backspace: 'Backspace', //  8\n  Tab: 'Tab', //  9\n  Enter: 'Enter', // 13\n  Shift: 'Shift', // 16\n  Control: 'Control', // 17\n  Alt: 'Alt', // 18\n  Pause: 'Pause', // 19\n  CapsLock: 'CapsLock', // 20\n  Escape: 'Escape', // 27\n  Scape: 'Space', // 32\n  ArrowLeft: 'ArrowLeft', // 37\n  ArrowUp: 'ArrowUp', // 38\n  ArrowRight: 'ArrowRight', // 39\n  ArrowDown: 'ArrowDown', // 40\n  Insert: 'Insert', // 45\n  Delete: 'Delete', // 46\n  Meta: 'Meta', // 91 windows key\n  ContextMenu: 'ContextMenu', // 93\n  ScrollLock: 'ScrollLock', // 145\n};\n\nexport default keyboardEventKeys;\n","/**\n * A global namespace for `Alt` key.\n * e.which = 18\n */\nconst keyAlt = 'Alt';\n\nexport default keyAlt;\n","/**\n * A global namespace for `ArrowDown` key.\n * e.which = 40 equivalent\n */\nconst keyArrowDown = 'ArrowDown';\n\nexport default keyArrowDown;\n","/**\n * A global namespace for `ArrowUp` key.\n * e.which = 38 equivalent\n */\nconst keyArrowUp = 'ArrowUp';\n\nexport default keyArrowUp;\n","/**\n * A global namespace for `ArrowLeft` key.\n * e.which = 37 equivalent\n */\nconst keyArrowLeft = 'ArrowLeft';\n\nexport default keyArrowLeft;\n","/**\n * A global namespace for `ArrowRight` key.\n * e.which = 39 equivalent\n */\nconst keyArrowRight = 'ArrowRight';\n\nexport default keyArrowRight;\n","/**\n * A global namespace for `Backspace` key.\n * e.which === 8 equivalent\n */\nconst keyBackspace = 'Backspace';\n\nexport default keyBackspace;\n","/**\n * A global namespace for `CapsLock` key.\n * e.which = 20 equivalent\n */\nconst keyCapsLock = 'CapsLock';\n\nexport default keyCapsLock;\n","/**\n * A global namespace for `Control` key.\n * e.which = 17\n */\nconst keyControl = 'Control';\n\nexport default keyControl;\n","/**\n * A global namespace for `Delete` key.\n * e.which = 46 equivalent\n */\nconst keyDelete = 'Delete';\n\nexport default keyDelete;\n","/**\n * A global namespace for `Enter` key.\n * e.which = 13 equivalent\n */\nconst keyEnter = 'Enter';\n\nexport default keyEnter;\n","/**\n * A global namespace for `Escape` key.\n * e.which = 27 equivalent\n */\nconst keyEscape = 'Escape';\n\nexport default keyEscape;\n","/**\n * A global namespace for `Insert` key.\n * e.which = 45 equivalent\n */\nconst keyInsert = 'Insert';\n\nexport default keyInsert;\n","/**\n * A global namespace for `Meta` key.\n * e.which = 93 equivalent\n */\nconst keyMeta = 'Meta';\n\nexport default keyMeta;\n","/**\n * A global namespace for `Pause` key.\n * e.which = 19\n */\nconst keyPause = 'Pause';\n\nexport default keyPause;\n","/**\n * A global namespace for `ScrollLock` key.\n * e.which = 145 equivalent\n */\nconst keyScrollLock = 'ScrollLock';\n\nexport default keyScrollLock;\n","/**\n * A global namespace for `Shift` key.\n * e.which = 16\n */\nconst keyShift = 'Shift';\n\nexport default keyShift;\n","/**\n * A global namespace for `Space` key.\n * e.which = 32 equivalent\n */\nconst keySpace = 'Space';\n\nexport default keySpace;\n","/**\n * A global namespace for `Tab` key.\n * e.which = 9 equivalent\n */\nconst keyTab = 'Tab';\n\nexport default keyTab;\n","/**\n * A global namespace for 'animationDuration' string.\n */\nconst animationDuration = 'animationDuration';\nexport default animationDuration;\n","/**\n * A global namespace for 'animationDelay' string.\n */\nconst animationDelay = 'animationDelay';\nexport default animationDelay;\n","/**\n * A global namespace for 'animationName' string.\n */\nconst animationName = 'animationName';\nexport default animationName;\n","/**\n * A global namespace for 'animationend' string.\n */\nconst animationEndEvent = 'animationend';\nexport default animationEndEvent;\n","/**\n * A global namespace for 'transitionDuration' string.\n */\nconst transitionDuration = 'transitionDuration';\nexport default transitionDuration;\n","/**\n * A global namespace for 'transitionDelay' string.\n */\nconst transitionDelay = 'transitionDelay';\nexport default transitionDelay;\n","/**\n * A global namespace for 'transitionend' string.\n */\nconst transitionEndEvent = 'transitionend';\nexport default transitionEndEvent;\n","/**\n * A global namespace for `transitionProperty` string for modern browsers.\n */\nconst transitionProperty = 'transitionProperty';\nexport default transitionProperty;\n","/**\n * A global namespace for 'addEventListener' string.\n */\nconst addEventListener = 'addEventListener';\nexport default addEventListener;\n","/**\n * A global namespace for 'removeEventListener' string.\n */\nconst removeEventListener = 'removeEventListener';\nexport default removeEventListener;\n","/**\n * A global namespace for predefined\n * CSS3 'cubic-bezier()' easing functions.\n */\nconst bezierEasings = {\n  linear: 'linear',\n  easingSinusoidalIn: 'cubic-bezier(0.47,0,0.745,0.715)',\n  easingSinusoidalOut: 'cubic-bezier(0.39,0.575,0.565,1)',\n  easingSinusoidalInOut: 'cubic-bezier(0.445,0.05,0.55,0.95)',\n  easingQuadraticIn: 'cubic-bezier(0.550,0.085,0.680,0.530)',\n  easingQuadraticOut: 'cubic-bezier(0.250,0.460,0.450,0.940)',\n  easingQuadraticInOut: 'cubic-bezier(0.455,0.030,0.515,0.955)',\n  easingCubicIn: 'cubic-bezier(0.55,0.055,0.675,0.19)',\n  easingCubicOut: 'cubic-bezier(0.215,0.61,0.355,1)',\n  easingCubicInOut: 'cubic-bezier(0.645,0.045,0.355,1)',\n  easingQuarticIn: 'cubic-bezier(0.895,0.03,0.685,0.22)',\n  easingQuarticOut: 'cubic-bezier(0.165,0.84,0.44,1)',\n  easingQuarticInOut: 'cubic-bezier(0.77,0,0.175,1)',\n  easingQuinticIn: 'cubic-bezier(0.755,0.05,0.855,0.06)',\n  easingQuinticOut: 'cubic-bezier(0.23,1,0.32,1)',\n  easingQuinticInOut: 'cubic-bezier(0.86,0,0.07,1)',\n  easingExponentialIn: 'cubic-bezier(0.95,0.05,0.795,0.035)',\n  easingExponentialOut: 'cubic-bezier(0.19,1,0.22,1)',\n  easingExponentialInOut: 'cubic-bezier(1,0,0,1)',\n  easingCircularIn: 'cubic-bezier(0.6,0.04,0.98,0.335)',\n  easingCircularOut: 'cubic-bezier(0.075,0.82,0.165,1)',\n  easingCircularInOut: 'cubic-bezier(0.785,0.135,0.15,0.86)',\n  easingBackIn: 'cubic-bezier(0.6,-0.28,0.735,0.045)',\n  easingBackOut: 'cubic-bezier(0.175,0.885,0.32,1.275)',\n  easingBackInOut: 'cubic-bezier(0.68,-0.55,0.265,1.55)',\n};\nexport default bezierEasings;\n","/**\n * A global namespace for `offsetHeight` property.\n */\nconst offsetHeight = 'offsetHeight';\nexport default offsetHeight;\n","/**\n * A global namespace for `offsetWidth` property.\n */\nconst offsetWidth = 'offsetWidth';\nexport default offsetWidth;\n","/**\n * A global namespace for `scrollHeight` property.\n */\nconst scrollHeight = 'scrollHeight';\nexport default scrollHeight;\n","/**\n * A global namespace for `scrollWidth` property.\n */\nconst scrollWidth = 'scrollWidth';\nexport default scrollWidth;\n","/**\n * A global namespace for `touchcancel` event.\n */\nconst tabindex = 'tabindex';\nexport default tabindex;\n","import { NavigatorUA } from '../interface/navigatorUA';\n\nconst uaDATA = (navigator as NavigatorUA).userAgentData;\n\n/**\n * A global namespace for `userAgentData` object.\n */\nconst userAgentData: NavigatorUA['userAgentData'] = uaDATA;\nexport default userAgentData;\n","const { userAgent: userAgentString } = navigator;\n\n/**\n * A global namespace for `navigator.userAgent` string.\n */\nconst userAgent = userAgentString;\nexport default userAgent;\n","import userAgentData from '../strings/userAgentData';\nimport userAgent from '../strings/userAgent';\n\nconst mobileBrands = /iPhone|iPad|iPod|Android/i;\nlet isMobileCheck = false;\n\n/* istanbul ignore else */\nif (userAgentData) {\n  isMobileCheck = userAgentData.brands.some(x => mobileBrands.test(x.brand));\n} else {\n  isMobileCheck = mobileBrands.test(userAgent);\n}\n\n/**\n * A global `boolean` for mobile detection.\n */\nconst isMobile = isMobileCheck;\n\nexport default isMobile;\n","import { NavigatorUABrand } from '../interface/navigatorUA';\nimport userAgentData from '../strings/userAgentData';\nimport userAgent from '../strings/userAgent';\n\nconst appleBrands = /(iPhone|iPod|iPad)/;\n\n/**\n * A global `boolean` for Apple browsers.\n */\nconst isApple: boolean = userAgentData\n  ? userAgentData.brands.some((x: NavigatorUABrand) => appleBrands.test(x.brand))\n  : /* istanbul ignore next */ appleBrands.test(userAgent);\n\nexport default isApple;\n","import userAgent from '../strings/userAgent';\n\n/**\n * A global boolean for Gecko browsers. When writing this file,\n * Gecko was not supporting `userAgentData`.\n */\nconst isFirefox = userAgent ? userAgent.includes('Firefox') : /* istanbul ignore next */ false;\n\nexport default isFirefox;\n","/**\n * A global namespace for `document.head`.\n */\nconst { head: documentHead } = document;\nexport default documentHead;\n","import documentHead from '../blocks/documentHead';\n\n/**\n * A global `boolean` for CSS3 3D transform support.\n */\nconst support3DTransform = ['webkitPerspective', 'perspective'].some(p => p in documentHead.style);\n\nexport default support3DTransform;\n","/**\n * Add eventListener to an `EventTarget` object.\n */\nconst on = (\n  element: EventTarget,\n  eventName: string,\n  listener: EventListener,\n  options?: AddEventListenerOptions,\n) => {\n  const ops = options || false;\n  element.addEventListener(eventName, listener, ops);\n};\n\nexport default on;\n","/**\n * Remove eventListener from an `EventTarget` object.\n */\nconst off = (\n  element: EventTarget,\n  eventName: string,\n  listener: EventListener,\n  options?: AddEventListenerOptions,\n) => {\n  const ops = options || false;\n  element.removeEventListener(eventName, listener, ops);\n};\n\nexport default off;\n","import on from './on';\nimport off from './off';\n\n/**\n * Add an `eventListener` to an `EventTarget`\n * element and remove it once callback is called.\n */\nconst one = (\n  element: EventTarget,\n  eventName: string,\n  listener: EventListener,\n  options?: AddEventListenerOptions,\n) => {\n  /** Wrap the listener for easy on -> off */\n  const handlerWrapper = (e: Event): void => {\n    /* istanbul ignore else */\n    if (e.target === element) {\n      listener.apply(element, [e]);\n      off(element, eventName, handlerWrapper, options);\n    }\n  };\n  on(element, eventName, handlerWrapper, options);\n};\n\nexport default one;\n","/** A generic function with empty body. */\nconst noop = () => {\n  // this is a noop\n};\n\nexport default noop;\n","import DOMContentLoadedEvent from '../strings/DOMContentLoadedEvent';\nimport one from '../event/one';\nimport noop from '../misc/noop';\n\n/**\n * A global `boolean` for passive events support,\n * in general event options are not suited for scroll prevention.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\nconst supportPassive = (() => {\n  let result = false;\n  try {\n    const opts = Object.defineProperty({}, 'passive', {\n      get: () => {\n        result = true;\n        return result;\n      },\n    });\n    /* istanbul ignore next */\n    one(document, DOMContentLoadedEvent, noop, opts);\n  } catch (e) {\n    // throw Error('Passive events are not supported');\n  }\n\n  return result;\n})();\n\nexport default supportPassive;\n","import documentHead from '../blocks/documentHead';\n\n/**\n * A global `boolean` for CSS3 transform support.\n */\nconst supportTransform = ['webkitTransform', 'transform'].some(p => p in documentHead.style);\n\nexport default supportTransform;\n","/**\n * A global `boolean` for touch events support.\n */\nconst supportTouch =\n  'ontouchstart' in window || /* istanbul ignore next */ 'msMaxTouchPoints' in navigator;\n\nexport default supportTouch;\n","import documentHead from '../blocks/documentHead';\n\n/**\n * A global `boolean` for CSS3 animation support.\n */\nconst supportAnimation = ['webkitAnimation', 'animation'].some(p => p in documentHead.style);\n\nexport default supportAnimation;\n","import documentHead from '../blocks/documentHead';\n\n/**\n * A global `boolean` for CSS3 transition support.\n */\nconst supportTransition = ['webkitTransition', 'transition'].some(p => p in documentHead.style);\n\nexport default supportTransition;\n","/**\n * Shortcut for `HTMLElement.getAttribute()` method.\n *\n * @param element target element\n * @param att attribute name\n * @returns attribute value\n */\nconst getAttribute = (element: HTMLElement, att: string): string | null =>\n  element.getAttribute(att);\n\nexport default getAttribute;\n","/**\n * Shortcut for `HTMLElement.getAttributeNS()` method.\n *\n * @param ns attribute namespace\n * @param element target element\n * @param att attribute name\n * @returns attribute value\n */\nconst getAttributeNS = (ns: string, element: HTMLElement, att: string) =>\n  element.getAttributeNS(ns, att);\n\nexport default getAttributeNS;\n","/**\n * Shortcut for `HTMLElement.hasAttribute()` method.\n *\n * @param element target element\n * @param att attribute name\n * @returns the query result\n */\nconst hasAttribute = (element: HTMLElement, att: string): boolean => element.hasAttribute(att);\n\nexport default hasAttribute;\n","/**\n * Shortcut for `HTMLElement.hasAttributeNS()` method.\n *\n * @param ns attribute namespace\n * @param element target element\n * @param att attribute name\n * @returns the query result\n */\nconst hasAttributeNS = (ns: string, element: HTMLElement, att: string): boolean =>\n  element.hasAttributeNS(ns, att);\n\nexport default hasAttributeNS;\n","/**\n * Shortcut for `HTMLElement.setAttribute()` method.\n *\n * @param element target element\n * @param att attribute name\n * @param value attribute value\n */\nconst setAttribute = (element: HTMLElement, att: string, value: string) =>\n  element.setAttribute(att, value);\n\nexport default setAttribute;\n","/**\n * Shortcut for `SVGElement.setAttributeNS()` method.\n *\n * @param ns attribute namespace\n * @param element target element\n * @param att attribute name\n * @param value attribute value\n */\nconst setAttributeNS = (ns: string, element: HTMLElement, att: string, value: string): void =>\n  element.setAttributeNS(ns, att, value);\n\nexport default setAttributeNS;\n","/**\n * Shortcut for `HTMLElement.removeAttribute()` method.\n *\n * @param element target element\n * @param att attribute name\n */\nconst removeAttribute = (element: HTMLElement, att: string): void => element.removeAttribute(att);\n\nexport default removeAttribute;\n","/**\n * Shortcut for `HTMLElement.removeAttributeNS()` method.\n *\n * @param ns attribute namespace\n * @param  element target element\n * @param att attribute name\n */\nconst removeAttributeNS = (ns: string, element: HTMLElement, att: string): void =>\n  element.removeAttributeNS(ns, att);\n\nexport default removeAttributeNS;\n","/**\n * Add one or more CSS classes to `HTMLElement.classList`.\n *\n * @param element target\n * @param classNAME to add\n */\nconst addClass = (element: HTMLElement, ...classNAME: string[]): void => {\n  element.classList.add(...classNAME);\n};\n\nexport default addClass;\n","/**\n * Remove one or more classes from `HTMLElement.classList`.\n *\n * @param element target\n * @param classNAME to remove\n */\nconst removeClass = (element: HTMLElement, ...classNAME: string[]): void => {\n  element.classList.remove(...classNAME);\n};\n\nexport default removeClass;\n","/**\n * Check class in `HTMLElement.classList`.\n *\n * @param element target\n * @param classNAME to check\n */\nconst hasClass = (element: HTMLElement, classNAME: string): boolean => {\n  return element.classList.contains(classNAME);\n};\n\nexport default hasClass;\n","/**\n * A global namespace for `document.body`.\n */\nconst { body: documentBody } = document;\nexport default documentBody;\n","/**\n * A global namespace for `document.documentElement` or the `<HTML>`.\n */\nconst { documentElement } = document;\nexport default documentElement;\n","/**\n * Shortie for `Array.from()` static method.\n * The utility should also work with any typed arrays\n * like Float64Array or Int32Array.\n *\n * @param arr array-like iterable object\n * @returns a new array from iterable object\n */\nconst ArrayFrom = <T>(arr: ArrayLike<T> | Iterable<T>): T[] => Array.from(arr);\n\nexport default ArrayFrom;\n","/**\n * Checks if an element is an `HTMLElement`.\n *\n * @see https://dom.spec.whatwg.org/#node\n *\n * @param element the target object\n * @returns the query result\n */\nconst isHTMLElement = (element?: HTMLElement | Node): element is HTMLElement =>\n  (element && element.nodeType === 1) || false;\nexport default isHTMLElement;\n","import isHTMLElement from '../is/isHTMLElement';\n\ntype MConstructor<T extends new (...args: any[]) => any> = new (\n  ...args: ConstructorParameters<T>\n) => InstanceType<T>;\n\nconst componentData = new Map<MConstructor<any>, Map<HTMLElement, InstanceType<any>>>();\n\n/**\n * An interface for web components background data.\n *\n * @see https://github.com/thednp/bootstrap.native/blob/master/src/components/base-component.js\n */\nconst Data = {\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: <T extends MConstructor<T>>(\n    element: HTMLElement,\n    component: T,\n    instance: InstanceType<T>,\n  ): void => {\n    if (!isHTMLElement(element)) return;\n\n    /* istanbul ignore else */\n    if (!componentData.has(component)) {\n      componentData.set(component, new Map<HTMLElement, InstanceType<T>>());\n    }\n\n    const instanceMap = componentData.get(component) as Map<HTMLElement, InstanceType<T>>;\n    // not undefined, but defined right above\n    instanceMap.set(element, instance);\n  },\n\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: <T extends MConstructor<T>>(\n    component: T,\n  ): Map<HTMLElement, InstanceType<T>> | null => {\n    const instanceMap = componentData.get(component) as Map<HTMLElement, InstanceType<T>>;\n\n    return instanceMap || null;\n  },\n\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: <T extends MConstructor<T>>(element: HTMLElement, component: T): InstanceType<T> | null => {\n    if (!isHTMLElement(element) || !component) return null;\n    const instanceMap = Data.getAllFor<T>(component);\n    const instance = element && instanceMap && instanceMap.get(element);\n\n    // return (instance as T) || null;\n    return instance || null;\n  },\n\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: <T extends MConstructor<T>>(element: HTMLElement, component: T): void => {\n    const instanceMap = Data.getAllFor<T>(component);\n    if (!instanceMap || !isHTMLElement(element)) return;\n\n    instanceMap.delete(element);\n\n    /* istanbul ignore else */\n    if (instanceMap.size === 0) {\n      componentData.delete(component);\n    }\n  },\n};\n\n/**\n * An alias for `Data.get()`.\n */\nexport const getInstance = <T extends MConstructor<T>>(\n  target: HTMLElement,\n  component: T,\n): InstanceType<T> | null => Data.get<T>(target, component);\n\nexport default Data;\n","/**\n * Shortie for `typeof SOMETHING === \"string\"`.\n *\n * @param str input value\n * @returns the query result\n */\nconst isString = (str?: string): str is string => typeof str === 'string' || false;\n\nexport default isString;\n","/**\n * Checks if an object is a `Node`.\n *\n * @param node the target object\n * @returns the query result\n */\n\nconst isNode = (node?: Node): node is Node =>\n  (node && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some(x => node.nodeType === x)) || false;\n\nexport default isNode;\n","/**\n * Check if a target object is `Window`.\n * => equivalent to `object instanceof Window`\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isWindow = (obj?: Node | Window): obj is Window =>\n  (obj && obj.constructor.name === 'Window') || false;\n\nexport default isWindow;\n","/**\n * Checks if an object is a `Document`.\n *\n * @see https://dom.spec.whatwg.org/#node\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isDocument = (obj?: Node | Document): obj is Document => (obj && obj.nodeType === 9) || false;\n\nexport default isDocument;\n","import isNode from '../is/isNode';\nimport isWindow from '../is/isWindow';\nimport isDocument from '../is/isDocument';\n\n/**\n * Returns the `document` or the `#document` element.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param node the reference node\n * @returns the parent document of the given node\n */\nconst getDocument = (node?: Node | Document | Window): Document => {\n  // node instanceof Window\n  if (isWindow(node)) return node.document;\n  // node instanceof Document\n  if (isDocument(node)) return node;\n  // node instanceof Node\n  if (isNode(node)) return node.ownerDocument as Document;\n  // node is undefined | NULL\n  return window.document;\n};\n\nexport default getDocument;\n","/**\n * Shortcut for `Object.entries()` static method.\n *\n * @param obj a target object\n * @returns the entries of an object in an array format [key, value][]\n * @see https://github.com/devinrhode2/ObjectTyped/blob/master/src/index.ts\n */\nconst ObjectEntries = <O extends Record<string, any>>(obj: O) =>\n  Object.entries(obj) as [keyof O, O[keyof O]][];\n\nexport default ObjectEntries;\n","import isString from '../is/isString';\nimport setAttribute from '../attr/setAttribute';\nimport getDocument from '../get/getDocument';\nimport ObjectEntries from './ObjectEntries';\n\n/**\n * Shortie for `document.createElement` method\n * which allows you to create a new `HTMLElement` for a given `tagName`\n * or based on an object with specific non-readonly attributes with string values:\n * `id`, `className`, `textContent`, `style`, etc.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement\n *\n * @param param `tagName` or object\n * @return a new `HTMLElement`\n */\nconst createElement = (\n  param?: string | Exclude<HTMLElement, ((...args: any[]) => any) | object>,\n): HTMLElement | undefined => {\n  if (!param) return undefined;\n\n  if (isString(param)) {\n    return getDocument().createElement(param);\n  }\n\n  const { tagName } = param;\n  const newElement = createElement(tagName as string);\n\n  if (!newElement) return undefined;\n\n  const attr = { ...(param as Record<string, unknown>) };\n  delete attr.tagName;\n\n  ObjectEntries(attr).forEach(([key, value]) => {\n    if (isString(key as string) && isString(value as string)) {\n      setAttribute(newElement, key as string, value as string);\n    }\n  });\n  return newElement;\n};\n\nexport default createElement;\n","import getDocument from '../get/getDocument';\nimport ObjectEntries from './ObjectEntries';\nimport setAttribute from '../attr/setAttribute';\nimport isString from '../is/isString';\n\n/**\n * Shortie for `document.createElementNS` method\n * which allows you to create a new `HTMLElement` for a given `tagName`\n * or based on an object with specific non-readonly attributes with string values:\n * `id`, `className`, `textContent`, `style`, etc.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/createElementNS\n *\n * @param ns `namespaceURI` to associate with the new `HTMLElement`\n * @param param `tagName` or object\n * @return a new `HTMLElement`\n */\nconst createElementNS = (\n  ns: string,\n  param?: string | Exclude<HTMLElement, ((...args: any[]) => any) | object>,\n): HTMLElement | undefined => {\n  if (!ns || !param) return undefined;\n\n  if (isString(param)) {\n    return getDocument().createElementNS(ns, param) as HTMLElement;\n  }\n\n  const { tagName } = param;\n  const newElement = createElementNS(ns, tagName);\n\n  if (!newElement) return undefined;\n\n  const attr = { ...(param as Record<string, unknown>) };\n  delete attr.tagName;\n\n  ObjectEntries(attr).forEach(([key, value]) => {\n    if (isString(key as string) && isString(value as string)) {\n      setAttribute(newElement, key as string, value as string);\n    }\n  });\n\n  return newElement;\n};\n\nexport default createElementNS;\n","/**\n * Shortcut for the `Element.dispatchEvent(Event)` method.\n *\n * @param element is the target\n * @param event is the `Event` object\n */\nconst dispatchEvent = (element: EventTarget, event: Event): boolean => element.dispatchEvent(event);\n\nexport default dispatchEvent;\n","/**\n * JavaScript `Array` distinct.\n *\n * @see https://codeburst.io/javascript-array-distinct-5edc93501dc4\n *\n * @example\n * ```\n * [0,1,1,2].filter(distinct)\n * // => [0,1,2]\n * ```\n * @param value array item value\n * @param index array item index\n * @param arr a clone of the target array\n * @returns the query result\n */\nconst distinct = <T>(value: T, index: number, arr: T[]): boolean => arr.indexOf(value) === index;\n\nexport default distinct;\n","// import CSS4Declaration from \"../interface/css4Declaration\";\n\n/**\n * Shortcut for `window.getComputedStyle(element).propertyName`\n * static method.\n *\n * * If `element` parameter is not an `HTMLElement`, `getComputedStyle`\n * throws a `ReferenceError`.\n *\n * @param element target\n * @param property the css property\n * @return the css property value\n */\nconst getElementStyle = (element: HTMLElement, property: string): string => {\n  const computedStyle = getComputedStyle(element);\n  const prop = property\n    .replace('webkit', 'Webkit')\n    .replace(/([A-Z])/g, '-$1')\n    .toLowerCase();\n\n  // modern browsers only\n  return computedStyle.getPropertyValue(prop);\n};\n\nexport default getElementStyle;\n","import animationDelay from '../strings/animationDelay';\nimport animationName from '../strings/animationName';\nimport getElementStyle from './getElementStyle';\n\n/**\n * Utility to get the computed `animationDelay`\n * from Element in miliseconds.\n *\n * @param element target\n * @return the `animationDelay` value in miliseconds\n */\nconst getElementAnimationDelay = (element: HTMLElement): number => {\n  const propertyValue = getElementStyle(element, animationName);\n  const durationValue = getElementStyle(element, animationDelay);\n  const durationScale = durationValue.includes('ms') ? /* istanbul ignore next */ 1 : 1000;\n  const duration =\n    propertyValue && propertyValue !== 'none' ? parseFloat(durationValue) * durationScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */ 0;\n};\n\nexport default getElementAnimationDelay;\n","import animationDuration from '../strings/animationDuration';\nimport animationName from '../strings/animationName';\nimport getElementStyle from './getElementStyle';\n\n/**\n * Utility to get the computed `animationDuration`\n * from `HTMLElement` in miliseconds.\n *\n * @param element target\n * @return the `animationDuration` value in miliseconds\n */\nconst getElementAnimationDuration = (element: HTMLElement): number => {\n  const propertyValue = getElementStyle(element, animationName);\n  const durationValue = getElementStyle(element, animationDuration);\n  const durationScale = durationValue.includes('ms') ? /* istanbul ignore next */ 1 : 1000;\n  const duration =\n    propertyValue && propertyValue !== 'none' ? parseFloat(durationValue) * durationScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */ 0;\n};\n\nexport default getElementAnimationDuration;\n","import animationEndEvent from '../strings/animationEndEvent';\nimport getElementAnimationDelay from '../get/getElementAnimationDelay';\nimport getElementAnimationDuration from '../get/getElementAnimationDuration';\nimport dispatchEvent from './dispatchEvent';\n\n/**\n * Utility to make sure callbacks are consistently\n * called when animation ends.\n *\n * @param element target\n * @param handler `animationend` callback\n */\nconst emulateAnimationEnd = (element: HTMLElement, handler: EventListener): void => {\n  let called = 0;\n  const endEvent = new Event(animationEndEvent);\n  const duration = getElementAnimationDuration(element);\n  const delay = getElementAnimationDelay(element);\n\n  if (duration) {\n    /** Wrap the handler in on -> off callback */\n    const animationEndWrapper = (e: Event): void => {\n      /* istanbul ignore else */\n      if (e.target === element) {\n        handler.apply(element, [e]);\n        element.removeEventListener(animationEndEvent, animationEndWrapper);\n        called = 1;\n      }\n    };\n    element.addEventListener(animationEndEvent, animationEndWrapper);\n    setTimeout(() => {\n      /* istanbul ignore next */\n      if (!called) dispatchEvent(element, endEvent);\n    }, duration + delay + 17);\n  } else {\n    handler.apply(element, [endEvent]);\n  }\n};\n\nexport default emulateAnimationEnd;\n","import transitionDelay from '../strings/transitionDelay';\nimport transitionProperty from '../strings/transitionProperty';\nimport getElementStyle from './getElementStyle';\n\n/**\n * Utility to get the computed `transitionDelay`\n * from Element in miliseconds.\n *\n * @param element target\n * @return the `transitionDelay` value in miliseconds\n */\nconst getElementTransitionDelay = (element: HTMLElement): number => {\n  const propertyValue = getElementStyle(element, transitionProperty);\n  const delayValue = getElementStyle(element, transitionDelay);\n  const delayScale = delayValue.includes('ms') ? /* istanbul ignore next */ 1 : 1000;\n  const duration =\n    propertyValue && propertyValue !== 'none' ? parseFloat(delayValue) * delayScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */ 0;\n};\n\nexport default getElementTransitionDelay;\n","import transitionDuration from '../strings/transitionDuration';\nimport transitionProperty from '../strings/transitionProperty';\nimport getElementStyle from './getElementStyle';\n\n/**\n * Utility to get the computed `transitionDuration`\n * from Element in miliseconds.\n *\n * @param element target\n * @return the `transitionDuration` value in miliseconds\n */\nconst getElementTransitionDuration = (element: HTMLElement): number => {\n  const propertyValue = getElementStyle(element, transitionProperty);\n  const durationValue = getElementStyle(element, transitionDuration);\n  const durationScale = durationValue.includes('ms') ? /* istanbul ignore next */ 1 : 1000;\n  const duration =\n    propertyValue && propertyValue !== 'none' ? parseFloat(durationValue) * durationScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */ 0;\n};\n\nexport default getElementTransitionDuration;\n","import transitionEndEvent from '../strings/transitionEndEvent';\nimport getElementTransitionDelay from '../get/getElementTransitionDelay';\nimport getElementTransitionDuration from '../get/getElementTransitionDuration';\nimport dispatchEvent from './dispatchEvent';\n\n/**\n * Utility to make sure callbacks are consistently\n * called when transition ends.\n *\n * @param element event target\n * @param handler `transitionend` callback\n */\nconst emulateTransitionEnd = (element: HTMLElement, handler: EventListener): void => {\n  let called = 0;\n  const endEvent = new Event(transitionEndEvent);\n  const duration = getElementTransitionDuration(element);\n  const delay = getElementTransitionDelay(element);\n\n  if (duration) {\n    /** Wrap the handler in on -> off callback */\n    const transitionEndWrapper = (e: Event): void => {\n      /* istanbul ignore else */\n      if (e.target === element) {\n        handler.apply(element, [e]);\n        element.removeEventListener(transitionEndEvent, transitionEndWrapper);\n        called = 1;\n      }\n    };\n    element.addEventListener(transitionEndEvent, transitionEndWrapper);\n    setTimeout(() => {\n      /* istanbul ignore next */\n      if (!called) dispatchEvent(element, endEvent);\n    }, duration + delay + 17);\n  } else {\n    handler.apply(element, [endEvent]);\n  }\n};\n\nexport default emulateTransitionEnd;\n","/**\n * Shortcut for `Float32Array.from()` static method.\n *\n * @param arr array-like iterable object\n * @returns a new Float32Array\n */\nconst Float32ArrayFrom = (arr: ArrayLike<number> | Iterable<number>): Float32Array =>\n  Float32Array.from(Array.from(arr));\n\nexport default Float32ArrayFrom;\n","/**\n * Shortcut for `Float64Array.from()` static method.\n *\n * @param arr array-like iterable object\n * @returns a new Float64Array\n */\nconst Float64ArrayFrom = (arr: ArrayLike<number> | Iterable<number>): Float64Array =>\n  Float64Array.from(Array.from(arr));\n\nexport default Float64ArrayFrom;\n","/**\n * Shortie for `HTMLElement.focus()` method.\n *\n * @param element is the target\n * @param options allows to pass additional options such as `preventScroll: boolean`\n */\nconst focus = (element: HTMLOrSVGElement, options?: FocusOptions): void => element.focus(options);\n\nexport default focus;\n","type NormalValue = boolean | number | string | ((...args: any[]) => any) | null;\n\n/**\n * Utility to normalize component options\n *\n * @param value the input value\n * @return the normalized value\n */\nconst normalizeValue = (value?: boolean | number | string): NormalValue => {\n  if (['true', true].includes(value as boolean)) {\n    return true;\n  }\n\n  if (['false', false].includes(value as boolean)) {\n    return false;\n  }\n\n  if (['null', '', null, undefined].includes(value as string | undefined)) {\n    return null;\n  }\n\n  if (value !== '' && !Number.isNaN(+(value as string))) {\n    return +(value as string);\n  }\n\n  // string / function / HTMLElement / object / undefined\n  return value as NormalValue;\n};\n\nexport default normalizeValue;\n","/**\n * Shortcut for `String.toLowerCase()`.\n *\n * @param source input string\n * @returns lowercase output string\n */\nconst toLowerCase = (source: string): string => source.toLowerCase();\n\nexport default toLowerCase;\n","import getAttribute from '../attr/getAttribute';\nimport normalizeValue from './normalizeValue';\nimport ObjectEntries from './ObjectEntries';\nimport toLowerCase from './toLowerCase';\n// import { optionValues } from '../types';\n\n/**\n * Utility to normalize component options.\n *\n * @param element target\n * @param defaultOps component default options\n * @param inputOps component instance options\n * @param ns component namespace\n * @return normalized component options object\n */\nconst normalizeOptions = <T extends { [key: string]: any }>(\n  element: HTMLElement,\n  defaultOps: T,\n  inputOps: Partial<T>,\n  ns?: string,\n): T => {\n  const INPUT = { ...inputOps };\n  const data = { ...element.dataset };\n  const normalOps = { ...defaultOps };\n  const dataOps: Partial<T> = {};\n  const title = 'title';\n\n  ObjectEntries(data).forEach(([k, v]) => {\n    const key: keyof T =\n      ns && typeof k === 'string' && k.includes(ns)\n        ? k.replace(ns, '').replace(/[A-Z]/g, (match: string) => toLowerCase(match))\n        : k;\n\n    dataOps[key] = normalizeValue(v) as T[keyof T];\n  });\n\n  ObjectEntries(INPUT).forEach(([k, v]) => {\n    INPUT[k] = normalizeValue(v) as T[keyof T];\n  });\n\n  ObjectEntries(defaultOps).forEach(([k, v]) => {\n    /* istanbul ignore else */\n    if (k in INPUT) {\n      normalOps[k] = INPUT[k] as T[keyof T];\n    } else if (k in dataOps) {\n      normalOps[k] = dataOps[k] as T[keyof T];\n    } else {\n      normalOps[k] = (k === title ? getAttribute(element, title) : v) as T[keyof T];\n    }\n  });\n\n  return normalOps;\n};\n\nexport default normalizeOptions;\n","/**\n * Overloads for Object.assign.\n *\n * @see https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/object-assign/index.d.ts\n */\ndeclare function ObjectAssignTyped<T, U>(target: T, source: U): T & U;\ndeclare function ObjectAssignTyped<T, U, V>(target: T, source1: U, source2: V): T & U & V;\ndeclare function ObjectAssignTyped<T, U, V, W>(\n  target: T,\n  source1: U,\n  source2: V,\n  source3: W,\n): T & U & V & W;\ndeclare function ObjectAssignTyped<T, U, V, W, Q>(\n  target: T,\n  source1: U,\n  source2: V,\n  source3: W,\n  source4: Q,\n): T & U & V & W & Q;\ndeclare function ObjectAssignTyped<T, U, V, W, Q, R>(\n  target: T,\n  source1: U,\n  source2: V,\n  source3: W,\n  source4: Q,\n  source5: R,\n): T & U & V & W & Q & R;\ndeclare function ObjectAssignTyped(target: any, ...sources: any[]): any;\n\n/**\n * Shortcut for `Object.assign()` static method.\n *\n * @param obj a target object\n * @param source source object(s)\n * @see https://github.com/devinrhode2/ObjectTyped/blob/master/src/index.ts\n */\nconst ObjectAssign: typeof ObjectAssignTyped = <A extends Record<string, any>, B>(\n  obj: A,\n  ...source: B[]\n): B extends Record<string, any>[] ? any : A & B => Object.assign(obj, ...source);\n\nexport default ObjectAssign;\n","/**\n * Shortcut for `Object.keys()` static method.\n *\n * @param obj a target object\n * @returns an array with object keys\n * @see https://github.com/devinrhode2/ObjectTyped/blob/master/src/index.ts\n */\nconst ObjectKeys = <O extends Record<string, any>>(obj: O) => Object.keys(obj) as (keyof O)[];\n\nexport default ObjectKeys;\n","/**\n * Shortcut for `Object.values()` static method.\n *\n * @param obj a target object\n * @returns an array with the object values\n * @see https://github.com/devinrhode2/ObjectTyped/blob/master/src/index.ts\n */\nconst ObjectValues = <O extends Record<string, unknown>>(obj: O): O[keyof O][] =>\n  Object.values(obj) as O[keyof O][];\n\nexport default ObjectValues;\n","/**\n * Checks if a value is an `Object`.\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isObject = (obj?: object): obj is object => typeof obj === 'object' || false;\n\nexport default isObject;\n","import { OriginalEvent } from '../interface/originalEvent';\nimport isObject from '../is/isObject';\nimport ObjectAssign from './ObjectAssign';\n\n/**\n * Returns a namespaced `CustomEvent` specific to each component.\n *\n * @param eventType Event.type\n * @param config Event.options | Event.properties\n * @returns a new namespaced event\n */\nconst createCustomEvent = <T extends OriginalEvent>(\n  eventType: string,\n  config?: CustomEventInit<any>,\n): T => {\n  const OriginalCustomEvent = new CustomEvent<any>(eventType, {\n    cancelable: true,\n    bubbles: true,\n  } as CustomEventInit<any>) as T;\n\n  /* istanbul ignore else */\n  if (isObject(config)) {\n    ObjectAssign(OriginalCustomEvent, config);\n  }\n  return OriginalCustomEvent;\n};\n\nexport default createCustomEvent;\n","/**\n * A global namespace for most scroll event listeners.\n */\nconst passiveHandler: Partial<AddEventListenerOptions> = { passive: true };\n\nexport default passiveHandler;\n","/**\n * Utility to force re-paint of an `HTMLElement` target.\n *\n * @param element is the target\n * @return the `Element.offsetHeight` value\n */\nconst reflow = (element: HTMLElement): number => element.offsetHeight;\n\nexport default reflow;\n","import ObjectAssign from './ObjectAssign';\nimport ObjectEntries from './ObjectEntries';\nimport { CSS4Declaration } from '../interface/css4Declaration';\nimport isString from '../is/isString';\n\n/**\n * Shortcut for multiple uses of `HTMLElement.style.propertyName` method.\n *\n * @param element target element\n * @param styles attribute value\n */\nconst setElementStyle = (element: HTMLElement, styles: Partial<CSS4Declaration>): void => {\n  ObjectEntries(styles).forEach(([key, value]) => {\n    if (value && isString(key as string) && (key as string).includes('--')) {\n      element.style.setProperty(key as string, value);\n    } else {\n      const propObject: Partial<CSS4Declaration> = {};\n      propObject[key] = value;\n      ObjectAssign(element.style, propObject);\n    }\n  });\n};\nexport default setElementStyle;\n","/**\n * Checks if an element is a `Map`.\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isMap = <T extends Map<any, any>>(obj?: T): obj is T =>\n  (obj && obj.constructor.name === 'Map') || false;\nexport default isMap;\n","/**\n * Shortie for `typeof SOMETHING === \"number\"`.\n *\n * @param num input value\n * @returns the query result\n */\nconst isNumber = (num?: number): num is number => typeof num === 'number' || false;\n\nexport default isNumber;\n","import isMap from '../is/isMap';\nimport isHTMLElement from '../is/isHTMLElement';\nimport isNumber from '../is/isNumber';\n\ntype KeyMap = Map<string, number>;\ntype TimeMap = Map<HTMLElement, number | KeyMap>;\n\nconst TimeCache: TimeMap = new Map() as TimeMap;\n/**\n * An interface for one or more `TimerHandler`s per `Element`.\n *\n * @see https://github.com/thednp/navbar/\n */\nconst Timer = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (element: HTMLElement, callback: TimerHandler, delay: number, key?: string): void => {\n    if (!isHTMLElement(element)) return;\n\n    /* istanbul ignore else */\n    if (key && key.length) {\n      /* istanbul ignore else */\n      if (!TimeCache.has(element)) {\n        TimeCache.set(element, new Map());\n      }\n      // eslint-disable-next-line @typescript-eslint/no-implied-eval\n      (TimeCache.get(element) as KeyMap).set(key, setTimeout(callback, delay));\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-implied-eval\n      TimeCache.set(element, setTimeout(callback, delay));\n    }\n  },\n\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (element: HTMLElement, key?: string): number | null => {\n    if (!isHTMLElement(element)) return null;\n    const keyTimers = TimeCache.get(element);\n\n    if (key && keyTimers && isMap(keyTimers as KeyMap)) {\n      return (keyTimers as KeyMap).get(key) || /* istanbul ignore next */ null;\n    } else if (isNumber(keyTimers as number)) {\n      return keyTimers as number;\n    }\n    return null;\n  },\n\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (element: HTMLElement, key?: string): void => {\n    if (!isHTMLElement(element)) return;\n\n    const keyTimers = TimeCache.get(element);\n\n    if (key && key.length && isMap(keyTimers as KeyMap)) {\n      clearTimeout((keyTimers as KeyMap).get(key));\n      (keyTimers as KeyMap).delete(key);\n      /* istanbul ignore else */\n      if ((keyTimers as KeyMap).size === 0) {\n        TimeCache.delete(element);\n      }\n    } else {\n      clearTimeout(keyTimers as number);\n      TimeCache.delete(element);\n    }\n  },\n};\n\nexport default Timer;\n","/**\n * Shortcut for `String.toUpperCase()`.\n *\n * @param source input string\n * @returns uppercase output string\n */\nconst toUpperCase = (source: string): string => source.toUpperCase();\n\nexport default toUpperCase;\n","import isHTMLElement from '../is/isHTMLElement';\nimport { BoundingClientRect } from '../interface/boundingClientRect';\n\n/**\n * Returns the bounding client rect of a target `HTMLElement`.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element event.target\n * @param includeScale when *true*, the target scale is also computed\n * @returns the bounding client rect object\n */\nconst getBoundingClientRect = (\n  element: HTMLElement,\n  includeScale?: boolean,\n): BoundingClientRect => {\n  const { width, height, top, right, bottom, left } = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    const { offsetWidth, offsetHeight } = element;\n    scaleX = offsetWidth > 0 ? Math.round(width) / offsetWidth : /* istanbul ignore next */ 1;\n    scaleY = offsetHeight > 0 ? Math.round(height) / offsetHeight : /* istanbul ignore next */ 1;\n  }\n\n  return {\n    width: width / scaleX,\n    height: height / scaleY,\n    top: top / scaleY,\n    right: right / scaleX,\n    bottom: bottom / scaleY,\n    left: left / scaleX,\n    x: left / scaleX,\n    y: top / scaleY,\n  };\n};\n\nexport default getBoundingClientRect;\n","import getDocument from './getDocument';\n\n/**\n * Returns the `document.body` or the `<body>` element.\n *\n * @param node the reference node\n * @returns the parent `<body>` of the specified node\n */\nconst getDocumentBody = (node?: Node): HTMLElement => {\n  return getDocument(node).body;\n};\n\nexport default getDocumentBody;\n","import getDocument from './getDocument';\n\n/**\n * Returns the `document.documentElement` or the `<HTML>` element.\n *\n * @param node the reference node\n * @returns the parent `<HTML>` of the node's parent document\n */\nconst getDocumentElement = (node?: Node): HTMLElement => {\n  return getDocument(node).documentElement;\n};\n\nexport default getDocumentElement;\n","import getDocument from './getDocument';\n/**\n * Returns the `document.head` or the `<head>` element.\n *\n * @param node the reference node\n * @returns the `<head>` of the node's parent document\n */\nconst getDocumentHead = (node?: Node): HTMLElement & HTMLHeadElement => {\n  return getDocument(node).head;\n};\n\nexport default getDocumentHead;\n","import isWindow from '../is/isWindow';\n\n/**\n * Returns an `{x,y}` object with the target\n * `HTMLElement` / `Node` scroll position.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element target node / element\n * @returns the scroll tuple\n */\nconst getNodeScroll = (element: HTMLElement | Window): { x: number; y: number } => {\n  const isWin = isWindow(element);\n  const x = isWin ? element.scrollX : element.scrollLeft;\n  const y = isWin ? element.scrollY : element.scrollTop;\n\n  return { x, y };\n};\n\nexport default getNodeScroll;\n","/**\n * Check if target is a `ShadowRoot`.\n *\n * @param element target\n * @returns the query result\n */\nconst isShadowRoot = (element?: Node | ShadowRoot): element is ShadowRoot =>\n  (element && element.constructor.name === 'ShadowRoot') || false;\n\nexport default isShadowRoot;\n","import getDocumentElement from './getDocumentElement';\nimport isShadowRoot from '../is/isShadowRoot';\nimport isHTMLElement from '../is/isHTMLElement';\nimport isNode from '../is/isNode';\n\n/**\n * Returns the `parentNode` also going through `ShadowRoot`.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {Node} node the target node\n * @returns {Node} the apropriate parent node\n */\nconst getParentNode = (node: Node): Node | ParentNode => {\n  if (node.nodeName === 'HTML') {\n    return node;\n  }\n\n  // this is a quicker (but less type safe) way to save quite some bytes from the bundle\n  return (\n    (isHTMLElement(node) && node.assignedSlot) || // step into the shadow DOM of the parent of a slotted node\n    (isNode(node) && node.parentNode) || // DOM Element detected\n    (isShadowRoot(node) && node.host) || // ShadowRoot detected\n    getDocumentElement(node) // fallback to <HTML>\n  );\n};\n\nexport default getParentNode;\n","import isHTMLElement from './isHTMLElement';\nimport getBoundingClientRect from '../get/getBoundingClientRect';\n\n/**\n * Checks if a target `HTMLElement` is affected by scale.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element target\n * @returns the query result\n */\nconst isScaledElement = (element?: HTMLElement): boolean => {\n  if (!isHTMLElement(element)) return false;\n  const { width, height } = getBoundingClientRect(element);\n  const { offsetWidth, offsetHeight } = element;\n  return Math.round(width) !== offsetWidth || Math.round(height) !== offsetHeight;\n};\n\nexport default isScaledElement;\n","import { OffsetRect } from '../interface/offsetRect';\nimport isScaledElement from '../is/isScaledElement';\nimport isHTMLElement from '../is/isHTMLElement';\nimport getBoundingClientRect from './getBoundingClientRect';\n\n/**\n * Returns the rect relative to a given offset parent and its scroll position.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element target\n * @param offsetParent the container / offset parent\n * @param scroll the offsetParent scroll position\n * @returns a DOMRect like object\n */\nconst getRectRelativeToOffsetParent = (\n  element: HTMLElement,\n  offsetParent: HTMLElement,\n  scroll: { x: number; y: number },\n): OffsetRect => {\n  const isParentAnElement = isHTMLElement(offsetParent);\n  const rect = getBoundingClientRect(element, isParentAnElement && isScaledElement(offsetParent));\n  const offsets = { x: 0, y: 0 };\n\n  /* istanbul ignore next */\n  if (isParentAnElement) {\n    const offsetRect = getBoundingClientRect(offsetParent, true);\n    offsets.x = offsetRect.x + offsetParent.clientLeft;\n    offsets.y = offsetRect.y + offsetParent.clientTop;\n  }\n\n  return {\n    x: rect.left + scroll.x - offsets.x,\n    y: rect.top + scroll.y - offsets.y,\n    width: rect.width,\n    height: rect.height,\n  };\n};\n\nexport default getRectRelativeToOffsetParent;\n","import isMap from '../is/isMap';\n\nlet elementUID = 0;\nlet elementMapUID = 0;\n\ntype KeyIdMap = Map<string | number, number>;\ntype IDMap = Map<number | string | HTMLElement, number | KeyIdMap>;\n\nconst elementIDMap: IDMap = new Map();\n\n/**\n * Returns a unique identifier for popover, tooltip, scrollspy.\n *\n * @param element target element\n * @param key optional identifier key\n * @returns an existing or new unique ID\n */\nconst getUID = (element: HTMLElement, key?: string): number => {\n  let result = key ? elementUID : elementMapUID;\n\n  if (key) {\n    const elID = getUID(element);\n    const elMap = elementIDMap.get(elID) || (new Map() as KeyIdMap);\n    if (!elementIDMap.has(elID)) {\n      elementIDMap.set(elID, elMap);\n    }\n    if (isMap(elMap as KeyIdMap) && !(elMap as KeyIdMap).has(key)) {\n      (elMap as KeyIdMap).set(key, result);\n      elementUID += 1;\n    } else result = (elMap as KeyIdMap).get(key) as number;\n  } else {\n    const elkey = element.id || element;\n\n    if (!elementIDMap.has(elkey)) {\n      elementIDMap.set(elkey, result);\n      elementMapUID += 1;\n    } else result = elementIDMap.get(elkey) as number;\n  }\n  return result;\n};\n\nexport default getUID;\n","import isDocument from '../is/isDocument';\nimport isNode from '../is/isNode';\n\n/**\n * Returns the `Window` object of a target node.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param node target node\n * @returns the `Window` object\n */\nconst getWindow = (node?: Node): Window => {\n  // node is undefined | NULL\n  if (!node) return window;\n  // node instanceof Document\n  if (isDocument(node)) return node.defaultView as Window;\n  // node instanceof Node\n  if (isNode(node)) return node?.ownerDocument?.defaultView as Window;\n  // node is instanceof Window\n  return node;\n};\n\nexport default getWindow;\n","/**\n * Shortie for the `Array.isArray()` static method.\n *\n * @param obj array-like iterable object\n * @returns the query result\n */\nconst isArray = (obj?: any): obj is any[] => Array.isArray(obj) || false;\n\nexport default isArray;\n","/**\n * Checks if an element is an `HTMLCanvasElement` or `<canvas>`.\n *\n * @param element the target element\n * @returns the query result\n */\n\nconst isCanvas = (element?: Node): element is HTMLCanvasElement =>\n  (element && element.nodeName === 'CANVAS') || false;\n\nexport default isCanvas;\n","import { CustomElement } from '../interface/customElement';\n\n/**\n * Checks if an object is a `CustomElement`.\n *\n * @param element the target object\n * @returns the query result\n */\nconst isCustomElement = <T extends CustomElement>(element?: T | Node): element is T =>\n  (element && !!(element as CustomElement).shadowRoot) || false;\n\nexport default isCustomElement;\n","/**\n * Checks if an object is an `Element`.\n *\n * @see https://dom.spec.whatwg.org/#node\n *\n * ```\n * ELEMENT_NODE = 1;\n * ATTRIBUTE_NODE = 2;\n * TEXT_NODE = 3;\n * CDATA_SECTION_NODE = 4;\n * ENTITY_REFERENCE_NODE = 5; // legacy\n * ENTITY_NODE = 6; // legacy\n * PROCESSING_INSTRUCTION_NODE = 7;\n * COMMENT_NODE = 8;\n * DOCUMENT_NODE = 9;\n * DOCUMENT_TYPE_NODE = 10;\n * DOCUMENT_FRAGMENT_NODE = 11;\n * ```\n * @param element the target object\n * @returns the query result\n */\nconst isElement = (element?: Element | Node): element is Element =>\n  (element && [1, 2, 3, 4, 5, 6, 7, 8].some(x => element.nodeType === x)) || false;\n\nexport default isElement;\n","import getBoundingClientRect from '../get/getBoundingClientRect';\nimport getDocumentElement from '../get/getDocumentElement';\nimport isNode from './isNode';\n\n/**\n * Utility to determine if an `HTMLElement`\n * is partially visible in viewport.\n *\n * @param element target\n * @return the query result\n */\nconst isElementInScrollRange = (element?: HTMLElement): boolean => {\n  if (!isNode(element)) return false;\n\n  const { top, bottom } = getBoundingClientRect(element);\n  const { clientHeight } = getDocumentElement(element);\n  return top <= clientHeight && bottom >= 0;\n};\n\nexport default isElementInScrollRange;\n","import getBoundingClientRect from '../get/getBoundingClientRect';\nimport getDocumentElement from '../get/getDocumentElement';\nimport isNode from './isNode';\n\n/**\n * Utility to determine if an `HTMLElement`\n * is fully visible in the viewport.\n *\n * @param element target\n * @return the query result\n */\nconst isElementInViewport = (element?: HTMLElement): boolean => {\n  if (!isNode(element)) return false;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const { top, left, bottom, right } = getBoundingClientRect(element, true);\n\n  return top >= 0 && left >= 0 && bottom <= clientHeight && right <= clientWidth;\n};\nexport default isElementInViewport;\n","import isHTMLElement from './isHTMLElement';\nimport isArray from './isArray';\n\n/**\n * Checks if an object is an `Array` in which all items are `Element`.\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isElementsArray = (obj?: any): obj is HTMLElement[] =>\n  (isArray(obj) && obj.every(isHTMLElement)) || false;\n\nexport default isElementsArray;\n","/**\n * Checks if an object is a `Function`.\n *\n * @param fn the target object\n * @returns the query result\n */\nconst isFunction = <T extends (...arg0: any[]) => any>(fn?: T): fn is T =>\n  typeof fn === 'function' || false;\n\nexport default isFunction;\n","/**\n * Checks if an object is an `HTMLCollection`.\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isHTMLCollection = (obj?: HTMLCollection): obj is HTMLCollection =>\n  (obj && obj.constructor.name === 'HTMLCollection') || false;\n\nexport default isHTMLCollection;\n","/**\n * Check if a target element is an `<img>`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst isHTMLImageElement = (element?: HTMLImageElement): element is HTMLImageElement =>\n  (element && element.tagName === 'IMG') || false;\n\nexport default isHTMLImageElement;\n","import isString from './isString';\n\n/**\n * Checks if a string is a `JSON` string.\n *\n * @param str the target string\n * @returns the query result\n */\nconst isJSON = (str?: string): boolean => {\n  if (!isString(str)) return false;\n\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport default isJSON;\n","/**\n * Checks if an element is a `WeakMap`.\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isWeakMap = <T extends WeakMap<any, unknown>>(obj?: T): obj is T =>\n  (obj && obj.constructor.name === 'WeakMap') || false;\nexport default isWeakMap;\n","/**\n * Checks if an element is an `<svg>` (or any type of SVG element),\n * `<img>`, `<video>` or `<canvas>`.\n *\n * *Tooltip* / *Popover* works different with media elements.\n *\n * @param element the target element\n * @returns the query result\n */\n\nconst isMedia = (\n  element?: SVGElement | HTMLImageElement | HTMLVideoElement | HTMLCanvasElement,\n): element is SVGElement | HTMLImageElement | HTMLVideoElement | HTMLCanvasElement =>\n  (element &&\n    element.nodeType === 1 &&\n    ['SVG', 'Image', 'Video', 'Canvas'].some(s => element.constructor.name.includes(s))) ||\n  false;\n\nexport default isMedia;\n","/**\n * Checks if an object is a `NodeList`.\n * => equivalent to `object instanceof NodeList`\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isNodeList = (obj?: NodeList): obj is NodeList =>\n  (obj && obj.constructor.name === 'NodeList') || false;\n\nexport default isNodeList;\n","import getDocumentElement from '../get/getDocumentElement';\n\n/**\n * Checks if a page is Right To Left.\n *\n * @param node the target\n * @returns the query result\n */\nconst isRTL = (node?: Node): boolean => getDocumentElement(node).dir === 'rtl';\n\nexport default isRTL;\n","/**\n * Check if an element is an `<svg>` or any other SVG element,\n * an equivalent to `SOMETHING instanceof SVGElement`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst isSVGElement = (element?: SVGElement): element is SVGElement =>\n  (element && element.constructor.name.includes('SVG')) || false;\n\nexport default isSVGElement;\n","/**\n * Check if a target element is a `<table>`, `<td>` or `<th>`.\n * This specific check is important for determining\n * the `offsetParent` of a given element.\n *\n * @param element the target element\n * @returns the query result\n */\nconst isTableElement = (\n  element?: HTMLTableElement | HTMLTableCellElement,\n): element is HTMLTableElement | HTMLTableCellElement =>\n  (element && ['TABLE', 'TD', 'TH'].includes(element.tagName)) || false;\n\nexport default isTableElement;\n","/**\n * Shortcut for `HTMLElement.closest` method which also works\n * with children of `ShadowRoot`. The order of the parameters\n * is intentional since they're both required.\n *\n * @see https://stackoverflow.com/q/54520554/803358\n *\n * @param element Element to look into\n * @param selector the selector name\n * @return the query result\n */\nconst closest = (element: HTMLElement, selector: string): HTMLElement | null => {\n  return element\n    ? element.closest(selector) ||\n        // break out of `ShadowRoot`\n        closest((element.getRootNode() as HTMLElement & { host: HTMLElement }).host, selector)\n    : null;\n};\n\nexport default closest;\n","import getDocument from '../get/getDocument';\nimport isNode from '../is/isNode';\n\n/**\n * Utility to check if target is typeof `HTMLElement`, `Element`, `Node`\n * or find one that matches a selector.\n *\n * @param selector the input selector or target element\n * @param parent optional node to look into\n * @return the `HTMLElement` or `querySelector` result\n */\nconst querySelector = (selector: Node | string, parent?: ParentNode): HTMLElement | null => {\n  if (isNode(selector as Node)) {\n    return selector as HTMLElement;\n  }\n  const lookUp = parent && isNode(parent) ? parent : getDocument();\n\n  return lookUp.querySelector(selector as string);\n};\n\nexport default querySelector;\n","import getDocument from '../get/getDocument';\nimport isNode from '../is/isNode';\n\n/**\n * Shortcut for `HTMLElement.getElementsByTagName` method. Some `Node` elements\n * like `ShadowRoot` do not support `getElementsByTagName`.\n *\n * @param selector the tag name\n * @param parent optional Element to look into\n * @return the 'HTMLCollection'\n */\nconst getElementsByTagName = (\n  selector: string,\n  parent?: ParentNode,\n): HTMLCollectionOf<HTMLElement> => {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return (lookUp as Document).getElementsByTagName(selector) as HTMLCollectionOf<HTMLElement>;\n};\n\nexport default getElementsByTagName;\n","import { CustomElement } from '../interface/customElement';\nimport isCustomElement from '../is/isCustomElement';\nimport getElementsByTagName from './getElementsByTagName';\n\n/**\n * Returns an `Array` of `Node` elements that are registered as\n * `CustomElement`.\n *\n * @see https://stackoverflow.com/questions/27334365/how-to-get-list-of-registered-custom-elements\n *\n * @param parent parent to look into\n * @returns the query result\n */\nconst getCustomElements = (parent?: ParentNode): CustomElement[] => {\n  const collection = getElementsByTagName('*', parent);\n\n  return [...collection].filter(isCustomElement);\n};\n\nexport default getCustomElements;\n","import getDocument from '../get/getDocument';\n\n/**\n * Returns an `HTMLElement` that matches the id in the document.\n * Within multiple <iframe> elements, a `parent` parameter\n * would decisively locate the correct element.\n *\n * @param id the ID selector\n * @param context an element in it's document or document\n * @returns the requested element\n */\nconst getElementById = (id: string, context?: Node): HTMLElement | null => {\n  return getDocument(context).getElementById(id) || null;\n};\n\nexport default getElementById;\n","import getDocument from '../get/getDocument';\nimport isNode from '../is/isNode';\n\n/**\n * A shortcut for `(document|Element).querySelectorAll`.\n *\n * @param selector the input selector\n * @param parent optional node to look into\n * @return the query result\n */\nconst querySelectorAll = (selector: string, parent?: ParentNode): NodeListOf<HTMLElement> => {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return lookUp.querySelectorAll(selector);\n};\n\nexport default querySelectorAll;\n","import getDocument from '../get/getDocument';\nimport isNode from '../is/isNode';\n\n/**\n * Shortcut for `HTMLElement.getElementsByClassName` method. Some `Node` elements\n * like `ShadowRoot` do not support `getElementsByClassName`.\n *\n * @param selector the class name\n * @param parent optional Element to look into\n * @return the 'HTMLCollection'\n */\nconst getElementsByClassName = (\n  selector: string,\n  parent?: ParentNode,\n): HTMLCollectionOf<HTMLElement> => {\n  const lookUp = parent && isNode(parent) ? parent : getDocument();\n  return (lookUp as HTMLElement | Document).getElementsByClassName(\n    selector,\n  ) as HTMLCollectionOf<HTMLElement>;\n};\n\nexport default getElementsByClassName;\n","/**\n * Check if element matches a CSS selector.\n *\n * @param target the target element\n * @param selector the selector to match\n * @returns the query result\n */\nconst matches = (target: Element, selector: string): boolean => target.matches(selector);\n\nexport default matches;\n","// strings\nimport ariaChecked from './strings/ariaChecked';\nimport ariaDescription from './strings/ariaDescription';\nimport ariaDescribedBy from './strings/ariaDescribedBy';\nimport ariaExpanded from './strings/ariaExpanded';\nimport ariaHasPopup from './strings/ariaHasPopup';\nimport ariaHidden from './strings/ariaHidden';\nimport ariaLabel from './strings/ariaLabel';\nimport ariaLabelledBy from './strings/ariaLabelledBy';\nimport ariaModal from './strings/ariaModal';\nimport ariaPressed from './strings/ariaPressed';\nimport ariaSelected from './strings/ariaSelected';\nimport ariaValueMin from './strings/ariaValueMin';\nimport ariaValueMax from './strings/ariaValueMax';\nimport ariaValueNow from './strings/ariaValueNow';\nimport ariaValueText from './strings/ariaValueText';\n\nimport nativeEvents from './strings/nativeEvents';\nimport abortEvent from './strings/abortEvent';\nimport blurEvent from './strings/blurEvent';\nimport moveEvent from './strings/moveEvent';\nimport changeEvent from './strings/changeEvent';\nimport errorEvent from './strings/errorEvent';\nimport resetEvent from './strings/resetEvent';\nimport resizeEvent from './strings/resizeEvent';\nimport scrollEvent from './strings/scrollEvent';\nimport submitEvent from './strings/submitEvent';\nimport loadEvent from './strings/loadEvent';\nimport loadstartEvent from './strings/loadstartEvent';\nimport unloadEvent from './strings/unloadEvent';\nimport readystatechangeEvent from './strings/readystatechangeEvent';\nimport beforeunloadEvent from './strings/beforeunloadEvent';\nimport orientationchangeEvent from './strings/orientationchangeEvent';\nimport contextmenuEvent from './strings/contextmenuEvent';\nimport DOMContentLoadedEvent from './strings/DOMContentLoadedEvent';\nimport DOMMouseScrollEvent from './strings/DOMMouseScrollEvent';\n\nimport selectEvent from './strings/selectEvent';\nimport selectendEvent from './strings/selectendEvent';\nimport selectstartEvent from './strings/selectstartEvent';\n\nimport mouseSwipeEvents from './strings/mouseSwipeEvents';\nimport mouseClickEvents from './strings/mouseClickEvents';\nimport mouseclickEvent from './strings/mouseclickEvent';\nimport mousedblclickEvent from './strings/mousedblclickEvent';\nimport mousedownEvent from './strings/mousedownEvent';\nimport mouseupEvent from './strings/mouseupEvent';\nimport mousehoverEvent from './strings/mousehoverEvent';\nimport mouseHoverEvents from './strings/mouseHoverEvents';\nimport mouseenterEvent from './strings/mouseenterEvent';\nimport mouseleaveEvent from './strings/mouseleaveEvent';\nimport mouseinEvent from './strings/mouseinEvent';\nimport mouseoutEvent from './strings/mouseoutEvent';\nimport mouseoverEvent from './strings/mouseoverEvent';\nimport mousemoveEvent from './strings/mousemoveEvent';\nimport mousewheelEvent from './strings/mousewheelEvent';\n\nimport touchEvents from './strings/touchEvents';\nimport touchstartEvent from './strings/touchstartEvent';\nimport touchmoveEvent from './strings/touchmoveEvent';\nimport touchcancelEvent from './strings/touchcancelEvent';\nimport touchendEvent from './strings/touchendEvent';\n\nimport pointercancelEvent from './strings/pointercancelEvent';\nimport pointerdownEvent from './strings/pointerdownEvent';\nimport pointerleaveEvent from './strings/pointerleaveEvent';\nimport pointermoveEvent from './strings/pointermoveEvent';\nimport pointerupEvent from './strings/pointerupEvent';\n\nimport focusEvents from './strings/focusEvents';\nimport focusEvent from './strings/focusEvent';\nimport focusinEvent from './strings/focusinEvent';\nimport focusoutEvent from './strings/focusoutEvent';\n\nimport gesturechangeEvent from './strings/gesturechangeEvent';\nimport gestureendEvent from './strings/gestureendEvent';\nimport gesturestartEvent from './strings/gesturestartEvent';\n\nimport keyboardEventKeys from './strings/keyboardEventKeys';\nimport keydownEvent from './strings/keydownEvent';\nimport keyupEvent from './strings/keyupEvent';\nimport keypressEvent from './strings/keypressEvent';\nimport keyAlt from './strings/keyAlt';\nimport keyArrowDown from './strings/keyArrowDown';\nimport keyArrowUp from './strings/keyArrowUp';\nimport keyArrowLeft from './strings/keyArrowLeft';\nimport keyArrowRight from './strings/keyArrowRight';\nimport keyBackspace from './strings/keyBackspace';\nimport keyCapsLock from './strings/keyCapsLock';\nimport keyControl from './strings/keyControl';\nimport keyDelete from './strings/keyDelete';\nimport keyEnter from './strings/keyEnter';\nimport keyEscape from './strings/keyEscape';\nimport keyInsert from './strings/keyInsert';\nimport keyMeta from './strings/keyMeta';\nimport keyPause from './strings/keyPause';\nimport keyScrollLock from './strings/keyScrollLock';\nimport keyShift from './strings/keyShift';\nimport keySpace from './strings/keySpace';\nimport keyTab from './strings/keyTab';\n\nimport animationDuration from './strings/animationDuration';\nimport animationDelay from './strings/animationDelay';\nimport animationName from './strings/animationName';\nimport animationEndEvent from './strings/animationEndEvent';\nimport transitionDuration from './strings/transitionDuration';\nimport transitionDelay from './strings/transitionDelay';\nimport transitionEndEvent from './strings/transitionEndEvent';\nimport transitionProperty from './strings/transitionProperty';\n\nimport addEventListener from './strings/addEventListener';\nimport removeEventListener from './strings/removeEventListener';\n\nimport bezierEasings from './strings/bezierEasings';\n\nimport offsetHeight from './strings/offsetHeight';\nimport offsetWidth from './strings/offsetWidth';\nimport scrollHeight from './strings/scrollHeight';\nimport scrollWidth from './strings/scrollWidth';\nimport tabindex from './strings/tabindex';\n\nimport userAgentData from './strings/userAgentData';\nimport userAgent from './strings/userAgent';\n\n// boolean\nimport isMobile from './boolean/isMobile';\nimport isApple from './boolean/isApple';\nimport isFirefox from './boolean/isFirefox';\nimport support3DTransform from './boolean/support3DTransform';\nimport supportPassive from './boolean/supportPassive';\nimport supportTransform from './boolean/supportTransform';\nimport supportTouch from './boolean/supportTouch';\nimport supportAnimation from './boolean/supportAnimation';\nimport supportTransition from './boolean/supportTransition';\n\n// attributes\nimport getAttribute from './attr/getAttribute';\nimport getAttributeNS from './attr/getAttributeNS';\nimport hasAttribute from './attr/hasAttribute';\nimport hasAttributeNS from './attr/hasAttributeNS';\nimport setAttribute from './attr/setAttribute';\nimport setAttributeNS from './attr/setAttributeNS';\nimport removeAttribute from './attr/removeAttribute';\nimport removeAttributeNS from './attr/removeAttributeNS';\n\n// class\nimport addClass from './class/addClass';\nimport removeClass from './class/removeClass';\nimport hasClass from './class/hasClass';\n\n// event\nimport on from './event/on';\nimport off from './event/off';\nimport one from './event/one';\n\n// blocks\nimport documentBody from './blocks/documentBody';\nimport documentElement from './blocks/documentElement';\nimport documentHead from './blocks/documentHead';\n\n// misc\nimport ArrayFrom from './misc/ArrayFrom';\nimport Data, { getInstance } from './misc/data';\nimport createElement from './misc/createElement';\nimport createElementNS from './misc/createElementNS';\nimport dispatchEvent from './misc/dispatchEvent';\nimport distinct from './misc/distinct';\nimport emulateAnimationEnd from './misc/emulateAnimationEnd';\nimport emulateTransitionEnd from './misc/emulateTransitionEnd';\nimport Float32ArrayFrom from './misc/Float32ArrayFrom';\nimport Float64ArrayFrom from './misc/Float64ArrayFrom';\nimport focus from './misc/focus';\nimport noop from './misc/noop';\nimport normalizeOptions from './misc/normalizeOptions';\nimport normalizeValue from './misc/normalizeValue';\nimport ObjectAssign from './misc/ObjectAssign';\nimport ObjectEntries from './misc/ObjectEntries';\nimport ObjectKeys from './misc/ObjectKeys';\nimport ObjectValues from './misc/ObjectValues';\nimport createCustomEvent from './misc/createCustomEvent';\nimport passiveHandler from './misc/passiveHandler';\nimport reflow from './misc/reflow';\nimport setElementStyle from './misc/setElementStyle';\nimport Timer from './misc/timer';\nimport toLowerCase from './misc/toLowerCase';\nimport toUpperCase from './misc/toUpperCase';\n\n// get\nimport getBoundingClientRect from './get/getBoundingClientRect';\nimport getDocument from './get/getDocument';\nimport getDocumentBody from './get/getDocumentBody';\nimport getDocumentElement from './get/getDocumentElement';\nimport getDocumentHead from './get/getDocumentHead';\nimport getElementAnimationDuration from './get/getElementAnimationDuration';\nimport getElementAnimationDelay from './get/getElementAnimationDelay';\nimport getElementStyle from './get/getElementStyle';\nimport getElementTransitionDuration from './get/getElementTransitionDuration';\nimport getElementTransitionDelay from './get/getElementTransitionDelay';\nimport getNodeScroll from './get/getNodeScroll';\nimport getParentNode from './get/getParentNode';\nimport getRectRelativeToOffsetParent from './get/getRectRelativeToOffsetParent';\nimport getUID from './get/getUID';\nimport getWindow from './get/getWindow';\n\n// is\nimport isArray from './is/isArray';\nimport isCanvas from './is/isCanvas';\nimport isDocument from './is/isDocument';\nimport isCustomElement from './is/isCustomElement';\nimport isElement from './is/isElement';\nimport isElementInScrollRange from './is/isElementInScrollRange';\nimport isElementInViewport from './is/isElementInViewport';\nimport isElementsArray from './is/isElementsArray';\nimport isFunction from './is/isFunction';\nimport isObject from './is/isObject';\nimport isHTMLCollection from './is/isHTMLCollection';\nimport isHTMLElement from './is/isHTMLElement';\nimport isHTMLImageElement from './is/isHTMLImageElement';\nimport isJSON from './is/isJSON';\nimport isMap from './is/isMap';\nimport isWeakMap from './is/isWeakMap';\nimport isMedia from './is/isMedia';\nimport isNode from './is/isNode';\nimport isNodeList from './is/isNodeList';\nimport isNumber from './is/isNumber';\nimport isRTL from './is/isRTL';\nimport isScaledElement from './is/isScaledElement';\nimport isShadowRoot from './is/isShadowRoot';\nimport isString from './is/isString';\nimport isSVGElement from './is/isSVGElement';\nimport isTableElement from './is/isTableElement';\nimport isWindow from './is/isWindow';\n\n// selectors\nimport closest from './selectors/closest';\nimport querySelector from './selectors/querySelector';\nimport getCustomElements from './selectors/getCustomElements';\nimport getElementById from './selectors/getElementById';\nimport querySelectorAll from './selectors/querySelectorAll';\nimport getElementsByTagName from './selectors/getElementsByTagName';\nimport getElementsByClassName from './selectors/getElementsByClassName';\nimport matches from './selectors/matches';\n\nconst SHORTY = {\n  ariaChecked,\n  ariaDescription,\n  ariaDescribedBy,\n  ariaExpanded,\n  ariaHidden,\n  ariaHasPopup,\n  ariaLabel,\n  ariaLabelledBy,\n  ariaModal,\n  ariaPressed,\n  ariaSelected,\n  ariaValueMin,\n  ariaValueMax,\n  ariaValueNow,\n  ariaValueText,\n  nativeEvents,\n  abortEvent,\n  blurEvent,\n  moveEvent,\n  changeEvent,\n  errorEvent,\n  resetEvent,\n  resizeEvent,\n  scrollEvent,\n  submitEvent,\n  loadEvent,\n  loadstartEvent,\n  unloadEvent,\n  readystatechangeEvent,\n  beforeunloadEvent,\n  orientationchangeEvent,\n  contextmenuEvent,\n  DOMContentLoadedEvent,\n  DOMMouseScrollEvent,\n  selectEvent,\n  selectendEvent,\n  selectstartEvent,\n  mouseClickEvents,\n  mouseclickEvent,\n  mousedblclickEvent,\n  mousedownEvent,\n  mouseupEvent,\n  mousehoverEvent,\n  mouseHoverEvents,\n  mouseenterEvent,\n  mouseleaveEvent,\n  mouseinEvent,\n  mouseoutEvent,\n  mouseoverEvent,\n  mousemoveEvent,\n  mousewheelEvent,\n  mouseSwipeEvents,\n  touchEvents,\n  touchstartEvent,\n  touchmoveEvent,\n  touchcancelEvent,\n  touchendEvent,\n  pointercancelEvent,\n  pointerdownEvent,\n  pointerleaveEvent,\n  pointermoveEvent,\n  pointerupEvent,\n  focusEvents,\n  focusEvent,\n  focusinEvent,\n  focusoutEvent,\n  gesturechangeEvent,\n  gestureendEvent,\n  gesturestartEvent,\n  bezierEasings,\n  animationDuration,\n  animationDelay,\n  animationName,\n  animationEndEvent,\n  transitionDuration,\n  transitionDelay,\n  transitionEndEvent,\n  transitionProperty,\n  isMobile,\n  isApple,\n  isFirefox,\n  support3DTransform,\n  supportPassive,\n  supportTransform,\n  supportTouch,\n  supportAnimation,\n  supportTransition,\n  addEventListener,\n  removeEventListener,\n  keyboardEventKeys,\n  keydownEvent,\n  keypressEvent,\n  keyupEvent,\n  keyAlt,\n  keyArrowDown,\n  keyArrowLeft,\n  keyArrowRight,\n  keyArrowUp,\n  keyBackspace,\n  keyCapsLock,\n  keyControl,\n  keyDelete,\n  keyEnter,\n  keyEscape,\n  keyInsert,\n  keyMeta,\n  keyPause,\n  keyScrollLock,\n  keyShift,\n  keySpace,\n  keyTab,\n  offsetHeight,\n  offsetWidth,\n  scrollHeight,\n  scrollWidth,\n  userAgentData,\n  userAgent,\n  tabindex,\n  addClass,\n  removeClass,\n  hasClass,\n  on,\n  off,\n  one,\n  documentBody,\n  documentElement,\n  documentHead,\n  dispatchEvent,\n  distinct,\n  Data,\n  getInstance,\n  createElement,\n  createElementNS,\n  createCustomEvent,\n  toUpperCase,\n  toLowerCase,\n  Timer,\n  emulateAnimationEnd,\n  emulateTransitionEnd,\n  isElementInScrollRange,\n  isElementInViewport,\n  passiveHandler,\n  getElementAnimationDuration,\n  getElementAnimationDelay,\n  getElementTransitionDuration,\n  getElementTransitionDelay,\n  getNodeScroll,\n  getParentNode,\n  getRectRelativeToOffsetParent,\n  getWindow,\n  isArray,\n  isCanvas,\n  isString,\n  isCustomElement,\n  isElement,\n  isJSON,\n  isMap,\n  isWeakMap,\n  isNode,\n  isNumber,\n  isHTMLElement,\n  isHTMLImageElement,\n  isSVGElement,\n  isNodeList,\n  isHTMLCollection,\n  isScaledElement,\n  isTableElement,\n  isShadowRoot,\n  isDocument,\n  isElementsArray,\n  isFunction,\n  isObject,\n  isWindow,\n  isMedia,\n  isRTL,\n  closest,\n  querySelector,\n  getCustomElements,\n  getElementById,\n  querySelectorAll,\n  getElementsByClassName,\n  getElementsByTagName,\n  matches,\n  normalizeValue,\n  normalizeOptions,\n  reflow,\n  noop,\n  focus,\n  getUID,\n  ArrayFrom,\n  Float32ArrayFrom,\n  Float64ArrayFrom,\n  ObjectAssign,\n  ObjectEntries,\n  ObjectKeys,\n  ObjectValues,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getDocumentHead,\n  getElementStyle,\n  setElementStyle,\n  hasAttribute,\n  hasAttributeNS,\n  getAttribute,\n  getAttributeNS,\n  setAttribute,\n  setAttributeNS,\n  removeAttribute,\n  removeAttributeNS,\n};\n\nexport default SHORTY;\n"],"names":["ariaChecked","ariaDescription","ariaDescribedBy","ariaExpanded","ariaHasPopup","ariaHidden","ariaLabel","ariaLabelledBy","ariaModal","ariaPressed","ariaSelected","ariaValueMin","ariaValueMax","ariaValueNow","ariaValueText","abortEvent","beforeunloadEvent","blurEvent","changeEvent","contextmenuEvent","DOMContentLoadedEvent","DOMMouseScrollEvent","errorEvent","focusEvent","focusinEvent","focusoutEvent","gesturechangeEvent","gestureendEvent","gesturestartEvent","keydownEvent","keypressEvent","keyupEvent","loadEvent","mouseclickEvent","mousedblclickEvent","mousedownEvent","mouseupEvent","mousehoverEvent","mouseenterEvent","mouseleaveEvent","mouseinEvent","mouseoutEvent","mouseoverEvent","mousemoveEvent","mousewheelEvent","moveEvent","orientationchangeEvent","pointercancelEvent","pointerdownEvent","pointerleaveEvent","pointermoveEvent","pointerupEvent","readystatechangeEvent","resetEvent","resizeEvent","selectEvent","selectendEvent","selectstartEvent","scrollEvent","submitEvent","touchstartEvent","touchmoveEvent","touchcancelEvent","touchendEvent","unloadEvent","nativeEvents","DOMContentLoaded","DOMMouseScroll","abort","beforeunload","blur","change","click","contextmenu","dblclick","error","focus","focusin","focusout","gesturechange","gestureend","gesturestart","hover","keydown","keypress","keyup","load","mousedown","mousemove","mousein","mouseout","mouseenter","mouseleave","mouseover","mouseup","mousewheel","move","orientationchange","pointercancel","pointerdown","pointerleave","pointermove","pointerup","readystatechange","reset","resize","scroll","select","selectend","selectstart","submit","touchcancel","touchend","touchmove","touchstart","unload","loadstartEvent","mouseSwipeEvents","mouseClickEvents","mouseHoverEvents","touchEvents","focusEvents","keyboardEventKeys","keyAlt","keyArrowDown","keyArrowUp","keyArrowLeft","keyArrowRight","keyBackspace","keyCapsLock","keyControl","keyDelete","keyEnter","keyEscape","keyInsert","keyMeta","keyPause","keyScrollLock","keyShift","keySpace","keyTab","animationDuration","animationDelay","animationName","animationEndEvent","transitionDuration","transitionDelay","transitionEndEvent","transitionProperty","addEventListener","removeEventListener","bezierEasings","offsetHeight","offsetWidth","scrollHeight","scrollWidth","tabindex","uaDATA","userAgentData","userAgentString","userAgent","mobileBrands","isMobileCheck","x","isMobile","appleBrands","isApple","isFirefox","documentHead","support3DTransform","p","on","element","eventName","listener","options","ops","off","one","handlerWrapper","e","noop","supportPassive","result","opts","supportTransform","supportTouch","supportAnimation","supportTransition","getAttribute","att","getAttributeNS","ns","hasAttribute","hasAttributeNS","setAttribute","value","setAttributeNS","removeAttribute","removeAttributeNS","addClass","classNAME","removeClass","hasClass","documentBody","documentElement","ArrayFrom","arr","isHTMLElement","componentData","Data","component","instance","instanceMap","getInstance","target","isString","str","isNode","node","isWindow","obj","isDocument","getDocument","ObjectEntries","createElement","param","tagName","newElement","attr","key","createElementNS","dispatchEvent","event","distinct","index","getElementStyle","property","computedStyle","prop","getElementAnimationDelay","propertyValue","durationValue","durationScale","duration","getElementAnimationDuration","emulateAnimationEnd","handler","called","endEvent","delay","animationEndWrapper","getElementTransitionDelay","delayValue","delayScale","getElementTransitionDuration","emulateTransitionEnd","transitionEndWrapper","Float32ArrayFrom","Float64ArrayFrom","normalizeValue","toLowerCase","source","normalizeOptions","defaultOps","inputOps","INPUT","data","normalOps","dataOps","title","k","v","match","ObjectAssign","ObjectKeys","ObjectValues","isObject","createCustomEvent","eventType","config","OriginalCustomEvent","passiveHandler","reflow","setElementStyle","styles","propObject","isMap","isNumber","num","TimeCache","Timer","callback","keyTimers","toUpperCase","getBoundingClientRect","includeScale","width","height","top","right","bottom","left","scaleX","scaleY","getDocumentBody","getDocumentElement","getDocumentHead","getNodeScroll","isWin","y","isShadowRoot","getParentNode","isScaledElement","getRectRelativeToOffsetParent","offsetParent","isParentAnElement","rect","offsets","offsetRect","elementUID","elementMapUID","elementIDMap","getUID","elID","elMap","elkey","getWindow","_a","isArray","isCanvas","isCustomElement","isElement","isElementInScrollRange","clientHeight","isElementInViewport","clientWidth","isElementsArray","isFunction","fn","isHTMLCollection","isHTMLImageElement","isJSON","isWeakMap","isMedia","s","isNodeList","isRTL","isSVGElement","isTableElement","closest","selector","querySelector","parent","getElementsByTagName","getCustomElements","getElementById","id","context","querySelectorAll","getElementsByClassName","matches","SHORTY"],"mappings":"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"}