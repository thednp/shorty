{
  "version": 3,
  "sources": ["../src/index.ts", "../src/strings/ariaChecked.ts", "../src/strings/ariaDescription.ts", "../src/strings/ariaDescribedBy.ts", "../src/strings/ariaExpanded.ts", "../src/strings/ariaHasPopup.ts", "../src/strings/ariaHidden.ts", "../src/strings/ariaLabel.ts", "../src/strings/ariaLabelledBy.ts", "../src/strings/ariaModal.ts", "../src/strings/ariaPressed.ts", "../src/strings/ariaSelected.ts", "../src/strings/ariaValueMin.ts", "../src/strings/ariaValueMax.ts", "../src/strings/ariaValueNow.ts", "../src/strings/ariaValueText.ts", "../src/strings/abortEvent.ts", "../src/strings/beforeunloadEvent.ts", "../src/strings/blurEvent.ts", "../src/strings/changeEvent.ts", "../src/strings/contextmenuEvent.ts", "../src/strings/DOMContentLoadedEvent.ts", "../src/strings/DOMMouseScrollEvent.ts", "../src/strings/errorEvent.ts", "../src/strings/focusEvent.ts", "../src/strings/focusinEvent.ts", "../src/strings/focusoutEvent.ts", "../src/strings/gesturechangeEvent.ts", "../src/strings/gestureendEvent.ts", "../src/strings/gesturestartEvent.ts", "../src/strings/keydownEvent.ts", "../src/strings/keypressEvent.ts", "../src/strings/keyupEvent.ts", "../src/strings/loadEvent.ts", "../src/strings/mouseclickEvent.ts", "../src/strings/mousedblclickEvent.ts", "../src/strings/mousedownEvent.ts", "../src/strings/mouseupEvent.ts", "../src/strings/mousehoverEvent.ts", "../src/strings/mouseenterEvent.ts", "../src/strings/mouseleaveEvent.ts", "../src/strings/mouseinEvent.ts", "../src/strings/mouseoutEvent.ts", "../src/strings/mouseoverEvent.ts", "../src/strings/mousemoveEvent.ts", "../src/strings/mousewheelEvent.ts", "../src/strings/moveEvent.ts", "../src/strings/orientationchangeEvent.ts", "../src/strings/pointercancelEvent.ts", "../src/strings/pointerdownEvent.ts", "../src/strings/pointerleaveEvent.ts", "../src/strings/pointermoveEvent.ts", "../src/strings/pointerupEvent.ts", "../src/strings/readystatechangeEvent.ts", "../src/strings/resetEvent.ts", "../src/strings/resizeEvent.ts", "../src/strings/selectEvent.ts", "../src/strings/selectendEvent.ts", "../src/strings/selectstartEvent.ts", "../src/strings/scrollEvent.ts", "../src/strings/submitEvent.ts", "../src/strings/touchstartEvent.ts", "../src/strings/touchmoveEvent.ts", "../src/strings/touchcancelEvent.ts", "../src/strings/touchendEvent.ts", "../src/strings/unloadEvent.ts", "../src/strings/nativeEvents.ts", "../src/strings/loadstartEvent.ts", "../src/strings/mouseSwipeEvents.ts", "../src/strings/mouseClickEvents.ts", "../src/strings/mouseHoverEvents.ts", "../src/strings/touchEvents.ts", "../src/strings/focusEvents.ts", "../src/strings/keyboardEventKeys.ts", "../src/strings/keyAlt.ts", "../src/strings/keyArrowDown.ts", "../src/strings/keyArrowUp.ts", "../src/strings/keyArrowLeft.ts", "../src/strings/keyArrowRight.ts", "../src/strings/keyBackspace.ts", "../src/strings/keyCapsLock.ts", "../src/strings/keyControl.ts", "../src/strings/keyDelete.ts", "../src/strings/keyEnter.ts", "../src/strings/keyEscape.ts", "../src/strings/keyInsert.ts", "../src/strings/keyMeta.ts", "../src/strings/keyPause.ts", "../src/strings/keyScrollLock.ts", "../src/strings/keyShift.ts", "../src/strings/keySpace.ts", "../src/strings/keyTab.ts", "../src/strings/animationDuration.ts", "../src/strings/animationDelay.ts", "../src/strings/animationName.ts", "../src/strings/animationEndEvent.ts", "../src/strings/transitionDuration.ts", "../src/strings/transitionDelay.ts", "../src/strings/transitionEndEvent.ts", "../src/strings/transitionProperty.ts", "../src/strings/addEventListener.ts", "../src/strings/removeEventListener.ts", "../src/strings/bezierEasings.ts", "../src/strings/offsetHeight.ts", "../src/strings/offsetWidth.ts", "../src/strings/scrollHeight.ts", "../src/strings/scrollWidth.ts", "../src/strings/tabindex.ts", "../src/strings/userAgentData.ts", "../src/strings/userAgent.ts", "../src/boolean/isMobile.ts", "../src/boolean/isApple.ts", "../src/boolean/isFirefox.ts", "../src/blocks/documentHead.ts", "../src/boolean/support3DTransform.ts", "../src/event/on.ts", "../src/event/off.ts", "../src/event/one.ts", "../src/boolean/supportPassive.ts", "../src/boolean/supportTransform.ts", "../src/boolean/supportTouch.ts", "../src/boolean/supportAnimation.ts", "../src/boolean/supportTransition.ts", "../src/attr/getAttribute.ts", "../src/attr/getAttributeNS.ts", "../src/attr/hasAttribute.ts", "../src/attr/hasAttributeNS.ts", "../src/attr/setAttribute.ts", "../src/attr/setAttributeNS.ts", "../src/attr/removeAttribute.ts", "../src/attr/removeAttributeNS.ts", "../src/class/addClass.ts", "../src/class/removeClass.ts", "../src/class/hasClass.ts", "../src/misc/ArrayFrom.ts", "../src/is/isHTMLElement.ts", "../src/misc/data.ts", "../src/is/isString.ts", "../src/is/isNode.ts", "../src/is/isWindow.ts", "../src/is/isDocument.ts", "../src/get/getDocument.ts", "../src/misc/ObjectEntries.ts", "../src/misc/createElement.ts", "../src/misc/createElementNS.ts", "../src/misc/dispatchEvent.ts", "../src/misc/distinct.ts", "../src/get/getElementStyle.ts", "../src/get/getElementAnimationDelay.ts", "../src/get/getElementAnimationDuration.ts", "../src/misc/emulateAnimationEnd.ts", "../src/get/getElementTransitionDelay.ts", "../src/get/getElementTransitionDuration.ts", "../src/misc/emulateTransitionEnd.ts", "../src/misc/Float32ArrayFrom.ts", "../src/misc/Float64ArrayFrom.ts", "../src/misc/focus.ts", "../src/misc/noop.ts", "../src/misc/normalizeValue.ts", "../src/misc/toLowerCase.ts", "../src/misc/normalizeOptions.ts", "../src/misc/ObjectAssign.ts", "../src/misc/ObjectKeys.ts", "../src/misc/ObjectValues.ts", "../src/is/isObject.ts", "../src/misc/OriginalEvent.ts", "../src/misc/passiveHandler.ts", "../src/misc/reflow.ts", "../src/misc/setElementStyle.ts", "../src/is/isMap.ts", "../src/is/isNumber.ts", "../src/misc/timer.ts", "../src/misc/toUpperCase.ts", "../src/get/getBoundingClientRect.ts", "../src/get/getDocumentBody.ts", "../src/get/getDocumentElement.ts", "../src/get/getDocumentHead.ts", "../src/get/getNodeScroll.ts", "../src/is/isShadowRoot.ts", "../src/get/getParentNode.ts", "../src/is/isScaledElement.ts", "../src/get/getRectRelativeToOffsetParent.ts", "../src/get/getUID.ts", "../src/get/getWindow.ts", "../src/is/isArray.ts", "../src/is/isCanvas.ts", "../src/is/isCustomElement.ts", "../src/is/isElement.ts", "../src/is/isElementInScrollRange.ts", "../src/is/isElementInViewport.ts", "../src/is/isElementsArray.ts", "../src/is/isFunction.ts", "../src/is/isHTMLCollection.ts", "../src/is/isHTMLImageElement.ts", "../src/is/isWeakMap.ts", "../src/is/isMedia.ts", "../src/is/isNodeList.ts", "../src/is/isRTL.ts", "../src/is/isSVGElement.ts", "../src/is/isTableElement.ts", "../src/selectors/closest.ts", "../src/selectors/querySelector.ts", "../src/selectors/getElementsByTagName.ts", "../src/selectors/getCustomElements.ts", "../src/selectors/getElementById.ts", "../src/selectors/querySelectorAll.ts", "../src/selectors/getElementsByClassName.ts", "../src/selectors/matches.ts"],
  "sourcesContent": ["// strings\nimport ariaChecked from './strings/ariaChecked';\nimport ariaDescription from './strings/ariaDescription';\nimport ariaDescribedBy from './strings/ariaDescribedBy';\nimport ariaExpanded from './strings/ariaExpanded';\nimport ariaHasPopup from './strings/ariaHasPopup';\nimport ariaHidden from './strings/ariaHidden';\nimport ariaLabel from './strings/ariaLabel';\nimport ariaLabelledBy from './strings/ariaLabelledBy';\nimport ariaModal from './strings/ariaModal';\nimport ariaPressed from './strings/ariaPressed';\nimport ariaSelected from './strings/ariaSelected';\nimport ariaValueMin from './strings/ariaValueMin';\nimport ariaValueMax from './strings/ariaValueMax';\nimport ariaValueNow from './strings/ariaValueNow';\nimport ariaValueText from './strings/ariaValueText';\n\nimport nativeEvents from './strings/nativeEvents';\nimport abortEvent from './strings/abortEvent';\nimport blurEvent from './strings/blurEvent';\nimport moveEvent from './strings/moveEvent';\nimport changeEvent from './strings/changeEvent';\nimport errorEvent from './strings/errorEvent';\nimport resetEvent from './strings/resetEvent';\nimport resizeEvent from './strings/resizeEvent';\nimport scrollEvent from './strings/scrollEvent';\nimport submitEvent from './strings/submitEvent';\nimport loadEvent from './strings/loadEvent';\nimport loadstartEvent from './strings/loadstartEvent';\nimport unloadEvent from './strings/unloadEvent';\nimport readystatechangeEvent from './strings/readystatechangeEvent';\nimport beforeunloadEvent from './strings/beforeunloadEvent';\nimport orientationchangeEvent from './strings/orientationchangeEvent';\nimport contextmenuEvent from './strings/contextmenuEvent';\nimport DOMContentLoadedEvent from './strings/DOMContentLoadedEvent';\nimport DOMMouseScrollEvent from './strings/DOMMouseScrollEvent';\n\nimport selectEvent from './strings/selectEvent';\nimport selectendEvent from './strings/selectendEvent';\nimport selectstartEvent from './strings/selectstartEvent';\n\nimport mouseSwipeEvents from './strings/mouseSwipeEvents';\nimport mouseClickEvents from './strings/mouseClickEvents';\nimport mouseclickEvent from './strings/mouseclickEvent';\nimport mousedblclickEvent from './strings/mousedblclickEvent';\nimport mousedownEvent from './strings/mousedownEvent';\nimport mouseupEvent from './strings/mouseupEvent';\nimport mousehoverEvent from './strings/mousehoverEvent';\nimport mouseHoverEvents from './strings/mouseHoverEvents';\nimport mouseenterEvent from './strings/mouseenterEvent';\nimport mouseleaveEvent from './strings/mouseleaveEvent';\nimport mouseinEvent from './strings/mouseinEvent';\nimport mouseoutEvent from './strings/mouseoutEvent';\nimport mouseoverEvent from './strings/mouseoverEvent';\nimport mousemoveEvent from './strings/mousemoveEvent';\nimport mousewheelEvent from './strings/mousewheelEvent';\n\nimport touchEvents from './strings/touchEvents';\nimport touchstartEvent from './strings/touchstartEvent';\nimport touchmoveEvent from './strings/touchmoveEvent';\nimport touchcancelEvent from './strings/touchcancelEvent';\nimport touchendEvent from './strings/touchendEvent';\n\nimport pointercancelEvent from './strings/pointercancelEvent';\nimport pointerdownEvent from './strings/pointerdownEvent';\nimport pointerleaveEvent from './strings/pointerleaveEvent';\nimport pointermoveEvent from './strings/pointermoveEvent';\nimport pointerupEvent from './strings/pointerupEvent';\n\nimport focusEvents from './strings/focusEvents';\nimport focusEvent from './strings/focusEvent';\nimport focusinEvent from './strings/focusinEvent';\nimport focusoutEvent from './strings/focusoutEvent';\n\nimport gesturechangeEvent from './strings/gesturechangeEvent';\nimport gestureendEvent from './strings/gestureendEvent';\nimport gesturestartEvent from './strings/gesturestartEvent';\n\nimport keyboardEventKeys from './strings/keyboardEventKeys';\nimport keydownEvent from './strings/keydownEvent';\nimport keyupEvent from './strings/keyupEvent';\nimport keypressEvent from './strings/keypressEvent';\nimport keyAlt from './strings/keyAlt';\nimport keyArrowDown from './strings/keyArrowDown';\nimport keyArrowUp from './strings/keyArrowUp';\nimport keyArrowLeft from './strings/keyArrowLeft';\nimport keyArrowRight from './strings/keyArrowRight';\nimport keyBackspace from './strings/keyBackspace';\nimport keyCapsLock from './strings/keyCapsLock';\nimport keyControl from './strings/keyControl';\nimport keyDelete from './strings/keyDelete';\nimport keyEnter from './strings/keyEnter';\nimport keyEscape from './strings/keyEscape';\nimport keyInsert from './strings/keyInsert';\nimport keyMeta from './strings/keyMeta';\nimport keyPause from './strings/keyPause';\nimport keyScrollLock from './strings/keyScrollLock';\nimport keyShift from './strings/keyShift';\nimport keySpace from './strings/keySpace';\nimport keyTab from './strings/keyTab';\n\nimport animationDuration from './strings/animationDuration';\nimport animationDelay from './strings/animationDelay';\nimport animationName from './strings/animationName';\nimport animationEndEvent from './strings/animationEndEvent';\nimport transitionDuration from './strings/transitionDuration';\nimport transitionDelay from './strings/transitionDelay';\nimport transitionEndEvent from './strings/transitionEndEvent';\nimport transitionProperty from './strings/transitionProperty';\n\nimport addEventListener from './strings/addEventListener';\nimport removeEventListener from './strings/removeEventListener';\n\nimport bezierEasings from './strings/bezierEasings';\n\nimport offsetHeight from './strings/offsetHeight';\nimport offsetWidth from './strings/offsetWidth';\nimport scrollHeight from './strings/scrollHeight';\nimport scrollWidth from './strings/scrollWidth';\nimport tabindex from './strings/tabindex';\n\nimport userAgentData from './strings/userAgentData';\nimport userAgent from './strings/userAgent';\n\n// boolean\nimport isMobile from './boolean/isMobile';\nimport isApple from './boolean/isApple';\nimport isFirefox from './boolean/isFirefox';\nimport support3DTransform from './boolean/support3DTransform';\nimport supportPassive from './boolean/supportPassive';\nimport supportTransform from './boolean/supportTransform';\nimport supportTouch from './boolean/supportTouch';\nimport supportAnimation from './boolean/supportAnimation';\nimport supportTransition from './boolean/supportTransition';\n\n// attributes\nimport getAttribute from './attr/getAttribute';\nimport getAttributeNS from './attr/getAttributeNS';\nimport hasAttribute from './attr/hasAttribute';\nimport hasAttributeNS from './attr/hasAttributeNS';\nimport setAttribute from './attr/setAttribute';\nimport setAttributeNS from './attr/setAttributeNS';\nimport removeAttribute from './attr/removeAttribute';\nimport removeAttributeNS from './attr/removeAttributeNS';\n\n// class\nimport addClass from './class/addClass';\nimport removeClass from './class/removeClass';\nimport hasClass from './class/hasClass';\n\n// event\nimport on from './event/on';\nimport off from './event/off';\nimport one from './event/one';\n\n// misc\nimport ArrayFrom from './misc/ArrayFrom';\nimport Data, { getInstance } from './misc/data';\nimport createElement from './misc/createElement';\nimport createElementNS from './misc/createElementNS';\nimport dispatchEvent from './misc/dispatchEvent';\nimport distinct from './misc/distinct';\nimport emulateAnimationEnd from './misc/emulateAnimationEnd';\nimport emulateTransitionEnd from './misc/emulateTransitionEnd';\nimport Float32ArrayFrom from './misc/Float32ArrayFrom';\nimport Float64ArrayFrom from './misc/Float64ArrayFrom';\nimport focus from './misc/focus';\nimport noop from './misc/noop';\nimport normalizeOptions from './misc/normalizeOptions';\nimport normalizeValue from './misc/normalizeValue';\nimport ObjectAssign from './misc/ObjectAssign';\nimport ObjectEntries from './misc/ObjectEntries';\nimport ObjectKeys from './misc/ObjectKeys';\nimport ObjectValues from './misc/ObjectValues';\nimport OriginalEvent from './misc/OriginalEvent';\nimport passiveHandler from './misc/passiveHandler';\nimport reflow from './misc/reflow';\nimport setElementStyle from './misc/setElementStyle';\nimport Timer from './misc/timer';\nimport toLowerCase from './misc/toLowerCase';\nimport toUpperCase from './misc/toUpperCase';\n\n// get\nimport getBoundingClientRect from './get/getBoundingClientRect';\nimport getDocument from './get/getDocument';\nimport getDocumentBody from './get/getDocumentBody';\nimport getDocumentElement from './get/getDocumentElement';\nimport getDocumentHead from './get/getDocumentHead';\nimport getElementAnimationDuration from './get/getElementAnimationDuration';\nimport getElementAnimationDelay from './get/getElementAnimationDelay';\nimport getElementStyle from './get/getElementStyle';\nimport getElementTransitionDuration from './get/getElementTransitionDuration';\nimport getElementTransitionDelay from './get/getElementTransitionDelay';\nimport getNodeScroll from './get/getNodeScroll';\nimport getParentNode from './get/getParentNode';\nimport getRectRelativeToOffsetParent from './get/getRectRelativeToOffsetParent';\nimport getUID from './get/getUID';\nimport getWindow from './get/getWindow';\n\n// is\nimport isArray from './is/isArray';\nimport isCanvas from './is/isCanvas';\nimport isDocument from './is/isDocument';\nimport isCustomElement from './is/isCustomElement';\nimport isElement from './is/isElement';\nimport isElementInScrollRange from './is/isElementInScrollRange';\nimport isElementInViewport from './is/isElementInViewport';\nimport isElementsArray from './is/isElementsArray';\nimport isFunction from './is/isFunction';\nimport isObject from './is/isObject';\nimport isHTMLCollection from './is/isHTMLCollection';\nimport isHTMLElement from './is/isHTMLElement';\nimport isHTMLImageElement from './is/isHTMLImageElement';\nimport isMap from './is/isMap';\nimport isWeakMap from './is/isWeakMap';\nimport isMedia from './is/isMedia';\nimport isNode from './is/isNode';\nimport isNodeList from './is/isNodeList';\nimport isNumber from './is/isNumber';\nimport isRTL from './is/isRTL';\nimport isScaledElement from './is/isScaledElement';\nimport isShadowRoot from './is/isShadowRoot';\nimport isString from './is/isString';\nimport isSVGElement from './is/isSVGElement';\nimport isTableElement from './is/isTableElement';\nimport isWindow from './is/isWindow';\n\n// selectors\nimport closest from './selectors/closest';\nimport querySelector from './selectors/querySelector';\nimport getCustomElements from './selectors/getCustomElements';\nimport getElementById from './selectors/getElementById';\nimport querySelectorAll from './selectors/querySelectorAll';\nimport getElementsByTagName from './selectors/getElementsByTagName';\nimport getElementsByClassName from './selectors/getElementsByClassName';\nimport matches from './selectors/matches';\n\nconst SHORTY = {\n  ariaChecked,\n  ariaDescription,\n  ariaDescribedBy,\n  ariaExpanded,\n  ariaHidden,\n  ariaHasPopup,\n  ariaLabel,\n  ariaLabelledBy,\n  ariaModal,\n  ariaPressed,\n  ariaSelected,\n  ariaValueMin,\n  ariaValueMax,\n  ariaValueNow,\n  ariaValueText,\n  nativeEvents,\n  abortEvent,\n  blurEvent,\n  moveEvent,\n  changeEvent,\n  errorEvent,\n  resetEvent,\n  resizeEvent,\n  scrollEvent,\n  submitEvent,\n  loadEvent,\n  loadstartEvent,\n  unloadEvent,\n  readystatechangeEvent,\n  beforeunloadEvent,\n  orientationchangeEvent,\n  contextmenuEvent,\n  DOMContentLoadedEvent,\n  DOMMouseScrollEvent,\n  selectEvent,\n  selectendEvent,\n  selectstartEvent,\n  mouseClickEvents,\n  mouseclickEvent,\n  mousedblclickEvent,\n  mousedownEvent,\n  mouseupEvent,\n  mousehoverEvent,\n  mouseHoverEvents,\n  mouseenterEvent,\n  mouseleaveEvent,\n  mouseinEvent,\n  mouseoutEvent,\n  mouseoverEvent,\n  mousemoveEvent,\n  mousewheelEvent,\n  mouseSwipeEvents,\n  touchEvents,\n  touchstartEvent,\n  touchmoveEvent,\n  touchcancelEvent,\n  touchendEvent,\n  pointercancelEvent,\n  pointerdownEvent,\n  pointerleaveEvent,\n  pointermoveEvent,\n  pointerupEvent,\n  focusEvents,\n  focusEvent,\n  focusinEvent,\n  focusoutEvent,\n  gesturechangeEvent,\n  gestureendEvent,\n  gesturestartEvent,\n  bezierEasings,\n  animationDuration,\n  animationDelay,\n  animationName,\n  animationEndEvent,\n  transitionDuration,\n  transitionDelay,\n  transitionEndEvent,\n  transitionProperty,\n  isMobile,\n  isApple,\n  isFirefox,\n  support3DTransform,\n  supportPassive,\n  supportTransform,\n  supportTouch,\n  supportAnimation,\n  supportTransition,\n  addEventListener,\n  removeEventListener,\n  keyboardEventKeys,\n  keydownEvent,\n  keypressEvent,\n  keyupEvent,\n  keyAlt,\n  keyArrowDown,\n  keyArrowLeft,\n  keyArrowRight,\n  keyArrowUp,\n  keyBackspace,\n  keyCapsLock,\n  keyControl,\n  keyDelete,\n  keyEnter,\n  keyEscape,\n  keyInsert,\n  keyMeta,\n  keyPause,\n  keyScrollLock,\n  keyShift,\n  keySpace,\n  keyTab,\n  offsetHeight,\n  offsetWidth,\n  scrollHeight,\n  scrollWidth,\n  userAgentData,\n  userAgent,\n  tabindex,\n  addClass,\n  removeClass,\n  hasClass,\n  on,\n  off,\n  one,\n  dispatchEvent,\n  distinct,\n  Data,\n  getInstance,\n  createElement,\n  createElementNS,\n  toUpperCase,\n  toLowerCase,\n  Timer,\n  emulateAnimationEnd,\n  emulateTransitionEnd,\n  isElementInScrollRange,\n  isElementInViewport,\n  passiveHandler,\n  getElementAnimationDuration,\n  getElementAnimationDelay,\n  getElementTransitionDuration,\n  getElementTransitionDelay,\n  getNodeScroll,\n  getParentNode,\n  getRectRelativeToOffsetParent,\n  getWindow,\n  isArray,\n  isCanvas,\n  isString,\n  isCustomElement,\n  isElement,\n  isMap,\n  isWeakMap,\n  isNode,\n  isNumber,\n  isHTMLElement,\n  isHTMLImageElement,\n  isSVGElement,\n  isNodeList,\n  isHTMLCollection,\n  isScaledElement,\n  isTableElement,\n  isShadowRoot,\n  isDocument,\n  isElementsArray,\n  isFunction,\n  isObject,\n  isWindow,\n  isMedia,\n  isRTL,\n  closest,\n  querySelector,\n  getCustomElements,\n  getElementById,\n  querySelectorAll,\n  getElementsByClassName,\n  getElementsByTagName,\n  matches,\n  normalizeValue,\n  normalizeOptions,\n  reflow,\n  noop,\n  focus,\n  getUID,\n  ArrayFrom,\n  Float32ArrayFrom,\n  Float64ArrayFrom,\n  ObjectAssign,\n  ObjectEntries,\n  ObjectKeys,\n  ObjectValues,\n  OriginalEvent,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getDocumentHead,\n  getElementStyle,\n  setElementStyle,\n  hasAttribute,\n  hasAttributeNS,\n  getAttribute,\n  getAttributeNS,\n  setAttribute,\n  setAttributeNS,\n  removeAttribute,\n  removeAttributeNS,\n};\n\nexport default SHORTY;\n", "/**\n * A global namespace for aria-checked.\n */\nconst ariaChecked = \"aria-checked\";\nexport default ariaChecked;\n", "/**\n * A global namespace for aria-description.\n */\nconst ariaDescription = \"aria-description\";\nexport default ariaDescription;\n", "/**\n * A global namespace for aria-describedby.\n */\nconst ariaDescribedBy = \"aria-describedby\";\nexport default ariaDescribedBy;\n", "/**\n * A global namespace for aria-expanded.\n */\nconst ariaExpanded = \"aria-expanded\";\nexport default ariaExpanded;\n", "/**\n * A global namespace for aria-haspopup.\n */\nconst ariaHasPopup = \"aria-haspopup\";\nexport default ariaHasPopup;\n", "/**\n * A global namespace for aria-hidden.\n */\nconst ariaHidden = \"aria-hidden\";\nexport default ariaHidden;\n", "/**\n * A global namespace for aria-label.\n */\nconst ariaLabel = \"aria-label\";\nexport default ariaLabel;\n", "/**\n * A global namespace for aria-labelledby.\n */\nconst ariaLabelledBy = \"aria-labelledby\";\nexport default ariaLabelledBy;\n", "/**\n * A global namespace for aria-modal.\n */\nconst ariaModal = \"aria-modal\";\nexport default ariaModal;\n", "/**\n * A global namespace for aria-pressed.\n */\nconst ariaPressed = \"aria-pressed\";\nexport default ariaPressed;\n", "/**\n * A global namespace for aria-selected.\n */\nconst ariaSelected = \"aria-selected\";\nexport default ariaSelected;\n", "/**\n * A global namespace for aria-valuemin.\n */\nconst ariaValueMin = \"aria-valuemin\";\nexport default ariaValueMin;\n", "/**\n * A global namespace for aria-valuemax.\n */\nconst ariaValueMax = \"aria-valuemax\";\nexport default ariaValueMax;\n", "/**\n * A global namespace for aria-valuenow.\n */\nconst ariaValueNow = \"aria-valuenow\";\nexport default ariaValueNow;\n", "/**\n * A global namespace for aria-valuetext.\n */\nconst ariaValueText = \"aria-valuetext\";\nexport default ariaValueText;\n", "/**\n * A global namespace for `abort` event.\n */\nconst abortEvent = \"abort\";\nexport default abortEvent;\n", "/**\n * A global namespace for `beforeunload` event.\n */\nconst beforeunloadEvent = \"beforeunload\";\nexport default beforeunloadEvent;\n", "/**\n * A global namespace for `blur` event.\n */\nconst blurEvent = \"blur\";\nexport default blurEvent;\n", "/**\n * A global namespace for `change` event.\n */\nconst changeEvent = \"change\";\nexport default changeEvent;\n", "/**\n * A global namespace for `contextmenu` event.\n */\nconst contextmenuEvent = \"contextmenu\";\nexport default contextmenuEvent;\n", "/**\n * A global namespace for `DOMContentLoaded` event.\n */\nconst DOMContentLoadedEvent = \"DOMContentLoaded\";\nexport default DOMContentLoadedEvent;\n", "/**\n * A global namespace for `DOMMouseScroll` event.\n */\nconst DOMMouseScrollEvent = \"DOMMouseScroll\";\nexport default DOMMouseScrollEvent;\n", "/**\n * A global namespace for `error` event.\n */\nconst errorEvent = \"error\";\nexport default errorEvent;\n", "/**\n * A global namespace for `focus` event.\n */\nconst focusEvent = \"focus\";\nexport default focusEvent;\n", "/**\n * A global namespace for `focusin` event.\n */\nconst focusinEvent = \"focusin\";\nexport default focusinEvent;\n", "/**\n * A global namespace for `focusout` event.\n */\nconst focusoutEvent = \"focusout\";\nexport default focusoutEvent;\n", "/**\n * A global namespace for `gesturechange` event.\n */\nconst gesturechangeEvent = \"gesturechange\";\nexport default gesturechangeEvent;\n", "/**\n * A global namespace for `gestureend` event.\n */\nconst gestureendEvent = \"gestureend\";\nexport default gestureendEvent;\n", "/**\n * A global namespace for `gesturestart` event.\n */\nconst gesturestartEvent = \"gesturestart\";\nexport default gesturestartEvent;\n", "/**\n * A global namespace for `keydown` event.\n */\nconst keydownEvent = \"keydown\";\nexport default keydownEvent;\n", "/**\n * A global namespace for `keypress` event.\n */\nconst keypressEvent = \"keypress\";\nexport default keypressEvent;\n", "/**\n * A global namespace for `keyup` event.\n */\nconst keyupEvent = \"keyup\";\nexport default keyupEvent;\n", "/**\n * A global namespace for `load` event.\n */\nconst loadEvent = \"load\";\nexport default loadEvent;\n", "/**\n * A global namespace for `click` event.\n */\nconst mouseclickEvent = \"click\";\nexport default mouseclickEvent;\n", "/**\n * A global namespace for `dblclick` event.\n */\nconst mousedblclickEvent = \"dblclick\";\nexport default mousedblclickEvent;\n", "/**\n * A global namespace for `mousedown` event.\n */\nconst mousedownEvent = \"mousedown\";\nexport default mousedownEvent;\n", "/**\n * A global namespace for `mouseup` event.\n */\nconst mouseupEvent = \"mouseup\";\nexport default mouseupEvent;\n", "/**\n * A global namespace for `hover` event.\n */\nconst mousehoverEvent = \"hover\";\nexport default mousehoverEvent;\n", "/**\n * A global namespace for `mouseenter` event.\n */\nconst mouseenterEvent = \"mouseenter\";\nexport default mouseenterEvent;\n", "/**\n * A global namespace for `mouseleave` event.\n */\nconst mouseleaveEvent = \"mouseleave\";\nexport default mouseleaveEvent;\n", "/**\n * A global namespace for `mousein` event.\n */\nconst mouseinEvent = \"mousein\";\nexport default mouseinEvent;\n", "/**\n * A global namespace for `mouseout` event.\n */\nconst mouseoutEvent = \"mouseout\";\nexport default mouseoutEvent;\n", "/**\n * A global namespace for `mouseover` event.\n */\nconst mouseoverEvent = \"mouseover\";\nexport default mouseoverEvent;\n", "/**\n * A global namespace for `mousemove` event.\n */\nconst mousemoveEvent = \"mousemove\";\nexport default mousemoveEvent;\n", "/**\n * A global namespace for `mousewheel` event.\n */\nconst mousewheelEvent = \"mousewheel\";\nexport default mousewheelEvent;\n", "/**\n * A global namespace for `move` event.\n */\nconst moveEvent = \"move\";\nexport default moveEvent;\n", "/**\n * A global namespace for `orientationchange` event.\n */\nconst orientationchangeEvent = \"orientationchange\";\nexport default orientationchangeEvent;\n", "/**\n * A global namespace for `pointercancel` event.\n */\nconst pointercancelEvent = \"pointercancel\";\nexport default pointercancelEvent;\n", "/**\n * A global namespace for `pointerdown` event.\n */\nconst pointerdownEvent = \"pointerdown\";\nexport default pointerdownEvent;\n", "/**\n * A global namespace for `pointerleave` event.\n */\nconst pointerleaveEvent = \"pointerleave\";\nexport default pointerleaveEvent;\n", "/**\n * A global namespace for `pointermove` event.\n */\nconst pointermoveEvent = \"pointermove\";\nexport default pointermoveEvent;\n", "/**\n * A global namespace for `pointerup` event.\n */\nconst pointerupEvent = \"pointerup\";\nexport default pointerupEvent;\n", "/**\n * A global namespace for `readystatechange` event.\n */\nconst readystatechangeEvent = \"readystatechange\";\nexport default readystatechangeEvent;\n", "/**\n * A global namespace for `reset` event.\n */\nconst resetEvent = \"reset\";\nexport default resetEvent;\n", "/**\n * A global namespace for `resize` event.\n */\nconst resizeEvent = \"resize\";\nexport default resizeEvent;\n", "/**\n * A global namespace for `select` event.\n */\nconst selectEvent = \"select\";\nexport default selectEvent;\n", "/**\n * A global namespace for the `selectend` event.\n */\nconst selectendEvent = \"selectend\";\nexport default selectendEvent;\n", "/**\n * A global namespace for the `selectstart` event.\n */\nconst selectstartEvent = \"selectstart\";\nexport default selectstartEvent;\n", "/**\n * A global namespace for `scroll` event.\n */\nconst scrollEvent = \"scroll\";\nexport default scrollEvent;\n", "/**\n * A global namespace for `submit` event.\n */\nconst submitEvent = \"submit\";\nexport default submitEvent;\n", "/**\n * A global namespace for `touchstart` event.\n */\nconst touchstartEvent = \"touchstart\";\nexport default touchstartEvent;\n", "/**\n * A global namespace for `touchmove` event.\n */\nconst touchmoveEvent = \"touchmove\";\nexport default touchmoveEvent;\n", "/**\n * A global namespace for `touchcancel` event.\n */\nconst touchcancelEvent = \"touchcancel\";\nexport default touchcancelEvent;\n", "/**\n * A global namespace for `touchend` event.\n */\nconst touchendEvent = \"touchend\";\nexport default touchendEvent;\n", "/**\n * A global namespace for `unload` event.\n */\nconst unloadEvent = \"unload\";\nexport default unloadEvent;\n", "import abort from './abortEvent';\nimport beforeunload from './beforeunloadEvent';\nimport blur from './blurEvent';\nimport change from './changeEvent';\nimport contextmenu from './contextmenuEvent';\nimport DOMContentLoaded from './DOMContentLoadedEvent';\nimport DOMMouseScroll from './DOMMouseScrollEvent';\nimport error from './errorEvent';\nimport focus from './focusEvent';\nimport focusin from './focusinEvent';\nimport focusout from './focusoutEvent';\nimport gesturechange from './gesturechangeEvent';\nimport gestureend from './gestureendEvent';\nimport gesturestart from './gesturestartEvent';\nimport keydown from './keydownEvent';\nimport keypress from './keypressEvent';\nimport keyup from './keyupEvent';\nimport load from './loadEvent';\nimport click from './mouseclickEvent';\nimport dblclick from './mousedblclickEvent';\nimport mousedown from './mousedownEvent';\nimport mouseup from './mouseupEvent';\nimport hover from './mousehoverEvent';\nimport mouseenter from './mouseenterEvent';\nimport mouseleave from './mouseleaveEvent';\nimport mousein from './mouseinEvent';\nimport mouseout from './mouseoutEvent';\nimport mouseover from './mouseoverEvent';\nimport mousemove from './mousemoveEvent';\nimport mousewheel from './mousewheelEvent';\nimport move from './moveEvent';\nimport orientationchange from './orientationchangeEvent';\nimport pointercancel from './pointercancelEvent';\nimport pointerdown from './pointerdownEvent';\nimport pointerleave from './pointerleaveEvent';\nimport pointermove from './pointermoveEvent';\nimport pointerup from './pointerupEvent';\nimport readystatechange from './readystatechangeEvent';\nimport reset from './resetEvent';\nimport resize from './resizeEvent';\nimport select from './selectEvent';\nimport selectend from './selectendEvent';\nimport selectstart from './selectstartEvent';\nimport scroll from './scrollEvent';\nimport submit from './submitEvent';\nimport touchstart from './touchstartEvent';\nimport touchmove from './touchmoveEvent';\nimport touchcancel from './touchcancelEvent';\nimport touchend from './touchendEvent';\nimport unload from './unloadEvent';\n\n/**\n * A global namespace for all browser native events.\n */\nconst nativeEvents = {\n  DOMContentLoaded,\n  DOMMouseScroll,\n  abort,\n  beforeunload,\n  blur,\n  change,\n  click,\n  contextmenu,\n  dblclick,\n  error,\n  focus,\n  focusin,\n  focusout,\n  gesturechange,\n  gestureend,\n  gesturestart,\n  hover,\n  keydown,\n  keypress,\n  keyup,\n  load,\n  mousedown,\n  mousemove,\n  mousein,\n  mouseout,\n  mouseenter,\n  mouseleave,\n  mouseover,\n  mouseup,\n  mousewheel,\n  move,\n  orientationchange,\n  pointercancel,\n  pointerdown,\n  pointerleave,\n  pointermove,\n  pointerup,\n  readystatechange,\n  reset,\n  resize,\n  scroll,\n  select,\n  selectend,\n  selectstart,\n  submit,\n  touchcancel,\n  touchend,\n  touchmove,\n  touchstart,\n  unload,\n};\n\nexport default nativeEvents;\n", "/**\n * A global namespace for `loadstart` event.\n */\nconst loadstartEvent = \"loadstart\";\nexport default loadstartEvent;\n", "/**\n * A global namespace for mouse events equivalent to touch events.\n */\nconst mouseSwipeEvents = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\",\n};\nexport default mouseSwipeEvents;\n", "/**\n * A global namespace for mouse click events.\n */\nconst mouseClickEvents = { down: \"mousedown\", up: \"mouseup\" };\nexport default mouseClickEvents;\n", "/**\n * A global namespace for mouse hover events.\n */\nconst mouseHoverEvents =\n  \"onmouseleave\" in document\n    ? [\"mouseenter\", \"mouseleave\"]\n    : /* istanbul ignore next */ [\"mouseover\", \"mouseout\"];\nexport default mouseHoverEvents;\n", "/**\n * A global namespace for touch events.\n */\nconst touchEvents = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\",\n};\nexport default touchEvents;\n", "/**\n * A global namespace for focus event names.\n */\nconst focusEvents = { in: \"focusin\", out: \"focusout\" };\nexport default focusEvents;\n", "/**\n * A global namespace for keyboard event keys.\n */\nconst keyboardEventKeys = {\n  Backspace: \"Backspace\", //  8\n  Tab: \"Tab\", //  9\n  Enter: \"Enter\", // 13\n  Shift: \"Shift\", // 16\n  Control: \"Control\", // 17\n  Alt: \"Alt\", // 18\n  Pause: \"Pause\", // 19\n  CapsLock: \"CapsLock\", // 20\n  Escape: \"Escape\", // 27\n  Scape: \"Space\", // 32\n  ArrowLeft: \"ArrowLeft\", // 37\n  ArrowUp: \"ArrowUp\", // 38\n  ArrowRight: \"ArrowRight\", // 39\n  ArrowDown: \"ArrowDown\", // 40\n  Insert: \"Insert\", // 45\n  Delete: \"Delete\", // 46\n  Meta: \"Meta\", // 91 windows key\n  ContextMenu: \"ContextMenu\", // 93\n  ScrollLock: \"ScrollLock\", // 145\n};\n\nexport default keyboardEventKeys;\n", "/**\n * A global namespace for `Alt` key.\n * e.which = 18\n */\nconst keyAlt = \"Alt\";\n\nexport default keyAlt;\n", "/**\n * A global namespace for `ArrowDown` key.\n * e.which = 40 equivalent\n */\nconst keyArrowDown = \"ArrowDown\";\n\nexport default keyArrowDown;\n", "/**\n * A global namespace for `ArrowUp` key.\n * e.which = 38 equivalent\n */\nconst keyArrowUp = \"ArrowUp\";\n\nexport default keyArrowUp;\n", "/**\n * A global namespace for `ArrowLeft` key.\n * e.which = 37 equivalent\n */\nconst keyArrowLeft = \"ArrowLeft\";\n\nexport default keyArrowLeft;\n", "/**\n * A global namespace for `ArrowRight` key.\n * e.which = 39 equivalent\n */\nconst keyArrowRight = \"ArrowRight\";\n\nexport default keyArrowRight;\n", "/**\n * A global namespace for `Backspace` key.\n * e.which === 8 equivalent\n */\nconst keyBackspace = \"Backspace\";\n\nexport default keyBackspace;\n", "/**\n * A global namespace for `CapsLock` key.\n * e.which = 20 equivalent\n */\nconst keyCapsLock = \"CapsLock\";\n\nexport default keyCapsLock;\n", "/**\n * A global namespace for `Control` key.\n * e.which = 17\n */\nconst keyControl = \"Control\";\n\nexport default keyControl;\n", "/**\n * A global namespace for `Delete` key.\n * e.which = 46 equivalent\n */\nconst keyDelete = \"Delete\";\n\nexport default keyDelete;\n", "/**\n * A global namespace for `Enter` key.\n * e.which = 13 equivalent\n */\nconst keyEnter = \"Enter\";\n\nexport default keyEnter;\n", "/**\n * A global namespace for `Escape` key.\n * e.which = 27 equivalent\n */\nconst keyEscape = \"Escape\";\n\nexport default keyEscape;\n", "/**\n * A global namespace for `Insert` key.\n * e.which = 45 equivalent\n */\nconst keyInsert = \"Insert\";\n\nexport default keyInsert;\n", "/**\n * A global namespace for `Meta` key.\n * e.which = 93 equivalent\n */\nconst keyMeta = \"Meta\";\n\nexport default keyMeta;\n", "/**\n * A global namespace for `Pause` key.\n * e.which = 19\n */\nconst keyPause = \"Pause\";\n\nexport default keyPause;\n", "/**\n * A global namespace for `ScrollLock` key.\n * e.which = 145 equivalent\n */\nconst keyScrollLock = \"ScrollLock\";\n\nexport default keyScrollLock;\n", "/**\n * A global namespace for `Shift` key.\n * e.which = 16\n */\nconst keyShift = \"Shift\";\n\nexport default keyShift;\n", "/**\n * A global namespace for `Space` key.\n * e.which = 32 equivalent\n */\nconst keySpace = \"Space\";\n\nexport default keySpace;\n", "/**\n * A global namespace for `Tab` key.\n * e.which = 9 equivalent\n */\nconst keyTab = \"Tab\";\n\nexport default keyTab;\n", "/**\n * A global namespace for 'animationDuration' string.\n */\nconst animationDuration = \"animationDuration\";\nexport default animationDuration;\n", "/**\n * A global namespace for 'animationDelay' string.\n */\nconst animationDelay = \"animationDelay\";\nexport default animationDelay;\n", "/**\n * A global namespace for 'animationName' string.\n */\nconst animationName = \"animationName\";\nexport default animationName;\n", "/**\n * A global namespace for 'animationend' string.\n */\nconst animationEndEvent = \"animationend\";\nexport default animationEndEvent;\n", "/**\n * A global namespace for 'transitionDuration' string.\n */\nconst transitionDuration = \"transitionDuration\";\nexport default transitionDuration;\n", "/**\n * A global namespace for 'transitionDelay' string.\n */\nconst transitionDelay = \"transitionDelay\";\nexport default transitionDelay;\n", "/**\n * A global namespace for 'transitionend' string.\n */\nconst transitionEndEvent = \"transitionend\";\nexport default transitionEndEvent;\n", "/**\n * A global namespace for `transitionProperty` string for modern browsers.\n */\nconst transitionProperty = \"transitionProperty\";\nexport default transitionProperty;\n", "/**\n * A global namespace for 'addEventListener' string.\n */\nconst addEventListener = \"addEventListener\";\nexport default addEventListener;\n", "/**\n * A global namespace for 'removeEventListener' string.\n */\nconst removeEventListener = \"removeEventListener\";\nexport default removeEventListener;\n", "/**\n * A global namespace for predefined\n * CSS3 'cubic-bezier()' easing functions.\n */\nconst bezierEasings = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\",\n};\nexport default bezierEasings;\n", "/**\n * A global namespace for `offsetHeight` property.\n */\nconst offsetHeight = \"offsetHeight\";\nexport default offsetHeight;\n", "/**\n * A global namespace for `offsetWidth` property.\n */\nconst offsetWidth = \"offsetWidth\";\nexport default offsetWidth;\n", "/**\n * A global namespace for `scrollHeight` property.\n */\nconst scrollHeight = \"scrollHeight\";\nexport default scrollHeight;\n", "/**\n * A global namespace for `scrollWidth` property.\n */\nconst scrollWidth = \"scrollWidth\";\nexport default scrollWidth;\n", "/**\n * A global namespace for `touchcancel` event.\n */\nconst tabindex = \"tabindex\";\nexport default tabindex;\n", "import NavigatorUA from \"../interface/navigatorUA\";\n\nconst uaDATA = (navigator as NavigatorUA).userAgentData;\n\n/**\n * A global namespace for `userAgentData` object.\n */\nconst userAgentData: NavigatorUA[\"userAgentData\"] = uaDATA;\nexport default userAgentData;\n", "const { userAgent: userAgentString } = navigator;\n\n/**\n * A global namespace for `navigator.userAgent` string.\n */\nconst userAgent = userAgentString;\nexport default userAgent;\n", "import userAgentData from \"../strings/userAgentData\";\nimport userAgent from \"../strings/userAgent\";\n\nconst mobileBrands = /iPhone|iPad|iPod|Android/i;\nlet isMobileCheck = false;\n\n/* istanbul ignore else */\nif (userAgentData) {\n  isMobileCheck = userAgentData.brands.some((x) => mobileBrands.test(x.brand));\n} else {\n  isMobileCheck = mobileBrands.test(userAgent);\n}\n\n/**\n * A global `boolean` for mobile detection.\n */\nconst isMobile = isMobileCheck;\n\nexport default isMobile;\n", "import { NavigatorUABrand } from \"../interface/navigatorUA\";\nimport userAgentData from \"../strings/userAgentData\";\nimport userAgent from \"../strings/userAgent\";\n\nconst appleBrands = /(iPhone|iPod|iPad)/;\n\n/**\n * A global `boolean` for Apple browsers.\n */\nconst isApple: boolean = userAgentData\n  ? userAgentData.brands.some((x: NavigatorUABrand) => appleBrands.test(x.brand))\n  : /* istanbul ignore next */ appleBrands.test(userAgent);\n\nexport default isApple;\n", "import userAgent from \"../strings/userAgent\";\n\n/**\n * A global boolean for Gecko browsers. When writing this file,\n * Gecko was not supporting `userAgentData`.\n */\nconst isFirefox = userAgent ? userAgent.includes(\"Firefox\") : /* istanbul ignore next */ false;\n\nexport default isFirefox;\n", "/**\n * A global namespace for `document.head`.\n */\nconst { head: documentHead } = document;\nexport default documentHead;\n", "import documentHead from \"../blocks/documentHead\";\n\n/**\n * A global `boolean` for CSS3 3D transform support.\n */\nconst support3DTransform = [\"webkitPerspective\", \"perspective\"].some(\n  (p) => p in documentHead.style\n);\n\nexport default support3DTransform;\n", "/**\n * Add eventListener to an `EventTarget` object.\n */\nexport default function on(\n  element: EventTarget,\n  eventName: string,\n  listener: EventListener,\n  options?: AddEventListenerOptions\n) {\n  const ops = options || false;\n  element.addEventListener(eventName, listener, ops);\n}\n", "/**\n * Remove eventListener from an `EventTarget` object.\n */\nexport default function off(\n  element: EventTarget,\n  eventName: string,\n  listener: EventListener,\n  options?: AddEventListenerOptions\n) {\n  const ops = options || false;\n  element.removeEventListener(eventName, listener, ops);\n}\n", "import on from './on';\nimport off from './off';\n\n/**\n * Add an `eventListener` to an `EventTarget`\n * element and remove it once callback is called.\n */\nconst one = (\n  element: EventTarget,\n  eventName: string,\n  listener: EventListener,\n  options?: AddEventListenerOptions\n) => {\n  /** Wrap the listener for easy on -> off */\n  const handlerWrapper = (e: Event): void => {\n    /* istanbul ignore else */\n    if (e.target === element) {\n      listener.apply(element, [e]);\n      off(element, eventName, handlerWrapper, options);\n    }\n  };\n  on(element, eventName, handlerWrapper, options);\n};\n\nexport default one;\n", "import DOMContentLoadedEvent from \"../strings/DOMContentLoadedEvent\";\nimport one from \"../event/one\";\n\n/**\n * A global `boolean` for passive events support,\n * in general event options are not suited for scroll prevention.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\nconst supportPassive = (() => {\n  let result = false;\n  try {\n    const opts = Object.defineProperty({}, \"passive\", {\n      get() {\n        result = true;\n        return result;\n      },\n    });\n    /* istanbul ignore next */\n    one(document, DOMContentLoadedEvent, () => {}, opts);\n  } catch (e) {\n    // throw Error('Passive events are not supported');\n  }\n\n  return result;\n})();\n\nexport default supportPassive;\n", "import documentHead from \"../blocks/documentHead\";\n\n/**\n * A global `boolean` for CSS3 transform support.\n */\nconst supportTransform = [\"webkitTransform\", \"transform\"].some((p) => p in documentHead.style);\n\nexport default supportTransform;\n", "/**\n * A global `boolean` for touch events support.\n */\nconst supportTouch =\n  \"ontouchstart\" in window || /* istanbul ignore next */ \"msMaxTouchPoints\" in navigator;\n\nexport default supportTouch;\n", "import documentHead from \"../blocks/documentHead\";\n\n/**\n * A global `boolean` for CSS3 animation support.\n */\nconst supportAnimation = [\"webkitAnimation\", \"animation\"].some((p) => p in documentHead.style);\n\nexport default supportAnimation;\n", "import documentHead from \"../blocks/documentHead\";\n\n/**\n * A global `boolean` for CSS3 transition support.\n */\nconst supportTransition = [\"webkitTransition\", \"transition\"].some((p) => p in documentHead.style);\n\nexport default supportTransition;\n", "/**\n * Shortcut for `HTMLElement.getAttribute()` method.\n * @param element target element\n * @param att attribute name\n * @returns attribute value\n */\nconst getAttribute = (element: HTMLElement, att: string): string | null =>\n  element.getAttribute(att);\n\nexport default getAttribute;\n", "/**\n * Shortcut for `HTMLElement.getAttributeNS()` method.\n * @param ns attribute namespace\n * @param element target element\n * @param att attribute name\n * @returns attribute value\n */\nconst getAttributeNS = (ns: string, element: HTMLElement, att: string) =>\n  element.getAttributeNS(ns, att);\n\nexport default getAttributeNS;\n", "/**\n * Shortcut for `HTMLElement.hasAttribute()` method.\n * @param element target element\n * @param att attribute name\n * @returns the query result\n */\nconst hasAttribute = (element: HTMLElement, att: string): boolean => element.hasAttribute(att);\n\nexport default hasAttribute;\n", "/**\n * Shortcut for `HTMLElement.hasAttributeNS()` method.\n * @param ns attribute namespace\n * @param element target element\n * @param att attribute name\n * @returns the query result\n */\nconst hasAttributeNS = (ns: string, element: HTMLElement, att: string): boolean =>\n  element.hasAttributeNS(ns, att);\n\nexport default hasAttributeNS;\n", "/**\n * Shortcut for `HTMLElement.setAttribute()` method.\n * @param element target element\n * @param att attribute name\n * @param value attribute value\n */\nconst setAttribute = (element: HTMLElement, att: string, value: string) =>\n  element.setAttribute(att, value);\n\nexport default setAttribute;\n", "/**\n * Shortcut for `SVGElement.setAttributeNS()` method.\n * @param ns attribute namespace\n * @param element target element\n * @param att attribute name\n * @param value attribute value\n */\nconst setAttributeNS = (ns: string, element: HTMLElement, att: string, value: string): void =>\n  element.setAttributeNS(ns, att, value);\n\nexport default setAttributeNS;\n", "/**\n * Shortcut for `HTMLElement.removeAttribute()` method.\n * @param element target element\n * @param att attribute name\n */\nconst removeAttribute = (element: HTMLElement, att: string): void => element.removeAttribute(att);\n\nexport default removeAttribute;\n", "/**\n * Shortcut for `HTMLElement.removeAttributeNS()` method.\n * @param ns attribute namespace\n * @param  element target element\n * @param att attribute name\n */\nconst removeAttributeNS = (ns: string, element: HTMLElement, att: string): void =>\n  element.removeAttributeNS(ns, att);\n\nexport default removeAttributeNS;\n", "/**\n * Add one or more CSS classes to `HTMLElement.classList`.\n *\n * @param element target\n * @param classNAME to add\n */\nconst addClass = (element: HTMLElement, ...classNAME: string[]): void => {\n  element.classList.add(...classNAME);\n};\n\nexport default addClass;\n", "/**\n * Remove one or more classes from `HTMLElement.classList`.\n *\n * @param element target\n * @param classNAME to remove\n */\nconst removeClass = (element: HTMLElement, ...classNAME: string[]): void => {\n  element.classList.remove(...classNAME);\n};\n\nexport default removeClass;\n", "/**\n * Check class in `HTMLElement.classList`.\n *\n * @param element target\n * @param classNAME to check\n */\nconst hasClass = (element: HTMLElement, classNAME: string): boolean => {\n  return element.classList.contains(classNAME);\n};\n\nexport default hasClass;\n", "/**\n * Shortie for `Array.from()` static method.\n * The utility should also work with any typed arrays\n * like Float64Array or Int32Array.\n *\n * @param arr array-like iterable object\n * @returns a new array from iterable object\n */\nconst ArrayFrom = <T>(arr: ArrayLike<T> | Iterable<T>): T[] => Array.from(arr);\n\nexport default ArrayFrom;\n", "/**\n * Checks if an element is an `HTMLElement`.\n * @see https://dom.spec.whatwg.org/#node\n *\n * @param element the target object\n * @returns the query result\n */\nconst isHTMLElement = (element?: any): element is HTMLElement =>\n  (element && element.nodeType === 1) || false;\nexport default isHTMLElement;\n", "import isHTMLElement from '../is/isHTMLElement';\n\ntype ComponentData = Record<string, any>;\ntype ElementComponentMap = Map<HTMLElement, ComponentData>;\ntype ComponentDataMap = Map<string, ElementComponentMap>;\n\nconst componentData: ComponentDataMap = new Map();\n\n/**\n * An interface for web components background data.\n * @see https://github.com/thednp/bootstrap.native/blob/master/src/components/base-component.js\n */\nconst Data = {\n  /**\n   * Sets web components data.\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: <T extends ComponentData>(element: HTMLElement, component: string, instance: T): void => {\n    if (!isHTMLElement(element)) return;\n\n    /* istanbul ignore else */\n    if (!componentData.has(component)) {\n      componentData.set(component, new Map());\n    }\n\n    const instanceMap = componentData.get(component);\n    // not undefined, but defined right above\n    instanceMap.set(element, instance);\n  },\n\n  /**\n   * Returns all instances for specified component.\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (component: string): ElementComponentMap | null => {\n    const instanceMap = componentData.get(component);\n\n    return instanceMap || null;\n  },\n\n  /**\n   * Returns the instance associated with the target.\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (element: HTMLElement, component: string): ComponentData | null => {\n    if (!isHTMLElement(element) || !component) return null;\n    const instanceMap = Data.getAllFor(component);\n    const instance = element && instanceMap && instanceMap.get(element);\n\n    return instance || null;\n  },\n\n  /**\n   * Removes web components data.\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: <S extends string, E extends HTMLElement>(element: E, component: S): void => {\n    const instanceMap = Data.getAllFor(component);\n    if (!instanceMap || !isHTMLElement(element)) return;\n\n    instanceMap.delete(element);\n\n    /* istanbul ignore else */\n    if (instanceMap.size === 0) {\n      componentData.delete(component);\n    }\n  },\n};\n\n/**\n * An alias for `Data.get()`.\n */\nexport const getInstance = (target: HTMLElement, component: string) => Data.get(target, component);\n\nexport default Data;\n", "/**\n * Shortie for `typeof SOMETHING === \"string\"`.\n *\n * @param str input value\n * @returns the query result\n */\nconst isString = (str?: any): str is string => typeof str === \"string\" || false;\n\nexport default isString;\n", "/**\n * Checks if an object is a `Node`.\n *\n * @param node the target object\n * @returns the query result\n */\n\nconst isNode = (node?: any): node is Node =>\n  (node && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((x) => node.nodeType === x)) || false;\n\nexport default isNode;\n", "/**\n * Check if a target object is `Window`.\n * => equivalent to `object instanceof Window`\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isWindow = (obj?: any): obj is Window => (obj && obj.constructor.name === \"Window\") || false;\n\nexport default isWindow;\n", "/**\n * Checks if an object is a `Document`.\n * @see https://dom.spec.whatwg.org/#node\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isDocument = (obj?: any): obj is Document => (obj && obj.nodeType === 9) || false;\n\nexport default isDocument;\n", "import isNode from \"../is/isNode\";\nimport isWindow from \"../is/isWindow\";\nimport isDocument from \"../is/isDocument\";\n\n/**\n * Returns the `document` or the `#document` element.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param node the reference node\n * @returns the parent document of the given node\n */\nconst getDocument = (node?: any): Document => {\n  // node instanceof Document\n  if (isDocument(node)) return node;\n  // node instanceof Node\n  if (isNode(node)) return node.ownerDocument;\n  // node instanceof Window\n  if (isWindow(node)) return node.document;\n  // node is undefined | NULL\n  return window.document;\n};\n\nexport default getDocument;\n", "/**\n * Shortcut for `Object.entries()` static method.\n * @param obj a target object\n * @returns the entries of an object in an array format [key, value][]\n */\nconst ObjectEntries = <O extends {}>(obj: O) => Object.entries(obj) as Array<[keyof O, O[keyof O]]>;\n\nexport default ObjectEntries;\n", "import isString from '../is/isString';\nimport setAttribute from '../attr/setAttribute';\nimport getDocument from '../get/getDocument';\nimport ObjectEntries from './ObjectEntries';\n\n/**\n * Shortie for `document.createElement` method\n * which allows you to create a new `HTMLElement` for a given `tagName`\n * or based on an object with specific non-readonly attributes with string values:\n * `id`, `className`, `textContent`, `style`, etc.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement\n *\n * @param param `tagName` or object\n * @return a new `HTMLElement` or `Element`\n */\nconst createElement = (param?: string | Partial<HTMLElement>): HTMLElement | undefined => {\n  if (!param) return undefined;\n\n  if (typeof param === 'string') {\n    return getDocument().createElement(param);\n  }\n\n  const { tagName } = param;\n  const newElement = createElement(tagName);\n\n  if (!newElement) return undefined;\n\n  const attr = { ...param };\n  delete attr.tagName;\n\n  ObjectEntries(attr).forEach(([key, value]) => {\n    if (isString(value)) {\n      setAttribute(newElement, key, value);\n    }\n  });\n  return newElement;\n};\n\nexport default createElement;\n", "import getDocument from '../get/getDocument';\nimport ObjectEntries from './ObjectEntries';\nimport setAttribute from '../attr/setAttribute';\nimport isString from '../is/isString';\n\n/**\n * Shortie for `document.createElementNS` method\n * which allows you to create a new `HTMLElement` for a given `tagName`\n * or based on an object with specific non-readonly attributes with string values:\n * `id`, `className`, `textContent`, `style`, etc.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/createElementNS\n *\n * @param ns `namespaceURI` to associate with the new `HTMLElement`\n * @param param `tagName` or object\n * @return a new `HTMLElement`\n */\nconst createElementNS = (\n  ns?: string,\n  param?: string | Partial<HTMLElement>\n): HTMLElement | undefined => {\n  if (!ns && !param) return undefined;\n\n  if (typeof param === 'string') {\n    return getDocument().createElementNS(ns, param) as HTMLElement;\n  }\n\n  const { tagName } = param;\n  const newElement = createElementNS(ns, tagName as string);\n\n  if (!newElement) return undefined;\n\n  const attr = { ...param };\n  delete attr.tagName;\n\n  ObjectEntries(attr).forEach(([key, value]) => {\n    if (isString(value)) {\n      setAttribute(newElement, key, value);\n    }\n  });\n\n  return newElement;\n};\n\nexport default createElementNS;\n", "/**\n * Shortcut for the `Element.dispatchEvent(Event)` method.\n *\n * @param element is the target\n * @param event is the `Event` object\n */\nconst dispatchEvent = (element: EventTarget, event: Event): boolean => element.dispatchEvent(event);\n\nexport default dispatchEvent;\n", "/**\n * JavaScript `Array` distinct.\n * @see https://codeburst.io/javascript-array-distinct-5edc93501dc4\n *\n * @example\n * ```\n * [0,1,1,2].filter(distinct)\n * // => [0,1,2]\n * ```\n * @param value array item value\n * @param index array item index\n * @param arr a clone of the target array\n * @returns the query result\n */\nconst distinct = <T>(value: T, index: number, arr: T[]): boolean => arr.indexOf(value) === index;\n\nexport default distinct;\n", "import CSS4Declaration from \"../interface/css4Declaration\";\n\n/**\n * Shortcut for `window.getComputedStyle(element).propertyName`\n * static method.\n *\n * * If `element` parameter is not an `HTMLElement`, `getComputedStyle`\n * throws a `ReferenceError`.\n *\n * @param element target\n * @param property the css property\n * @return the css property value\n */\nconst getElementStyle = (element: HTMLElement, property: string): string => {\n  const computedStyle: CSS4Declaration = getComputedStyle(element);\n\n  // must use camelcase strings,\n  // or non-camelcase strings with `getPropertyValue`\n  return property.includes(\"--\")\n    ? computedStyle.getPropertyValue(property)\n    : computedStyle[property];\n};\n\nexport default getElementStyle;\n", "import animationDelay from \"../strings/animationDelay\";\nimport animationName from \"../strings/animationName\";\nimport getElementStyle from \"./getElementStyle\";\n\n/**\n * Utility to get the computed `animationDelay`\n * from Element in miliseconds.\n *\n * @param element target\n * @return the `animationDelay` value in miliseconds\n */\nconst getElementAnimationDelay = (element: HTMLElement): number => {\n  const propertyValue = getElementStyle(element, animationName);\n  const durationValue = getElementStyle(element, animationDelay);\n  const durationScale = durationValue.includes(\"ms\") ? /* istanbul ignore next */ 1 : 1000;\n  const duration =\n    propertyValue && propertyValue !== \"none\" ? parseFloat(durationValue) * durationScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */ 0;\n};\n\nexport default getElementAnimationDelay;\n", "import animationDuration from \"../strings/animationDuration\";\nimport animationName from \"../strings/animationName\";\nimport getElementStyle from \"./getElementStyle\";\n\n/**\n * Utility to get the computed `animationDuration`\n * from `HTMLElement` in miliseconds.\n *\n * @param element target\n * @return the `animationDuration` value in miliseconds\n */\nconst getElementAnimationDuration = (element: HTMLElement): number => {\n  const propertyValue = getElementStyle(element, animationName);\n  const durationValue = getElementStyle(element, animationDuration);\n  const durationScale = durationValue.includes(\"ms\") ? /* istanbul ignore next */ 1 : 1000;\n  const duration =\n    propertyValue && propertyValue !== \"none\" ? parseFloat(durationValue) * durationScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */ 0;\n};\n\nexport default getElementAnimationDuration;\n", "import animationEndEvent from \"../strings/animationEndEvent\";\nimport getElementAnimationDelay from \"../get/getElementAnimationDelay\";\nimport getElementAnimationDuration from \"../get/getElementAnimationDuration\";\nimport dispatchEvent from \"./dispatchEvent\";\n\n/**\n * Utility to make sure callbacks are consistently\n * called when animation ends.\n *\n * @param element target\n * @param handler `animationend` callback\n */\nconst emulateAnimationEnd = (element: HTMLElement, handler: EventListener): void => {\n  let called = 0;\n  const endEvent = new Event(animationEndEvent);\n  const duration = getElementAnimationDuration(element);\n  const delay = getElementAnimationDelay(element);\n\n  if (duration) {\n    /** Wrap the handler in on -> off callback */\n    const animationEndWrapper = (e: Event): void => {\n      /* istanbul ignore else */\n      if (e.target === element) {\n        handler.apply(element, [e]);\n        element.removeEventListener(animationEndEvent, animationEndWrapper);\n        called = 1;\n      }\n    };\n    element.addEventListener(animationEndEvent, animationEndWrapper);\n    setTimeout(() => {\n      /* istanbul ignore next */\n      if (!called) dispatchEvent(element, endEvent);\n    }, duration + delay + 17);\n  } else {\n    handler.apply(element, [endEvent]);\n  }\n};\n\nexport default emulateAnimationEnd;\n", "import transitionDelay from \"../strings/transitionDelay\";\nimport transitionProperty from \"../strings/transitionProperty\";\nimport getElementStyle from \"./getElementStyle\";\n\n/**\n * Utility to get the computed `transitionDelay`\n * from Element in miliseconds.\n *\n * @param element target\n * @return the `transitionDelay` value in miliseconds\n */\nconst getElementTransitionDelay = (element: HTMLElement): number => {\n  const propertyValue = getElementStyle(element, transitionProperty);\n  const delayValue = getElementStyle(element, transitionDelay);\n  const delayScale = delayValue.includes(\"ms\") ? /* istanbul ignore next */ 1 : 1000;\n  const duration =\n    propertyValue && propertyValue !== \"none\" ? parseFloat(delayValue) * delayScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */ 0;\n};\n\nexport default getElementTransitionDelay;\n", "import transitionDuration from \"../strings/transitionDuration\";\nimport transitionProperty from \"../strings/transitionProperty\";\nimport getElementStyle from \"./getElementStyle\";\n\n/**\n * Utility to get the computed `transitionDuration`\n * from Element in miliseconds.\n *\n * @param element target\n * @return the `transitionDuration` value in miliseconds\n */\nconst getElementTransitionDuration = (element: HTMLElement): number => {\n  const propertyValue = getElementStyle(element, transitionProperty);\n  const durationValue = getElementStyle(element, transitionDuration);\n  const durationScale = durationValue.includes(\"ms\") ? /* istanbul ignore next */ 1 : 1000;\n  const duration =\n    propertyValue && propertyValue !== \"none\" ? parseFloat(durationValue) * durationScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */ 0;\n};\n\nexport default getElementTransitionDuration;\n", "import transitionEndEvent from \"../strings/transitionEndEvent\";\nimport getElementTransitionDelay from \"../get/getElementTransitionDelay\";\nimport getElementTransitionDuration from \"../get/getElementTransitionDuration\";\nimport dispatchEvent from \"./dispatchEvent\";\n\n/**\n * Utility to make sure callbacks are consistently\n * called when transition ends.\n *\n * @param element event target\n * @param handler `transitionend` callback\n */\nconst emulateTransitionEnd = (element: HTMLElement, handler: EventListener): void => {\n  let called = 0;\n  const endEvent = new Event(transitionEndEvent);\n  const duration = getElementTransitionDuration(element);\n  const delay = getElementTransitionDelay(element);\n\n  if (duration) {\n    /** Wrap the handler in on -> off callback */\n    const transitionEndWrapper = (e: Event): void => {\n      /* istanbul ignore else */\n      if (e.target === element) {\n        handler.apply(element, [e]);\n        element.removeEventListener(transitionEndEvent, transitionEndWrapper);\n        called = 1;\n      }\n    };\n    element.addEventListener(transitionEndEvent, transitionEndWrapper);\n    setTimeout(() => {\n      /* istanbul ignore next */\n      if (!called) dispatchEvent(element, endEvent);\n    }, duration + delay + 17);\n  } else {\n    handler.apply(element, [endEvent]);\n  }\n};\n\nexport default emulateTransitionEnd;\n", "/**\n * Shortcut for `Float32Array.from()` static method.\n * @param arr array-like iterable object\n * @returns a new Float32Array\n */\nconst Float32ArrayFrom = (arr: ArrayLike<number> | Iterable<number>): Float32Array =>\n  Float32Array.from(Array.from(arr));\n\nexport default Float32ArrayFrom;\n", "/**\n * Shortcut for `Float64Array.from()` static method.\n * @param arr array-like iterable object\n * @returns a new Float64Array\n */\nconst Float64ArrayFrom = (arr: ArrayLike<number> | Iterable<number>): Float64Array =>\n  Float64Array.from(Array.from(arr));\n\nexport default Float64ArrayFrom;\n", "/**\n * Shortie for `HTMLElement.focus()` method.\n *\n * @param element is the target\n * @param options allows to pass additional options such as `preventScroll: boolean`\n */\nconst focus = (element: HTMLOrSVGElement, options?: FocusOptions): void => element.focus(options);\n\nexport default focus;\n", "/** A generic function with empty body. */\nconst noop = () => {};\n\nexport default noop;\n", "import { optionValues } from '../types';\n\n/**\n * Utility to normalize component options\n *\n * @param value the input value\n * @return the normalized value\n */\nconst normalizeValue = (value?: any): optionValues => {\n  if (['true', true].includes(value)) {\n    return true;\n  }\n\n  if (['false', false].includes(value)) {\n    return false;\n  }\n\n  if (['null', '', null].includes(value)) {\n    return null;\n  }\n\n  if (value !== '' && !Number.isNaN(+value)) {\n    return +value;\n  }\n\n  // string / function / HTMLElement / object / undefined\n  return value;\n};\n\nexport default normalizeValue;\n", "/**\n * Shortcut for `String.toLowerCase()`.\n *\n * @param source input string\n * @returns lowercase output string\n */\nconst toLowerCase = (source: string): string => source.toLowerCase();\n\nexport default toLowerCase;\n", "import getAttribute from '../attr/getAttribute';\nimport normalizeValue from './normalizeValue';\nimport ObjectEntries from './ObjectEntries';\nimport toLowerCase from './toLowerCase';\nimport { optionValues } from '../types';\n\n/**\n * Utility to normalize component options.\n *\n * @param element target\n * @param defaultOps component default options\n * @param inputOps component instance options\n * @param ns component namespace\n * @return normalized component options object\n */\nconst normalizeOptions = <T extends { [key: string]: optionValues }>(\n  element: HTMLElement,\n  defaultOps: T,\n  inputOps: Partial<T>,\n  ns?: string\n): T => {\n  const INPUT = { ...inputOps };\n  const data = { ...element.dataset } as Partial<T> & { [key: string]: any };\n  const normalOps = { ...defaultOps };\n  const dataOps: Partial<T> = {};\n  const title = 'title';\n\n  ObjectEntries(data).forEach(([k, v]) => {\n    const key: keyof T =\n      ns && typeof k === 'string' && k.includes(ns)\n        ? k.replace(ns, '').replace(/[A-Z]/g, (match: string) => toLowerCase(match))\n        : k;\n\n    dataOps[key] = normalizeValue(v) as T[keyof T];\n  });\n\n  ObjectEntries(INPUT).forEach(([k, v]) => {\n    INPUT[k] = normalizeValue(v) as T[keyof T];\n  });\n\n  ObjectEntries(defaultOps).forEach(([k, v]) => {\n    /* istanbul ignore else */\n    if (k in INPUT) {\n      normalOps[k] = INPUT[k];\n    } else if (k in dataOps) {\n      normalOps[k] = dataOps[k];\n    } else {\n      normalOps[k] = (k === title ? getAttribute(element, title) : v) as T[keyof T];\n    }\n  });\n\n  return normalOps;\n};\n\nexport default normalizeOptions;\n", "/**\n * Shortcut for `Object.assign()` static method.\n * @param obj a target object\n * @param source source object(s)\n * @see https://github.com/devinrhode2/ObjectTyped/blob/master/src/index.ts\n */\n\nconst ObjectAssign = <A extends {}, B>(obj: A, ...source: B[]): B extends any[] ? any : A & B =>\n  Object.assign(obj, ...source);\n\nexport default ObjectAssign;\n", "/**\n * Shortcut for `Object.keys()` static method.\n * @param obj a target object\n * @returns an array with object keys\n */\nconst ObjectKeys = (obj: Record<string, any>): string[] => Object.keys(obj);\n\nexport default ObjectKeys;\n", "/**\n * Shortcut for `Object.values()` static method.\n * @param obj a target object\n * @returns an array with the object values\n */\nconst ObjectValues = <O extends {}>(obj: O): Array<[O[keyof O]]> => Object.values(obj);\n\nexport default ObjectValues;\n", "/**\n * Checks if a value is an `Object`.\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isObject = (obj?: any): obj is object => typeof obj === \"object\" || false;\n\nexport default isObject;\n", "import OriginalEvent from '../interface/originalEvent';\nimport isObject from '../is/isObject';\nimport ObjectAssign from './ObjectAssign';\n\n/**\n * Returns a namespaced `CustomEvent` specific to each component.\n * @param EventType Event.type\n * @param config Event.options | Event.properties\n * @returns a new namespaced event\n */\nconst OriginalEvent = <T>(EventType: string, config?: CustomEventInit<T>): OriginalEvent<T> => {\n  const OriginalCustomEvent = new CustomEvent<T>(EventType, {\n    cancelable: true,\n    bubbles: true,\n  } as CustomEventInit<T>);\n\n  /* istanbul ignore else */\n  if (isObject(config)) {\n    ObjectAssign(OriginalCustomEvent, config);\n  }\n  return OriginalCustomEvent;\n};\n\nexport default OriginalEvent;\n", "/**\n * A global namespace for most scroll event listeners.\n */\nconst passiveHandler: Partial<AddEventListenerOptions> = { passive: true };\n\nexport default passiveHandler;\n", "/**\n * Utility to force re-paint of an `HTMLElement` target.\n *\n * @param element is the target\n * @return the `Element.offsetHeight` value\n */\nconst reflow = (element: HTMLElement): number => element.offsetHeight;\n\nexport default reflow;\n", "import ObjectAssign from './ObjectAssign';\nimport ObjectEntries from './ObjectEntries';\nimport CSS4Declaration from '../interface/css4Declaration';\n\n/**\n * Shortcut for multiple uses of `HTMLElement.style.propertyName` method.\n * @param element target element\n * @param styles attribute value\n */\nconst setElementStyle = (element: HTMLElement, styles: CSS4Declaration): void => {\n  ObjectEntries(styles).forEach(([key, value]: [string, string]) => {\n    if (key.includes('--')) {\n      element.style.setProperty(key, value);\n    } else {\n      const propObject: Partial<CSS4Declaration> = {};\n      propObject[key] = value;\n      ObjectAssign(element.style, propObject);\n    }\n  });\n};\nexport default setElementStyle;\n", "/**\r\n * Checks if an element is a `Map`.\r\n *\r\n * @param obj the target object\r\n * @returns the query result\r\n */\r\nconst isMap = (obj?: any): obj is Map<any, any> => (obj && obj.constructor.name === 'Map') || false;\r\nexport default isMap;\r\n", "/**\n * Shortie for `typeof SOMETHING === \"number\"`.\n *\n * @param num input value\n * @returns the query result\n */\nconst isNumber = (num?: any): num is number => typeof num === \"number\" || false;\n\nexport default isNumber;\n", "import isMap from '../is/isMap';\nimport isHTMLElement from '../is/isHTMLElement';\nimport isNumber from '../is/isNumber';\n\ntype KeyMap = Map<string, number>;\ntype TimeMap = Map<HTMLElement, number | KeyMap>;\n\nconst TimeCache: TimeMap = new Map();\n/**\n * An interface for one or more `TimerHandler`s per `Element`.\n * @see https://github.com/thednp/navbar/\n */\nconst Timer = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (element: HTMLElement, callback: TimerHandler, delay: number, key?: string): void => {\n    if (!isHTMLElement(element)) return;\n\n    /* istanbul ignore else */\n    if (key && key.length) {\n      /* istanbul ignore else */\n      if (!TimeCache.has(element)) {\n        TimeCache.set(element, new Map());\n      }\n      (TimeCache.get(element) as KeyMap).set(key, setTimeout(callback, delay));\n    } else {\n      TimeCache.set(element, setTimeout(callback, delay));\n    }\n  },\n\n  /**\n   * Returns the timer associated with the target.\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (element: HTMLElement, key?: string): number | null => {\n    if (!isHTMLElement(element)) return null;\n    const keyTimers = TimeCache.get(element);\n\n    if (isMap(keyTimers)) {\n      return keyTimers.get(key) || /* istanbul ignore next */ null;\n    } else if (isNumber(keyTimers)) {\n      return keyTimers;\n    }\n    return null;\n  },\n\n  /**\n   * Clears the element's timer.\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (element: HTMLElement, key?: string): void => {\n    if (!isHTMLElement(element)) return;\n\n    const keyTimers = TimeCache.get(element);\n\n    if (key && key.length && isMap(keyTimers)) {\n      /* istanbul ignore else */\n      if (isMap(keyTimers)) {\n        clearTimeout(keyTimers.get(key));\n        keyTimers.delete(key);\n        /* istanbul ignore else */\n        if (keyTimers.size === 0) {\n          TimeCache.delete(element);\n        }\n      }\n    } else {\n      clearTimeout(keyTimers as number);\n      TimeCache.delete(element);\n    }\n  },\n};\n\nexport default Timer;\n", "/**\n * Shortcut for `String.toUpperCase()`.\n *\n * @param source input string\n * @returns uppercase output string\n */\nconst toUpperCase = (source: string): string => source.toUpperCase();\n\nexport default toUpperCase;\n", "import isHTMLElement from \"../is/isHTMLElement\";\nimport BoundingClientRect from \"../interface/boundingClientRect\";\n\n/**\n * Returns the bounding client rect of a target `HTMLElement`.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element event.target\n * @param includeScale when *true*, the target scale is also computed\n * @returns the bounding client rect object\n */\nconst getBoundingClientRect = (\n  element: HTMLElement,\n  includeScale?: boolean\n): BoundingClientRect => {\n  const { width, height, top, right, bottom, left } = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    const { offsetWidth, offsetHeight } = element;\n    scaleX = offsetWidth > 0 ? Math.round(width) / offsetWidth : /* istanbul ignore next */ 1;\n    scaleY = offsetHeight > 0 ? Math.round(height) / offsetHeight : /* istanbul ignore next */ 1;\n  }\n\n  return {\n    width: width / scaleX,\n    height: height / scaleY,\n    top: top / scaleY,\n    right: right / scaleX,\n    bottom: bottom / scaleY,\n    left: left / scaleX,\n    x: left / scaleX,\n    y: top / scaleY,\n  };\n};\n\nexport default getBoundingClientRect;\n", "import getDocument from './getDocument';\n\n/**\n * Returns the `document.body` or the `<body>` element.\n *\n * @param node the reference node\n * @returns the parent `<body>` of the specified node\n */\nconst getDocumentBody = (node?: any): HTMLElement => {\n  return getDocument(node).body;\n};\n\nexport default getDocumentBody;\n", "import getDocument from './getDocument';\n\n/**\n * Returns the `document.documentElement` or the `<HTML>` element.\n *\n * @param node the reference node\n * @returns the parent `<HTML>` of the node's parent document\n */\nconst getDocumentElement = (node?: Node): HTMLElement => {\n  return getDocument(node).documentElement;\n};\n\nexport default getDocumentElement;\n", "import getDocument from \"./getDocument\";\n/**\n * Returns the `document.head` or the `<head>` element.\n *\n * @param node the reference node\n * @returns the `<head>` of the node's parent document\n */\nconst getDocumentHead = (node?: Node): HTMLElement & HTMLHeadElement => {\n  return getDocument(node).head;\n};\n\nexport default getDocumentHead;\n", "import isWindow from '../is/isWindow';\n\n/**\n * Returns an `{x,y}` object with the target\n * `HTMLElement` / `Node` scroll position.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element target node / element\n * @returns the scroll tuple\n */\nconst getNodeScroll = (element: HTMLElement | Window): { x: number; y: number } => {\n  const isWin = isWindow(element);\n  const x = isWin ? element.scrollX : element.scrollLeft;\n  const y = isWin ? element.scrollY : element.scrollTop;\n\n  return { x, y };\n};\n\nexport default getNodeScroll;\n", "/**\n * Check if target is a `ShadowRoot`.\n *\n * @param element target\n * @returns the query result\n */\nconst isShadowRoot = (element?: any): element is ShadowRoot =>\n  (element && element.constructor.name === \"ShadowRoot\") || false;\n\nexport default isShadowRoot;\n", "import getDocumentElement from './getDocumentElement';\nimport isShadowRoot from '../is/isShadowRoot';\nimport isHTMLElement from '../is/isHTMLElement';\nimport isNode from '../is/isNode';\n\n/**\n * Returns the `parentNode` also going through `ShadowRoot`.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {Node} node the target node\n * @returns {Node} the apropriate parent node\n */\nconst getParentNode = (node: Node): Node => {\n  if (node.nodeName === 'HTML') {\n    return node;\n  }\n\n  // this is a quicker (but less type safe) way to save quite some bytes from the bundle\n  return (\n    (isHTMLElement(node) && node.assignedSlot) || // step into the shadow DOM of the parent of a slotted node\n    (isNode(node) && node.parentNode) || // DOM Element detected\n    (isShadowRoot(node) && node.host) || // ShadowRoot detected\n    getDocumentElement(node) // fallback to <HTML>\n  );\n};\n\nexport default getParentNode;\n", "import isHTMLElement from \"./isHTMLElement\";\nimport getBoundingClientRect from \"../get/getBoundingClientRect\";\n\n/**\n * Checks if a target `HTMLElement` is affected by scale.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element target\n * @returns the query result\n */\nexport default function isScaledElement(element?: HTMLElement): boolean {\n  if (!isHTMLElement(element)) return false;\n  const { width, height } = getBoundingClientRect(element);\n  const { offsetWidth, offsetHeight } = element;\n  return Math.round(width) !== offsetWidth || Math.round(height) !== offsetHeight;\n}\n", "import OffsetRect from '../interface/offsetRect';\nimport isScaledElement from '../is/isScaledElement';\nimport isHTMLElement from '../is/isHTMLElement';\nimport getBoundingClientRect from './getBoundingClientRect';\n\n/**\n * Returns the rect relative to a given offset parent and its scroll position.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element target\n * @param offsetParent the container / offset parent\n * @param scroll the offsetParent scroll position\n * @returns a DOMRect like object\n */\nconst getRectRelativeToOffsetParent = (\n  element: HTMLElement,\n  offsetParent: HTMLElement,\n  scroll: { x: number; y: number }\n): OffsetRect => {\n  const isParentAnElement = isHTMLElement(offsetParent);\n  const rect = getBoundingClientRect(element, isParentAnElement && isScaledElement(offsetParent));\n  const offsets = { x: 0, y: 0 };\n\n  /* istanbul ignore next */\n  if (isParentAnElement) {\n    const offsetRect = getBoundingClientRect(offsetParent, true);\n    offsets.x = offsetRect.x + offsetParent.clientLeft;\n    offsets.y = offsetRect.y + offsetParent.clientTop;\n  }\n\n  return {\n    x: rect.left + scroll.x - offsets.x,\n    y: rect.top + scroll.y - offsets.y,\n    width: rect.width,\n    height: rect.height,\n  };\n};\n\nexport default getRectRelativeToOffsetParent;\n", "import isMap from '../is/isMap';\n\nlet elementUID = 0;\nlet elementMapUID = 0;\n\ntype KeyIdMap = Map<string | number, number>;\ntype IDMap = Map<number | string | HTMLElement, number | KeyIdMap>;\n\nconst elementIDMap: IDMap = new Map();\n\n/**\n * Returns a unique identifier for popover, tooltip, scrollspy.\n *\n * @param element target element\n * @param key optional identifier key\n * @returns an existing or new unique ID\n */\nconst getUID = (element: HTMLElement, key?: string): number => {\n  let result = key ? elementUID : elementMapUID;\n\n  if (key) {\n    const elID = getUID(element);\n    const elMap = elementIDMap.get(elID) || (new Map() as KeyIdMap);\n    if (!elementIDMap.has(elID)) {\n      elementIDMap.set(elID, elMap);\n    }\n    if (isMap(elMap) && !elMap.has(key)) {\n      elMap.set(key, result);\n      elementUID += 1;\n    } else result = (elMap as KeyIdMap).get(key);\n  } else {\n    const elkey = element.id || element;\n\n    if (!elementIDMap.has(elkey)) {\n      elementIDMap.set(elkey, result);\n      elementMapUID += 1;\n    } else result = elementIDMap.get(elkey) as number;\n  }\n  return result;\n};\n\nexport default getUID;\n", "import isDocument from \"../is/isDocument\";\nimport isNode from \"../is/isNode\";\n\n/**\n * Returns the `Window` object of a target node.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param node target node\n * @returns the `Window` object\n */\nconst getWindow = (node?: Node): Window => {\n  // node is undefined | NULL\n  if (!node) return window;\n  // node instanceof Document\n  if (isDocument(node)) return node.defaultView;\n  // node instanceof Node\n  if (isNode(node)) return node.ownerDocument.defaultView;\n  // node is instanceof Window\n  return node;\n};\n\nexport default getWindow;\n", "/**\n * Shortie for the `Array.isArray()` static method.\n *\n * @param obj array-like iterable object\n * @returns the query result\n */\nconst isArray = (obj?: any): obj is any[] => Array.isArray(obj) || false;\n\nexport default isArray;\n", "/**\n * Checks if an element is an `HTMLCanvasElement` or `<canvas>`.\n *\n * @param element the target element\n * @returns the query result\n */\n\nconst isCanvas = (element?: any): element is HTMLCanvasElement =>\n  (element && element.constructor.name === \"HTMLCanvasElement\") || false;\n\nexport default isCanvas;\n", "import CustomElement from \"../interface/customElement\";\n\n/**\n * Checks if an object is a `CustomElement`.\n *\n * @param element the target object\n * @returns the query result\n */\nconst isCustomElement = <T extends CustomElement>(element?: any): element is T =>\n  (element && !!element.shadowRoot) || false;\n\nexport default isCustomElement;\n", "/**\n * Checks if an object is an `Element`.\n * @see https://dom.spec.whatwg.org/#node\n * ELEMENT_NODE = 1;\n * ATTRIBUTE_NODE = 2;\n * TEXT_NODE = 3;\n * CDATA_SECTION_NODE = 4;\n * ENTITY_REFERENCE_NODE = 5; // legacy\n * ENTITY_NODE = 6; // legacy\n * PROCESSING_INSTRUCTION_NODE = 7;\n * COMMENT_NODE = 8;\n * DOCUMENT_NODE = 9;\n * DOCUMENT_TYPE_NODE = 10;\n * DOCUMENT_FRAGMENT_NODE = 11;\n *\n * @param element the target object\n * @returns the query result\n */\nconst isElement = (element?: any): element is Element =>\n  (element && [1, 2, 3, 4, 5, 6, 7, 8].some((x) => element.nodeType === x)) || false;\n\nexport default isElement;\n", "import getBoundingClientRect from \"../get/getBoundingClientRect\";\nimport getDocumentElement from \"../get/getDocumentElement\";\nimport isNode from \"./isNode\";\n\n/**\n * Utility to determine if an `HTMLElement`\n * is partially visible in viewport.\n *\n * @param element target\n * @return the query result\n */\nconst isElementInScrollRange = (element?: HTMLElement): boolean => {\n  if (!isNode(element)) return false;\n\n  const { top, bottom } = getBoundingClientRect(element);\n  const { clientHeight } = getDocumentElement(element);\n  return top <= clientHeight && bottom >= 0;\n};\n\nexport default isElementInScrollRange;\n", "import getBoundingClientRect from \"../get/getBoundingClientRect\";\nimport getDocumentElement from \"../get/getDocumentElement\";\nimport isNode from \"./isNode\";\n\n/**\n * Utility to determine if an `HTMLElement`\n * is fully visible in the viewport.\n *\n * @param element target\n * @return the query result\n */\nconst isElementInViewport = (element?: HTMLElement): boolean => {\n  if (!isNode(element)) return false;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const { top, left, bottom, right } = getBoundingClientRect(element, true);\n\n  return top >= 0 && left >= 0 && bottom <= clientHeight && right <= clientWidth;\n};\nexport default isElementInViewport;\n", "import isHTMLElement from \"./isHTMLElement\";\nimport isArray from \"./isArray\";\n\n/**\n * Checks if an object is an `Array` in which all items are `Element`.\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isElementsArray = (obj?: any): obj is HTMLElement[] =>\n  (isArray(obj) && obj.every(isHTMLElement)) || false;\n\nexport default isElementsArray;\n", "/**\n * Checks if an object is a `Function`.\n *\n * @param fn the target object\n * @returns the query result\n */\nconst isFunction = (fn?: any): fn is Function =>\n  (fn && fn.constructor.name === \"Function\") || false;\n\nexport default isFunction;\n", "/**\n * Checks if an object is an `HTMLCollection`.\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isHTMLCollection = (obj?: any): obj is HTMLCollection =>\n  (obj && obj.constructor.name === \"HTMLCollection\") || false;\n\nexport default isHTMLCollection;\n", "/**\n * Check if a target element is an `<img>`.\n * @param element the target element\n * @returns the query result\n */\nconst isHTMLImageElement = (element?: any): element is HTMLImageElement =>\n  (element && element.tagName === \"IMG\") || false;\n\nexport default isHTMLImageElement;\n", "/**\r\n * Checks if an element is a `WeakMap`.\r\n *\r\n * @param obj the target object\r\n * @returns the query result\r\n */\r\nconst isWeakMap = (obj?: any): obj is WeakMap<any, any> =>\r\n  (obj && obj.constructor.name === 'WeakMap') || false;\r\nexport default isWeakMap;\r\n", "/**\n * Checks if an element is an `<svg>` (or any type of SVG element),\n * `<img>`, `<video>` or `<canvas>`.\n *\n * *Tooltip* / *Popover* works different with media elements.\n * @param element the target element\n * @returns the query result\n */\n\nconst isMedia = (\n  element?: any\n): element is SVGElement | HTMLImageElement | HTMLVideoElement | HTMLCanvasElement =>\n  (element &&\n    element.nodeType === 1 &&\n    [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some((s) => element.constructor.name.includes(s))) ||\n  false;\n\nexport default isMedia;\n", "/**\n * Checks if an object is a `NodeList`.\n * => equivalent to `object instanceof NodeList`\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isNodeList = (obj?: any): obj is NodeList =>\n  (obj && obj.constructor.name === \"NodeList\") || false;\n\nexport default isNodeList;\n", "import getDocumentElement from \"../get/getDocumentElement\";\n\n/**\n * Checks if a page is Right To Left.\n * @param node the target\n * @returns the query result\n */\nconst isRTL = (node?: Node): boolean => getDocumentElement(node).dir === \"rtl\";\n\nexport default isRTL;\n", "/**\n * Check if an element is an `<svg>` or any other SVG element,\n * an equivalent to `SOMETHING instanceof SVGElement`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst isSVGElement = (element?: any): element is SVGElement =>\n  (element && element.constructor.name.includes(\"SVG\")) || false;\n\nexport default isSVGElement;\n", "/**\n * Check if a target element is a `<table>`, `<td>` or `<th>`.\n * This specific check is important for determining\n * the `offsetParent` of a given element.\n *\n * @param element the target element\n * @returns the query result\n */\nconst isTableElement = (element?: any): element is HTMLTableElement | HTMLTableCellElement =>\n  (element && [\"TABLE\", \"TD\", \"TH\"].includes(element.tagName)) || false;\n\nexport default isTableElement;\n", "/**\n * Shortcut for `HTMLElement.closest` method which also works\n * with children of `ShadowRoot`. The order of the parameters\n * is intentional since they're both required.\n *\n * @see https://stackoverflow.com/q/54520554/803358\n *\n * @param element Element to look into\n * @param selector the selector name\n * @return the query result\n */\nconst closest = (element: HTMLElement, selector: string): HTMLElement | null => {\n  return element\n    ? element.closest(selector) ||\n        // break out of `ShadowRoot`\n        closest((element.getRootNode() as HTMLElement & { host: HTMLElement }).host, selector)\n    : null;\n};\n\nexport default closest;\n", "import getDocument from '../get/getDocument';\nimport isNode from '../is/isNode';\n\n/**\n * Utility to check if target is typeof `HTMLElement`, `Element`, `Node`\n * or find one that matches a selector.\n *\n * @param selector the input selector or target element\n * @param parent optional node to look into\n * @return the `HTMLElement` or `querySelector` result\n */\nconst querySelector = (selector: Node | string, parent?: ParentNode): HTMLElement | null => {\n  if (isNode(selector)) {\n    return selector as HTMLElement;\n  }\n  const lookUp = parent && isNode(parent) ? parent : getDocument();\n\n  return lookUp.querySelector(selector);\n};\n\nexport default querySelector;\n", "import getDocument from \"../get/getDocument\";\nimport isNode from \"../is/isNode\";\n\n/**\n * Shortcut for `HTMLElement.getElementsByTagName` method. Some `Node` elements\n * like `ShadowRoot` do not support `getElementsByTagName`.\n *\n * @param selector the tag name\n * @param parent optional Element to look into\n * @return the 'HTMLCollection'\n */\nconst getElementsByTagName = (\n  selector: string,\n  parent?: ParentNode\n): HTMLCollectionOf<HTMLElement> => {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return (lookUp as Document).getElementsByTagName(selector) as HTMLCollectionOf<HTMLElement>;\n};\n\nexport default getElementsByTagName;\n", "import CustomElement from '../interface/customElement';\nimport isCustomElement from '../is/isCustomElement';\nimport getElementsByTagName from './getElementsByTagName';\n\n/**\n * Returns an `Array` of `Node` elements that are registered as\n * `CustomElement`.\n * @see https://stackoverflow.com/questions/27334365/how-to-get-list-of-registered-custom-elements\n *\n * @param parent parent to look into\n * @returns the query result\n */\nconst getCustomElements = (parent?: ParentNode): CustomElement[] => {\n  const collection = getElementsByTagName('*', parent);\n\n  return [...collection].filter(isCustomElement);\n};\n\nexport default getCustomElements;\n", "import getDocument from '../get/getDocument';\n\n/**\n * Returns an `HTMLElement` that matches the id in the document.\n * Within multiple <iframe> elements, a `parent` parameter\n * would decisively locate the correct element.\n *\n * @param id the ID selector\n * @param context an element in it's document or document\n * @returns the requested element\n */\nconst getElementById = (id: string, context?: Node): HTMLElement | null => {\n  return getDocument(context).getElementById(id) || null;\n};\n\nexport default getElementById;\n", "import getDocument from '../get/getDocument';\nimport isNode from '../is/isNode';\n\n/**\n * A shortcut for `(document|Element).querySelectorAll`.\n *\n * @param selector the input selector\n * @param parent optional node to look into\n * @return the query result\n */\nconst querySelectorAll = (selector: string, parent?: ParentNode): NodeListOf<HTMLElement> => {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return lookUp.querySelectorAll(selector);\n};\n\nexport default querySelectorAll;\n", "import getDocument from '../get/getDocument';\nimport isNode from '../is/isNode';\n\n/**\n * Shortcut for `HTMLElement.getElementsByClassName` method. Some `Node` elements\n * like `ShadowRoot` do not support `getElementsByClassName`.\n *\n * @param selector the class name\n * @param parent optional Element to look into\n * @return the 'HTMLCollection'\n */\nconst getElementsByClassName = (\n  selector: string,\n  parent?: ParentNode\n): HTMLCollectionOf<HTMLElement> => {\n  const lookUp = parent && isNode(parent) ? parent : getDocument();\n  return (lookUp as HTMLElement | Document).getElementsByClassName(\n    selector\n  ) as HTMLCollectionOf<HTMLElement>;\n};\n\nexport default getElementsByClassName;\n", "/**\n * Check if element matches a CSS selector.\n *\n * @param target the target element\n * @param selector the selector to match\n * @returns the query result\n */\nconst matches = (target: Element, selector: string): boolean => target.matches(selector);\n\nexport default matches;\n"],
  "mappings": "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",
  "names": ["src_exports", "__export", "src_default", "ariaChecked", "ariaChecked_default", "ariaDescription", "ariaDescription_default", "ariaDescribedBy", "ariaDescribedBy_default", "ariaExpanded", "ariaExpanded_default", "ariaHasPopup", "ariaHasPopup_default", "ariaHidden", "ariaHidden_default", "ariaLabel", "ariaLabel_default", "ariaLabelledBy", "ariaLabelledBy_default", "ariaModal", "ariaModal_default", "ariaPressed", "ariaPressed_default", "ariaSelected", "ariaSelected_default", "ariaValueMin", "ariaValueMin_default", "ariaValueMax", "ariaValueMax_default", "ariaValueNow", "ariaValueNow_default", "ariaValueText", "ariaValueText_default", "abortEvent", "abortEvent_default", "beforeunloadEvent", "beforeunloadEvent_default", "blurEvent", "blurEvent_default", "changeEvent", "changeEvent_default", "contextmenuEvent", "contextmenuEvent_default", "DOMContentLoadedEvent", "DOMContentLoadedEvent_default", "DOMMouseScrollEvent", "DOMMouseScrollEvent_default", "errorEvent", "errorEvent_default", "focusEvent", "focusEvent_default", "focusinEvent", "focusinEvent_default", "focusoutEvent", "focusoutEvent_default", "gesturechangeEvent", "gesturechangeEvent_default", "gestureendEvent", "gestureendEvent_default", "gesturestartEvent", "gesturestartEvent_default", "keydownEvent", "keydownEvent_default", "keypressEvent", "keypressEvent_default", "keyupEvent", "keyupEvent_default", "loadEvent", "loadEvent_default", "mouseclickEvent", "mouseclickEvent_default", "mousedblclickEvent", "mousedblclickEvent_default", "mousedownEvent", "mousedownEvent_default", "mouseupEvent", "mouseupEvent_default", "mousehoverEvent", "mousehoverEvent_default", "mouseenterEvent", "mouseenterEvent_default", "mouseleaveEvent", "mouseleaveEvent_default", "mouseinEvent", "mouseinEvent_default", "mouseoutEvent", "mouseoutEvent_default", "mouseoverEvent", "mouseoverEvent_default", "mousemoveEvent", "mousemoveEvent_default", "mousewheelEvent", "mousewheelEvent_default", "moveEvent", "moveEvent_default", "orientationchangeEvent", "orientationchangeEvent_default", "pointercancelEvent", "pointercancelEvent_default", "pointerdownEvent", "pointerdownEvent_default", "pointerleaveEvent", "pointerleaveEvent_default", "pointermoveEvent", "pointermoveEvent_default", "pointerupEvent", "pointerupEvent_default", "readystatechangeEvent", "readystatechangeEvent_default", "resetEvent", "resetEvent_default", "resizeEvent", "resizeEvent_default", "selectEvent", "selectEvent_default", "selectendEvent", "selectendEvent_default", "selectstartEvent", "selectstartEvent_default", "scrollEvent", "scrollEvent_default", "submitEvent", "submitEvent_default", "touchstartEvent", "touchstartEvent_default", "touchmoveEvent", "touchmoveEvent_default", "touchcancelEvent", "touchcancelEvent_default", "touchendEvent", "touchendEvent_default", "unloadEvent", "unloadEvent_default", "nativeEvents", "DOMContentLoadedEvent_default", "DOMMouseScrollEvent_default", "abortEvent_default", "beforeunloadEvent_default", "blurEvent_default", "changeEvent_default", "mouseclickEvent_default", "contextmenuEvent_default", "mousedblclickEvent_default", "errorEvent_default", "focusEvent_default", "focusinEvent_default", "focusoutEvent_default", "gesturechangeEvent_default", "gestureendEvent_default", "gesturestartEvent_default", "mousehoverEvent_default", "keydownEvent_default", "keypressEvent_default", "keyupEvent_default", "loadEvent_default", "mousedownEvent_default", "mousemoveEvent_default", "mouseinEvent_default", "mouseoutEvent_default", "mouseenterEvent_default", "mouseleaveEvent_default", "mouseoverEvent_default", "mouseupEvent_default", "mousewheelEvent_default", "moveEvent_default", "orientationchangeEvent_default", "pointercancelEvent_default", "pointerdownEvent_default", "pointerleaveEvent_default", "pointermoveEvent_default", "pointerupEvent_default", "readystatechangeEvent_default", "resetEvent_default", "resizeEvent_default", "scrollEvent_default", "selectEvent_default", "selectendEvent_default", "selectstartEvent_default", "submitEvent_default", "touchcancelEvent_default", "touchendEvent_default", "touchmoveEvent_default", "touchstartEvent_default", "unloadEvent_default", "nativeEvents_default", "loadstartEvent", "loadstartEvent_default", "mouseSwipeEvents", "mouseSwipeEvents_default", "mouseClickEvents", "mouseClickEvents_default", "mouseHoverEvents", "mouseHoverEvents_default", "touchEvents", "touchEvents_default", "focusEvents", "focusEvents_default", "keyboardEventKeys", "keyboardEventKeys_default", "keyAlt", "keyAlt_default", "keyArrowDown", "keyArrowDown_default", "keyArrowUp", "keyArrowUp_default", "keyArrowLeft", "keyArrowLeft_default", "keyArrowRight", "keyArrowRight_default", "keyBackspace", "keyBackspace_default", "keyCapsLock", "keyCapsLock_default", "keyControl", "keyControl_default", "keyDelete", "keyDelete_default", "keyEnter", "keyEnter_default", "keyEscape", "keyEscape_default", "keyInsert", "keyInsert_default", "keyMeta", "keyMeta_default", "keyPause", "keyPause_default", "keyScrollLock", "keyScrollLock_default", "keyShift", "keyShift_default", "keySpace", "keySpace_default", "keyTab", "keyTab_default", "animationDuration", "animationDuration_default", "animationDelay", "animationDelay_default", "animationName", "animationName_default", "animationEndEvent", "animationEndEvent_default", "transitionDuration", "transitionDuration_default", "transitionDelay", "transitionDelay_default", "transitionEndEvent", "transitionEndEvent_default", "transitionProperty", "transitionProperty_default", "addEventListener", "addEventListener_default", "removeEventListener", "removeEventListener_default", "bezierEasings", "bezierEasings_default", "offsetHeight", "offsetHeight_default", "offsetWidth", "offsetWidth_default", "scrollHeight", "scrollHeight_default", "scrollWidth", "scrollWidth_default", "tabindex", "tabindex_default", "uaDATA", "userAgentData", "userAgentData_default", "userAgentString", "userAgent", "userAgent_default", "mobileBrands", "isMobileCheck", "userAgentData_default", "x", "userAgent_default", "isMobile", "isMobile_default", "appleBrands", "isApple", "userAgentData_default", "x", "userAgent_default", "isApple_default", "isFirefox", "userAgent_default", "isFirefox_default", "documentHead", "documentHead_default", "support3DTransform", "p", "documentHead_default", "support3DTransform_default", "on", "element", "eventName", "listener", "options", "ops", "off", "element", "eventName", "listener", "options", "ops", "one", "element", "eventName", "listener", "options", "handlerWrapper", "e", "off", "on", "one_default", "supportPassive", "result", "opts", "one_default", "DOMContentLoadedEvent_default", "supportPassive_default", "supportTransform", "p", "documentHead_default", "supportTransform_default", "supportTouch", "supportTouch_default", "supportAnimation", "p", "documentHead_default", "supportAnimation_default", "supportTransition", "p", "documentHead_default", "supportTransition_default", "getAttribute", "element", "att", "getAttribute_default", "getAttributeNS", "ns", "element", "att", "getAttributeNS_default", "hasAttribute", "element", "att", "hasAttribute_default", "hasAttributeNS", "ns", "element", "att", "hasAttributeNS_default", "setAttribute", "element", "att", "value", "setAttribute_default", "setAttributeNS", "ns", "element", "att", "value", "setAttributeNS_default", "removeAttribute", "element", "att", "removeAttribute_default", "removeAttributeNS", "ns", "element", "att", "removeAttributeNS_default", "addClass", "element", "classNAME", "addClass_default", "removeClass", "element", "classNAME", "removeClass_default", "hasClass", "element", "classNAME", "hasClass_default", "ArrayFrom", "arr", "ArrayFrom_default", "isHTMLElement", "element", "isHTMLElement_default", "componentData", "Data", "element", "component", "instance", "isHTMLElement_default", "instanceMap", "getInstance", "target", "data_default", "isString", "str", "isString_default", "isNode", "node", "x", "isNode_default", "isWindow", "obj", "isWindow_default", "isDocument", "obj", "isDocument_default", "getDocument", "node", "isDocument_default", "isNode_default", "isWindow_default", "getDocument_default", "ObjectEntries", "obj", "ObjectEntries_default", "createElement", "param", "getDocument_default", "tagName", "newElement", "attr", "ObjectEntries_default", "key", "value", "isString_default", "setAttribute_default", "createElement_default", "createElementNS", "ns", "param", "getDocument_default", "tagName", "newElement", "attr", "ObjectEntries_default", "key", "value", "isString_default", "setAttribute_default", "createElementNS_default", "dispatchEvent", "element", "event", "dispatchEvent_default", "distinct", "value", "index", "arr", "distinct_default", "getElementStyle", "element", "property", "computedStyle", "getElementStyle_default", "getElementAnimationDelay", "element", "propertyValue", "getElementStyle_default", "animationName_default", "durationValue", "animationDelay_default", "durationScale", "duration", "getElementAnimationDelay_default", "getElementAnimationDuration", "element", "propertyValue", "getElementStyle_default", "animationName_default", "durationValue", "animationDuration_default", "durationScale", "duration", "getElementAnimationDuration_default", "emulateAnimationEnd", "element", "handler", "called", "endEvent", "animationEndEvent_default", "duration", "getElementAnimationDuration_default", "delay", "getElementAnimationDelay_default", "animationEndWrapper", "e", "dispatchEvent_default", "emulateAnimationEnd_default", "getElementTransitionDelay", "element", "propertyValue", "getElementStyle_default", "transitionProperty_default", "delayValue", "transitionDelay_default", "delayScale", "duration", "getElementTransitionDelay_default", "getElementTransitionDuration", "element", "propertyValue", "getElementStyle_default", "transitionProperty_default", "durationValue", "transitionDuration_default", "durationScale", "duration", "getElementTransitionDuration_default", "emulateTransitionEnd", "element", "handler", "called", "endEvent", "transitionEndEvent_default", "duration", "getElementTransitionDuration_default", "delay", "getElementTransitionDelay_default", "transitionEndWrapper", "e", "dispatchEvent_default", "emulateTransitionEnd_default", "Float32ArrayFrom", "arr", "Float32ArrayFrom_default", "Float64ArrayFrom", "arr", "Float64ArrayFrom_default", "focus", "element", "options", "focus_default", "noop", "noop_default", "normalizeValue", "value", "normalizeValue_default", "toLowerCase", "source", "toLowerCase_default", "normalizeOptions", "element", "defaultOps", "inputOps", "ns", "INPUT", "data", "normalOps", "dataOps", "title", "ObjectEntries_default", "k", "v", "key", "match", "toLowerCase_default", "normalizeValue_default", "getAttribute_default", "normalizeOptions_default", "ObjectAssign", "obj", "source", "ObjectAssign_default", "ObjectKeys", "obj", "ObjectKeys_default", "ObjectValues", "obj", "ObjectValues_default", "isObject", "obj", "isObject_default", "OriginalEvent", "EventType", "config", "OriginalCustomEvent", "isObject_default", "ObjectAssign_default", "OriginalEvent_default", "passiveHandler", "passiveHandler_default", "reflow", "element", "reflow_default", "setElementStyle", "element", "styles", "ObjectEntries_default", "key", "value", "propObject", "ObjectAssign_default", "setElementStyle_default", "isMap", "obj", "isMap_default", "isNumber", "num", "isNumber_default", "TimeCache", "Timer", "element", "callback", "delay", "key", "isHTMLElement_default", "keyTimers", "isMap_default", "isNumber_default", "timer_default", "toUpperCase", "source", "toUpperCase_default", "getBoundingClientRect", "element", "includeScale", "width", "height", "top", "right", "bottom", "left", "scaleX", "scaleY", "isHTMLElement_default", "offsetWidth", "offsetHeight", "getBoundingClientRect_default", "getDocumentBody", "node", "getDocument_default", "getDocumentBody_default", "getDocumentElement", "node", "getDocument_default", "getDocumentElement_default", "getDocumentHead", "node", "getDocument_default", "getDocumentHead_default", "getNodeScroll", "element", "isWin", "isWindow_default", "x", "y", "getNodeScroll_default", "isShadowRoot", "element", "isShadowRoot_default", "getParentNode", "node", "isHTMLElement_default", "isNode_default", "isShadowRoot_default", "getDocumentElement_default", "getParentNode_default", "isScaledElement", "element", "isHTMLElement_default", "width", "height", "getBoundingClientRect_default", "offsetWidth", "offsetHeight", "getRectRelativeToOffsetParent", "element", "offsetParent", "scroll", "isParentAnElement", "isHTMLElement_default", "rect", "getBoundingClientRect_default", "isScaledElement", "offsets", "offsetRect", "getRectRelativeToOffsetParent_default", "elementUID", "elementMapUID", "elementIDMap", "getUID", "element", "key", "result", "elID", "elMap", "isMap_default", "elkey", "getUID_default", "getWindow", "node", "isDocument_default", "isNode_default", "getWindow_default", "isArray", "obj", "isArray_default", "isCanvas", "element", "isCanvas_default", "isCustomElement", "element", "isCustomElement_default", "isElement", "element", "x", "isElement_default", "isElementInScrollRange", "element", "isNode_default", "top", "bottom", "getBoundingClientRect_default", "clientHeight", "getDocumentElement_default", "isElementInScrollRange_default", "isElementInViewport", "element", "isNode_default", "clientWidth", "clientHeight", "getDocumentElement_default", "top", "left", "bottom", "right", "getBoundingClientRect_default", "isElementInViewport_default", "isElementsArray", "obj", "isArray_default", "isHTMLElement_default", "isElementsArray_default", "isFunction", "fn", "isFunction_default", "isHTMLCollection", "obj", "isHTMLCollection_default", "isHTMLImageElement", "element", "isHTMLImageElement_default", "isWeakMap", "obj", "isWeakMap_default", "isMedia", "element", "s", "isMedia_default", "isNodeList", "obj", "isNodeList_default", "isRTL", "node", "getDocumentElement_default", "isRTL_default", "isSVGElement", "element", "isSVGElement_default", "isTableElement", "element", "isTableElement_default", "closest", "element", "selector", "closest_default", "querySelector", "selector", "parent", "isNode_default", "getDocument_default", "querySelector_default", "getElementsByTagName", "selector", "parent", "isNode_default", "getDocument_default", "getElementsByTagName_default", "getCustomElements", "parent", "getElementsByTagName_default", "isCustomElement_default", "getCustomElements_default", "getElementById", "id", "context", "getDocument_default", "getElementById_default", "querySelectorAll", "selector", "parent", "isNode_default", "getDocument_default", "querySelectorAll_default", "getElementsByClassName", "selector", "parent", "isNode_default", "getDocument_default", "getElementsByClassName_default", "matches", "target", "selector", "matches_default", "SHORTY", "ariaChecked_default", "ariaDescription_default", "ariaDescribedBy_default", "ariaExpanded_default", "ariaHidden_default", "ariaHasPopup_default", "ariaLabel_default", "ariaLabelledBy_default", "ariaModal_default", "ariaPressed_default", "ariaSelected_default", "ariaValueMin_default", "ariaValueMax_default", "ariaValueNow_default", "ariaValueText_default", "nativeEvents_default", "abortEvent_default", "blurEvent_default", "moveEvent_default", "changeEvent_default", "errorEvent_default", "resetEvent_default", "resizeEvent_default", "scrollEvent_default", "submitEvent_default", "loadEvent_default", "loadstartEvent_default", "unloadEvent_default", "readystatechangeEvent_default", "beforeunloadEvent_default", "orientationchangeEvent_default", "contextmenuEvent_default", "DOMContentLoadedEvent_default", "DOMMouseScrollEvent_default", "selectEvent_default", "selectendEvent_default", "selectstartEvent_default", "mouseClickEvents_default", "mouseclickEvent_default", "mousedblclickEvent_default", "mousedownEvent_default", "mouseupEvent_default", "mousehoverEvent_default", "mouseHoverEvents_default", "mouseenterEvent_default", "mouseleaveEvent_default", "mouseinEvent_default", "mouseoutEvent_default", "mouseoverEvent_default", "mousemoveEvent_default", "mousewheelEvent_default", "mouseSwipeEvents_default", "touchEvents_default", "touchstartEvent_default", "touchmoveEvent_default", "touchcancelEvent_default", "touchendEvent_default", "pointercancelEvent_default", "pointerdownEvent_default", "pointerleaveEvent_default", "pointermoveEvent_default", "pointerupEvent_default", "focusEvents_default", "focusEvent_default", "focusinEvent_default", "focusoutEvent_default", "gesturechangeEvent_default", "gestureendEvent_default", "gesturestartEvent_default", "bezierEasings_default", "animationDuration_default", "animationDelay_default", "animationName_default", "animationEndEvent_default", "transitionDuration_default", "transitionDelay_default", "transitionEndEvent_default", "transitionProperty_default", "isMobile_default", "isApple_default", "isFirefox_default", "support3DTransform_default", "supportPassive_default", "supportTransform_default", "supportTouch_default", "supportAnimation_default", "supportTransition_default", "addEventListener_default", "removeEventListener_default", "keyboardEventKeys_default", "keydownEvent_default", "keypressEvent_default", "keyupEvent_default", "keyAlt_default", "keyArrowDown_default", "keyArrowLeft_default", "keyArrowRight_default", "keyArrowUp_default", "keyBackspace_default", "keyCapsLock_default", "keyControl_default", "keyDelete_default", "keyEnter_default", "keyEscape_default", "keyInsert_default", "keyMeta_default", "keyPause_default", "keyScrollLock_default", "keyShift_default", "keySpace_default", "keyTab_default", "offsetHeight_default", "offsetWidth_default", "scrollHeight_default", "scrollWidth_default", "userAgentData_default", "userAgent_default", "tabindex_default", "addClass_default", "removeClass_default", "hasClass_default", "on", "off", "one_default", "dispatchEvent_default", "distinct_default", "data_default", "getInstance", "createElement_default", "createElementNS_default", "toUpperCase_default", "toLowerCase_default", "timer_default", "emulateAnimationEnd_default", "emulateTransitionEnd_default", "isElementInScrollRange_default", "isElementInViewport_default", "passiveHandler_default", "getElementAnimationDuration_default", "getElementAnimationDelay_default", "getElementTransitionDuration_default", "getElementTransitionDelay_default", "getNodeScroll_default", "getParentNode_default", "getRectRelativeToOffsetParent_default", "getWindow_default", "isArray_default", "isCanvas_default", "isString_default", "isCustomElement_default", "isElement_default", "isMap_default", "isWeakMap_default", "isNode_default", "isNumber_default", "isHTMLElement_default", "isHTMLImageElement_default", "isSVGElement_default", "isNodeList_default", "isHTMLCollection_default", "isScaledElement", "isTableElement_default", "isShadowRoot_default", "isDocument_default", "isElementsArray_default", "isFunction_default", "isObject_default", "isWindow_default", "isMedia_default", "isRTL_default", "closest_default", "querySelector_default", "getCustomElements_default", "getElementById_default", "querySelectorAll_default", "getElementsByClassName_default", "getElementsByTagName_default", "matches_default", "normalizeValue_default", "normalizeOptions_default", "reflow_default", "noop_default", "focus_default", "getUID_default", "ArrayFrom_default", "Float32ArrayFrom_default", "Float64ArrayFrom_default", "ObjectAssign_default", "ObjectEntries_default", "ObjectKeys_default", "ObjectValues_default", "OriginalEvent_default", "getBoundingClientRect_default", "getDocument_default", "getDocumentBody_default", "getDocumentElement_default", "getDocumentHead_default", "getElementStyle_default", "setElementStyle_default", "hasAttribute_default", "hasAttributeNS_default", "getAttribute_default", "getAttributeNS_default", "setAttribute_default", "setAttributeNS_default", "removeAttribute_default", "removeAttributeNS_default", "src_default"]
}
