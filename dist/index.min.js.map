{
  "version": 3,
  "sources": ["../src/strings/ariaChecked.ts", "../src/strings/ariaDescription.ts", "../src/strings/ariaDescribedBy.ts", "../src/strings/ariaExpanded.ts", "../src/strings/ariaHasPopup.ts", "../src/strings/ariaHidden.ts", "../src/strings/ariaLabel.ts", "../src/strings/ariaLabelledBy.ts", "../src/strings/ariaModal.ts", "../src/strings/ariaPressed.ts", "../src/strings/ariaSelected.ts", "../src/strings/ariaValueMin.ts", "../src/strings/ariaValueMax.ts", "../src/strings/ariaValueNow.ts", "../src/strings/ariaValueText.ts", "../src/strings/abortEvent.ts", "../src/strings/beforeunloadEvent.ts", "../src/strings/blurEvent.ts", "../src/strings/changeEvent.ts", "../src/strings/contextmenuEvent.ts", "../src/strings/DOMContentLoadedEvent.ts", "../src/strings/DOMMouseScrollEvent.ts", "../src/strings/errorEvent.ts", "../src/strings/focusEvent.ts", "../src/strings/focusinEvent.ts", "../src/strings/focusoutEvent.ts", "../src/strings/gesturechangeEvent.ts", "../src/strings/gestureendEvent.ts", "../src/strings/gesturestartEvent.ts", "../src/strings/keydownEvent.ts", "../src/strings/keypressEvent.ts", "../src/strings/keyupEvent.ts", "../src/strings/loadEvent.ts", "../src/strings/mouseclickEvent.ts", "../src/strings/mousedblclickEvent.ts", "../src/strings/mousedownEvent.ts", "../src/strings/mouseupEvent.ts", "../src/strings/mousehoverEvent.ts", "../src/strings/mouseenterEvent.ts", "../src/strings/mouseleaveEvent.ts", "../src/strings/mouseinEvent.ts", "../src/strings/mouseoutEvent.ts", "../src/strings/mouseoverEvent.ts", "../src/strings/mousemoveEvent.ts", "../src/strings/mousewheelEvent.ts", "../src/strings/moveEvent.ts", "../src/strings/orientationchangeEvent.ts", "../src/strings/pointercancelEvent.ts", "../src/strings/pointerdownEvent.ts", "../src/strings/pointerleaveEvent.ts", "../src/strings/pointermoveEvent.ts", "../src/strings/pointerupEvent.ts", "../src/strings/readystatechangeEvent.ts", "../src/strings/resetEvent.ts", "../src/strings/resizeEvent.ts", "../src/strings/selectEvent.ts", "../src/strings/selectendEvent.ts", "../src/strings/selectstartEvent.ts", "../src/strings/scrollEvent.ts", "../src/strings/submitEvent.ts", "../src/strings/touchstartEvent.ts", "../src/strings/touchmoveEvent.ts", "../src/strings/touchcancelEvent.ts", "../src/strings/touchendEvent.ts", "../src/strings/unloadEvent.ts", "../src/strings/nativeEvents.ts", "../src/strings/loadstartEvent.ts", "../src/strings/mouseSwipeEvents.ts", "../src/strings/mouseClickEvents.ts", "../src/strings/mouseHoverEvents.ts", "../src/strings/touchEvents.ts", "../src/strings/focusEvents.ts", "../src/strings/keyboardEventKeys.ts", "../src/strings/keyAlt.ts", "../src/strings/keyArrowDown.ts", "../src/strings/keyArrowUp.ts", "../src/strings/keyArrowLeft.ts", "../src/strings/keyArrowRight.ts", "../src/strings/keyBackspace.ts", "../src/strings/keyCapsLock.ts", "../src/strings/keyControl.ts", "../src/strings/keyDelete.ts", "../src/strings/keyEnter.ts", "../src/strings/keyEscape.ts", "../src/strings/keyInsert.ts", "../src/strings/keyMeta.ts", "../src/strings/keyPause.ts", "../src/strings/keyScrollLock.ts", "../src/strings/keyShift.ts", "../src/strings/keySpace.ts", "../src/strings/keyTab.ts", "../src/strings/animationDuration.ts", "../src/strings/animationDelay.ts", "../src/strings/animationName.ts", "../src/strings/animationEndEvent.ts", "../src/strings/transitionDuration.ts", "../src/strings/transitionDelay.ts", "../src/strings/transitionEndEvent.ts", "../src/strings/transitionProperty.ts", "../src/strings/addEventListener.ts", "../src/strings/removeEventListener.ts", "../src/strings/bezierEasings.ts", "../src/strings/offsetHeight.ts", "../src/strings/offsetWidth.ts", "../src/strings/scrollHeight.ts", "../src/strings/scrollWidth.ts", "../src/strings/tabindex.ts", "../src/strings/userAgentData.ts", "../src/strings/userAgent.ts", "../src/boolean/isMobile.ts", "../src/boolean/isApple.ts", "../src/boolean/isFirefox.ts", "../src/blocks/documentHead.ts", "../src/boolean/support3DTransform.ts", "../src/event/on.ts", "../src/event/off.ts", "../src/event/one.ts", "../src/boolean/supportPassive.ts", "../src/boolean/supportTransform.ts", "../src/boolean/supportTouch.ts", "../src/boolean/supportAnimation.ts", "../src/boolean/supportTransition.ts", "../src/attr/getAttribute.ts", "../src/attr/getAttributeNS.ts", "../src/attr/hasAttribute.ts", "../src/attr/hasAttributeNS.ts", "../src/attr/setAttribute.ts", "../src/attr/setAttributeNS.ts", "../src/attr/removeAttribute.ts", "../src/attr/removeAttributeNS.ts", "../src/class/addClass.ts", "../src/class/removeClass.ts", "../src/class/hasClass.ts", "../src/misc/ArrayFrom.ts", "../src/is/isHTMLElement.ts", "../src/misc/data.ts", "../src/is/isNode.ts", "../src/is/isWindow.ts", "../src/is/isDocument.ts", "../src/get/getDocument.ts", "../src/misc/ObjectEntries.ts", "../src/misc/createElement.ts", "../src/misc/createElementNS.ts", "../src/misc/dispatchEvent.ts", "../src/misc/distinct.ts", "../src/get/getElementStyle.ts", "../src/get/getElementAnimationDelay.ts", "../src/get/getElementAnimationDuration.ts", "../src/misc/emulateAnimationEnd.ts", "../src/get/getElementTransitionDelay.ts", "../src/get/getElementTransitionDuration.ts", "../src/misc/emulateTransitionEnd.ts", "../src/misc/Float32ArrayFrom.ts", "../src/misc/Float64ArrayFrom.ts", "../src/misc/focus.ts", "../src/misc/noop.ts", "../src/misc/normalizeValue.ts", "../src/misc/ObjectKeys.ts", "../src/misc/toLowerCase.ts", "../src/misc/normalizeOptions.ts", "../src/misc/ObjectAssign.ts", "../src/misc/ObjectValues.ts", "../src/is/isObject.ts", "../src/misc/OriginalEvent.ts", "../src/misc/passiveHandler.ts", "../src/misc/reflow.ts", "../src/misc/setElementStyle.ts", "../src/misc/timer.ts", "../src/misc/toUpperCase.ts", "../src/get/getBoundingClientRect.ts", "../src/get/getDocumentBody.ts", "../src/get/getDocumentElement.ts", "../src/get/getDocumentHead.ts", "../src/get/getNodeScroll.ts", "../src/is/isShadowRoot.ts", "../src/get/getParentNode.ts", "../src/is/isScaledElement.ts", "../src/get/getRectRelativeToOffsetParent.ts", "../src/get/getUID.ts", "../src/get/getWindow.ts", "../src/is/isArray.ts", "../src/is/isCustomElement.ts", "../src/is/isElement.ts", "../src/is/isElementInScrollRange.ts", "../src/is/isElementInViewport.ts", "../src/is/isElementsArray.ts", "../src/is/isFunction.ts", "../src/is/isHTMLCollection.ts", "../src/is/isHTMLImageElement.ts", "../src/is/isMedia.ts", "../src/is/isNodeList.ts", "../src/is/isNumber.ts", "../src/is/isRTL.ts", "../src/is/isString.ts", "../src/is/isSVGElement.ts", "../src/is/isTableElement.ts", "../src/selectors/closest.ts", "../src/selectors/querySelector.ts", "../src/selectors/getElementsByTagName.ts", "../src/selectors/getCustomElements.ts", "../src/selectors/getElementById.ts", "../src/selectors/querySelectorAll.ts", "../src/selectors/getElementsByClassName.ts", "../src/selectors/matches.ts", "../src/index.ts"],
  "sourcesContent": ["/**\n * A global namespace for aria-checked.\n */\nconst ariaChecked = \"aria-checked\";\nexport default ariaChecked;\n", "/**\n * A global namespace for aria-description.\n */\nconst ariaDescription = \"aria-description\";\nexport default ariaDescription;\n", "/**\n * A global namespace for aria-describedby.\n */\nconst ariaDescribedBy = \"aria-describedby\";\nexport default ariaDescribedBy;\n", "/**\n * A global namespace for aria-expanded.\n */\nconst ariaExpanded = \"aria-expanded\";\nexport default ariaExpanded;\n", "/**\n * A global namespace for aria-haspopup.\n */\nconst ariaHasPopup = \"aria-haspopup\";\nexport default ariaHasPopup;\n", "/**\n * A global namespace for aria-hidden.\n */\nconst ariaHidden = \"aria-hidden\";\nexport default ariaHidden;\n", "/**\n * A global namespace for aria-label.\n */\nconst ariaLabel = \"aria-label\";\nexport default ariaLabel;\n", "/**\n * A global namespace for aria-labelledby.\n */\nconst ariaLabelledBy = \"aria-labelledby\";\nexport default ariaLabelledBy;\n", "/**\n * A global namespace for aria-modal.\n */\nconst ariaModal = \"aria-modal\";\nexport default ariaModal;\n", "/**\n * A global namespace for aria-pressed.\n */\nconst ariaPressed = \"aria-pressed\";\nexport default ariaPressed;\n", "/**\n * A global namespace for aria-selected.\n */\nconst ariaSelected = \"aria-selected\";\nexport default ariaSelected;\n", "/**\n * A global namespace for aria-valuemin.\n */\nconst ariaValueMin = \"aria-valuemin\";\nexport default ariaValueMin;\n", "/**\n * A global namespace for aria-valuemax.\n */\nconst ariaValueMax = \"aria-valuemax\";\nexport default ariaValueMax;\n", "/**\n * A global namespace for aria-valuenow.\n */\nconst ariaValueNow = \"aria-valuenow\";\nexport default ariaValueNow;\n", "/**\n * A global namespace for aria-valuetext.\n */\nconst ariaValueText = \"aria-valuetext\";\nexport default ariaValueText;\n", "/**\n * A global namespace for `abort` event.\n */\nconst abortEvent = \"abort\";\nexport default abortEvent;\n", "/**\n * A global namespace for `beforeunload` event.\n */\nconst beforeunloadEvent = \"beforeunload\";\nexport default beforeunloadEvent;\n", "/**\n * A global namespace for `blur` event.\n */\nconst blurEvent = \"blur\";\nexport default blurEvent;\n", "/**\n * A global namespace for `change` event.\n */\nconst changeEvent = \"change\";\nexport default changeEvent;\n", "/**\n * A global namespace for `contextmenu` event.\n */\nconst contextmenuEvent = \"contextmenu\";\nexport default contextmenuEvent;\n", "/**\n * A global namespace for `DOMContentLoaded` event.\n */\nconst DOMContentLoadedEvent = \"DOMContentLoaded\";\nexport default DOMContentLoadedEvent;\n", "/**\n * A global namespace for `DOMMouseScroll` event.\n */\nconst DOMMouseScrollEvent = \"DOMMouseScroll\";\nexport default DOMMouseScrollEvent;\n", "/**\n * A global namespace for `error` event.\n */\nconst errorEvent = \"error\";\nexport default errorEvent;\n", "/**\n * A global namespace for `focus` event.\n */\nconst focusEvent = \"focus\";\nexport default focusEvent;\n", "/**\n * A global namespace for `focusin` event.\n */\nconst focusinEvent = \"focusin\";\nexport default focusinEvent;\n", "/**\n * A global namespace for `focusout` event.\n */\nconst focusoutEvent = \"focusout\";\nexport default focusoutEvent;\n", "/**\n * A global namespace for `gesturechange` event.\n */\nconst gesturechangeEvent = \"gesturechange\";\nexport default gesturechangeEvent;\n", "/**\n * A global namespace for `gestureend` event.\n */\nconst gestureendEvent = \"gestureend\";\nexport default gestureendEvent;\n", "/**\n * A global namespace for `gesturestart` event.\n */\nconst gesturestartEvent = \"gesturestart\";\nexport default gesturestartEvent;\n", "/**\n * A global namespace for `keydown` event.\n */\nconst keydownEvent = \"keydown\";\nexport default keydownEvent;\n", "/**\n * A global namespace for `keypress` event.\n */\nconst keypressEvent = \"keypress\";\nexport default keypressEvent;\n", "/**\n * A global namespace for `keyup` event.\n */\nconst keyupEvent = \"keyup\";\nexport default keyupEvent;\n", "/**\n * A global namespace for `load` event.\n */\nconst loadEvent = \"load\";\nexport default loadEvent;\n", "/**\n * A global namespace for `click` event.\n */\nconst mouseclickEvent = \"click\";\nexport default mouseclickEvent;\n", "/**\n * A global namespace for `dblclick` event.\n */\nconst mousedblclickEvent = \"dblclick\";\nexport default mousedblclickEvent;\n", "/**\n * A global namespace for `mousedown` event.\n */\nconst mousedownEvent = \"mousedown\";\nexport default mousedownEvent;\n", "/**\n * A global namespace for `mouseup` event.\n */\nconst mouseupEvent = \"mouseup\";\nexport default mouseupEvent;\n", "/**\n * A global namespace for `hover` event.\n */\nconst mousehoverEvent = \"hover\";\nexport default mousehoverEvent;\n", "/**\n * A global namespace for `mouseenter` event.\n */\nconst mouseenterEvent = \"mouseenter\";\nexport default mouseenterEvent;\n", "/**\n * A global namespace for `mouseleave` event.\n */\nconst mouseleaveEvent = \"mouseleave\";\nexport default mouseleaveEvent;\n", "/**\n * A global namespace for `mousein` event.\n */\nconst mouseinEvent = \"mousein\";\nexport default mouseinEvent;\n", "/**\n * A global namespace for `mouseout` event.\n */\nconst mouseoutEvent = \"mouseout\";\nexport default mouseoutEvent;\n", "/**\n * A global namespace for `mouseover` event.\n */\nconst mouseoverEvent = \"mouseover\";\nexport default mouseoverEvent;\n", "/**\n * A global namespace for `mousemove` event.\n */\nconst mousemoveEvent = \"mousemove\";\nexport default mousemoveEvent;\n", "/**\n * A global namespace for `mousewheel` event.\n */\nconst mousewheelEvent = \"mousewheel\";\nexport default mousewheelEvent;\n", "/**\n * A global namespace for `move` event.\n */\nconst moveEvent = \"move\";\nexport default moveEvent;\n", "/**\n * A global namespace for `orientationchange` event.\n */\nconst orientationchangeEvent = \"orientationchange\";\nexport default orientationchangeEvent;\n", "/**\n * A global namespace for `pointercancel` event.\n */\nconst pointercancelEvent = \"pointercancel\";\nexport default pointercancelEvent;\n", "/**\n * A global namespace for `pointerdown` event.\n */\nconst pointerdownEvent = \"pointerdown\";\nexport default pointerdownEvent;\n", "/**\n * A global namespace for `pointerleave` event.\n */\nconst pointerleaveEvent = \"pointerleave\";\nexport default pointerleaveEvent;\n", "/**\n * A global namespace for `pointermove` event.\n */\nconst pointermoveEvent = \"pointermove\";\nexport default pointermoveEvent;\n", "/**\n * A global namespace for `pointerup` event.\n */\nconst pointerupEvent = \"pointerup\";\nexport default pointerupEvent;\n", "/**\n * A global namespace for `readystatechange` event.\n */\nconst readystatechangeEvent = \"readystatechange\";\nexport default readystatechangeEvent;\n", "/**\n * A global namespace for `reset` event.\n */\nconst resetEvent = \"reset\";\nexport default resetEvent;\n", "/**\n * A global namespace for `resize` event.\n */\nconst resizeEvent = \"resize\";\nexport default resizeEvent;\n", "/**\n * A global namespace for `select` event.\n */\nconst selectEvent = \"select\";\nexport default selectEvent;\n", "/**\n * A global namespace for the `selectend` event.\n */\nconst selectendEvent = \"selectend\";\nexport default selectendEvent;\n", "/**\n * A global namespace for the `selectstart` event.\n */\nconst selectstartEvent = \"selectstart\";\nexport default selectstartEvent;\n", "/**\n * A global namespace for `scroll` event.\n */\nconst scrollEvent = \"scroll\";\nexport default scrollEvent;\n", "/**\n * A global namespace for `submit` event.\n */\nconst submitEvent = \"submit\";\nexport default submitEvent;\n", "/**\n * A global namespace for `touchstart` event.\n */\nconst touchstartEvent = \"touchstart\";\nexport default touchstartEvent;\n", "/**\n * A global namespace for `touchmove` event.\n */\nconst touchmoveEvent = \"touchmove\";\nexport default touchmoveEvent;\n", "/**\n * A global namespace for `touchcancel` event.\n */\nconst touchcancelEvent = \"touchcancel\";\nexport default touchcancelEvent;\n", "/**\n * A global namespace for `touchend` event.\n */\nconst touchendEvent = \"touchend\";\nexport default touchendEvent;\n", "/**\n * A global namespace for `unload` event.\n */\nconst unloadEvent = \"unload\";\nexport default unloadEvent;\n", "import abort from './abortEvent';\nimport beforeunload from './beforeunloadEvent';\nimport blur from './blurEvent';\nimport change from './changeEvent';\nimport contextmenu from './contextmenuEvent';\nimport DOMContentLoaded from './DOMContentLoadedEvent';\nimport DOMMouseScroll from './DOMMouseScrollEvent';\nimport error from './errorEvent';\nimport focus from './focusEvent';\nimport focusin from './focusinEvent';\nimport focusout from './focusoutEvent';\nimport gesturechange from './gesturechangeEvent';\nimport gestureend from './gestureendEvent';\nimport gesturestart from './gesturestartEvent';\nimport keydown from './keydownEvent';\nimport keypress from './keypressEvent';\nimport keyup from './keyupEvent';\nimport load from './loadEvent';\nimport click from './mouseclickEvent';\nimport dblclick from './mousedblclickEvent';\nimport mousedown from './mousedownEvent';\nimport mouseup from './mouseupEvent';\nimport hover from './mousehoverEvent';\nimport mouseenter from './mouseenterEvent';\nimport mouseleave from './mouseleaveEvent';\nimport mousein from './mouseinEvent';\nimport mouseout from './mouseoutEvent';\nimport mouseover from './mouseoverEvent';\nimport mousemove from './mousemoveEvent';\nimport mousewheel from './mousewheelEvent';\nimport move from './moveEvent';\nimport orientationchange from './orientationchangeEvent';\nimport pointercancel from './pointercancelEvent';\nimport pointerdown from './pointerdownEvent';\nimport pointerleave from './pointerleaveEvent';\nimport pointermove from './pointermoveEvent';\nimport pointerup from './pointerupEvent';\nimport readystatechange from './readystatechangeEvent';\nimport reset from './resetEvent';\nimport resize from './resizeEvent';\nimport select from './selectEvent';\nimport selectend from './selectendEvent';\nimport selectstart from './selectstartEvent';\nimport scroll from './scrollEvent';\nimport submit from './submitEvent';\nimport touchstart from './touchstartEvent';\nimport touchmove from './touchmoveEvent';\nimport touchcancel from './touchcancelEvent';\nimport touchend from './touchendEvent';\nimport unload from './unloadEvent';\n\n/**\n * A global namespace for all browser native events.\n */\nconst nativeEvents = {\n  DOMContentLoaded,\n  DOMMouseScroll,\n  abort,\n  beforeunload,\n  blur,\n  change,\n  click,\n  contextmenu,\n  dblclick,\n  error,\n  focus,\n  focusin,\n  focusout,\n  gesturechange,\n  gestureend,\n  gesturestart,\n  hover,\n  keydown,\n  keypress,\n  keyup,\n  load,\n  mousedown,\n  mousemove,\n  mousein,\n  mouseout,\n  mouseenter,\n  mouseleave,\n  mouseover,\n  mouseup,\n  mousewheel,\n  move,\n  orientationchange,\n  pointercancel,\n  pointerdown,\n  pointerleave,\n  pointermove,\n  pointerup,\n  readystatechange,\n  reset,\n  resize,\n  scroll,\n  select,\n  selectend,\n  selectstart,\n  submit,\n  touchcancel,\n  touchend,\n  touchmove,\n  touchstart,\n  unload,\n};\n\nexport default nativeEvents;\n", "/**\n * A global namespace for `loadstart` event.\n */\nconst loadstartEvent = \"loadstart\";\nexport default loadstartEvent;\n", "/**\n * A global namespace for mouse events equivalent to touch events.\n */\nconst mouseSwipeEvents = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\",\n};\nexport default mouseSwipeEvents;\n", "/**\n * A global namespace for mouse click events.\n */\nconst mouseClickEvents = { down: \"mousedown\", up: \"mouseup\" };\nexport default mouseClickEvents;\n", "/**\n * A global namespace for mouse hover events.\n */\nconst mouseHoverEvents =\n  \"onmouseleave\" in document\n    ? [\"mouseenter\", \"mouseleave\"]\n    : /* istanbul ignore next */ [\"mouseover\", \"mouseout\"];\nexport default mouseHoverEvents;\n", "/**\n * A global namespace for touch events.\n */\nconst touchEvents = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\",\n};\nexport default touchEvents;\n", "/**\n * A global namespace for focus event names.\n */\nconst focusEvents = { in: \"focusin\", out: \"focusout\" };\nexport default focusEvents;\n", "/**\n * A global namespace for keyboard event keys.\n */\nconst keyboardEventKeys = {\n  Backspace: \"Backspace\", //  8\n  Tab: \"Tab\", //  9\n  Enter: \"Enter\", // 13\n  Shift: \"Shift\", // 16\n  Control: \"Control\", // 17\n  Alt: \"Alt\", // 18\n  Pause: \"Pause\", // 19\n  CapsLock: \"CapsLock\", // 20\n  Escape: \"Escape\", // 27\n  Scape: \"Space\", // 32\n  ArrowLeft: \"ArrowLeft\", // 37\n  ArrowUp: \"ArrowUp\", // 38\n  ArrowRight: \"ArrowRight\", // 39\n  ArrowDown: \"ArrowDown\", // 40\n  Insert: \"Insert\", // 45\n  Delete: \"Delete\", // 46\n  Meta: \"Meta\", // 91 windows key\n  ContextMenu: \"ContextMenu\", // 93\n  ScrollLock: \"ScrollLock\", // 145\n};\n\nexport default keyboardEventKeys;\n", "/**\n * A global namespace for `Alt` key.\n * e.which = 18\n */\nconst keyAlt = \"Alt\";\n\nexport default keyAlt;\n", "/**\n * A global namespace for `ArrowDown` key.\n * e.which = 40 equivalent\n */\nconst keyArrowDown = \"ArrowDown\";\n\nexport default keyArrowDown;\n", "/**\n * A global namespace for `ArrowUp` key.\n * e.which = 38 equivalent\n */\nconst keyArrowUp = \"ArrowUp\";\n\nexport default keyArrowUp;\n", "/**\n * A global namespace for `ArrowLeft` key.\n * e.which = 37 equivalent\n */\nconst keyArrowLeft = \"ArrowLeft\";\n\nexport default keyArrowLeft;\n", "/**\n * A global namespace for `ArrowRight` key.\n * e.which = 39 equivalent\n */\nconst keyArrowRight = \"ArrowRight\";\n\nexport default keyArrowRight;\n", "/**\n * A global namespace for `Backspace` key.\n * e.which === 8 equivalent\n */\nconst keyBackspace = \"Backspace\";\n\nexport default keyBackspace;\n", "/**\n * A global namespace for `CapsLock` key.\n * e.which = 20 equivalent\n */\nconst keyCapsLock = \"CapsLock\";\n\nexport default keyCapsLock;\n", "/**\n * A global namespace for `Control` key.\n * e.which = 17\n */\nconst keyControl = \"Control\";\n\nexport default keyControl;\n", "/**\n * A global namespace for `Delete` key.\n * e.which = 46 equivalent\n */\nconst keyDelete = \"Delete\";\n\nexport default keyDelete;\n", "/**\n * A global namespace for `Enter` key.\n * e.which = 13 equivalent\n */\nconst keyEnter = \"Enter\";\n\nexport default keyEnter;\n", "/**\n * A global namespace for `Escape` key.\n * e.which = 27 equivalent\n */\nconst keyEscape = \"Escape\";\n\nexport default keyEscape;\n", "/**\n * A global namespace for `Insert` key.\n * e.which = 45 equivalent\n */\nconst keyInsert = \"Insert\";\n\nexport default keyInsert;\n", "/**\n * A global namespace for `Meta` key.\n * e.which = 93 equivalent\n */\nconst keyMeta = \"Meta\";\n\nexport default keyMeta;\n", "/**\n * A global namespace for `Pause` key.\n * e.which = 19\n */\nconst keyPause = \"Pause\";\n\nexport default keyPause;\n", "/**\n * A global namespace for `ScrollLock` key.\n * e.which = 145 equivalent\n */\nconst keyScrollLock = \"ScrollLock\";\n\nexport default keyScrollLock;\n", "/**\n * A global namespace for `Shift` key.\n * e.which = 16\n */\nconst keyShift = \"Shift\";\n\nexport default keyShift;\n", "/**\n * A global namespace for `Space` key.\n * e.which = 32 equivalent\n */\nconst keySpace = \"Space\";\n\nexport default keySpace;\n", "/**\n * A global namespace for `Tab` key.\n * e.which = 9 equivalent\n */\nconst keyTab = \"Tab\";\n\nexport default keyTab;\n", "/**\n * A global namespace for 'animationDuration' string.\n */\nconst animationDuration = \"animationDuration\";\nexport default animationDuration;\n", "/**\n * A global namespace for 'animationDelay' string.\n */\nconst animationDelay = \"animationDelay\";\nexport default animationDelay;\n", "/**\n * A global namespace for 'animationName' string.\n */\nconst animationName = \"animationName\";\nexport default animationName;\n", "/**\n * A global namespace for 'animationend' string.\n */\nconst animationEndEvent = \"animationend\";\nexport default animationEndEvent;\n", "/**\n * A global namespace for 'transitionDuration' string.\n */\nconst transitionDuration = \"transitionDuration\";\nexport default transitionDuration;\n", "/**\n * A global namespace for 'transitionDelay' string.\n */\nconst transitionDelay = \"transitionDelay\";\nexport default transitionDelay;\n", "/**\n * A global namespace for 'transitionend' string.\n */\nconst transitionEndEvent = \"transitionend\";\nexport default transitionEndEvent;\n", "/**\n * A global namespace for `transitionProperty` string for modern browsers.\n */\nconst transitionProperty = \"transitionProperty\";\nexport default transitionProperty;\n", "/**\n * A global namespace for 'addEventListener' string.\n */\nconst addEventListener = \"addEventListener\";\nexport default addEventListener;\n", "/**\n * A global namespace for 'removeEventListener' string.\n */\nconst removeEventListener = \"removeEventListener\";\nexport default removeEventListener;\n", "/**\n * A global namespace for predefined\n * CSS3 'cubic-bezier()' easing functions.\n */\nconst bezierEasings = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\",\n};\nexport default bezierEasings;\n", "/**\n * A global namespace for `offsetHeight` property.\n */\nconst offsetHeight = \"offsetHeight\";\nexport default offsetHeight;\n", "/**\n * A global namespace for `offsetWidth` property.\n */\nconst offsetWidth = \"offsetWidth\";\nexport default offsetWidth;\n", "/**\n * A global namespace for `scrollHeight` property.\n */\nconst scrollHeight = \"scrollHeight\";\nexport default scrollHeight;\n", "/**\n * A global namespace for `scrollWidth` property.\n */\nconst scrollWidth = \"scrollWidth\";\nexport default scrollWidth;\n", "/**\n * A global namespace for `touchcancel` event.\n */\nconst tabindex = \"tabindex\";\nexport default tabindex;\n", "import NavigatorUA from \"../interface/navigatorUA\";\n\nconst uaDATA = (navigator as NavigatorUA).userAgentData;\n\n/**\n * A global namespace for `userAgentData` object.\n */\nconst userAgentData: NavigatorUA[\"userAgentData\"] = uaDATA;\nexport default userAgentData;\n", "const { userAgent: userAgentString } = navigator;\n\n/**\n * A global namespace for `navigator.userAgent` string.\n */\nconst userAgent = userAgentString;\nexport default userAgent;\n", "import userAgentData from \"../strings/userAgentData\";\nimport userAgent from \"../strings/userAgent\";\n\nconst mobileBrands = /iPhone|iPad|iPod|Android/i;\nlet isMobileCheck = false;\n\n/* istanbul ignore else */\nif (userAgentData) {\n  isMobileCheck = userAgentData.brands.some((x) => mobileBrands.test(x.brand));\n} else {\n  isMobileCheck = mobileBrands.test(userAgent);\n}\n\n/**\n * A global `boolean` for mobile detection.\n */\nconst isMobile = isMobileCheck;\n\nexport default isMobile;\n", "import { NavigatorUABrand } from \"../interface/navigatorUA\";\nimport userAgentData from \"../strings/userAgentData\";\nimport userAgent from \"../strings/userAgent\";\n\nconst appleBrands = /(iPhone|iPod|iPad)/;\n\n/**\n * A global `boolean` for Apple browsers.\n */\nconst isApple: boolean = userAgentData\n  ? userAgentData.brands.some((x: NavigatorUABrand) => appleBrands.test(x.brand))\n  : /* istanbul ignore next */ appleBrands.test(userAgent);\n\nexport default isApple;\n", "import userAgent from \"../strings/userAgent\";\n\n/**\n * A global boolean for Gecko browsers. When writing this file,\n * Gecko was not supporting `userAgentData`.\n */\nconst isFirefox = userAgent ? userAgent.includes(\"Firefox\") : /* istanbul ignore next */ false;\n\nexport default isFirefox;\n", "/**\n * A global namespace for `document.head`.\n */\nconst { head: documentHead } = document;\nexport default documentHead;\n", "import documentHead from \"../blocks/documentHead\";\n\n/**\n * A global `boolean` for CSS3 3D transform support.\n */\nconst support3DTransform = [\"webkitPerspective\", \"perspective\"].some(\n  (p) => p in documentHead.style\n);\n\nexport default support3DTransform;\n", "/**\n * Add eventListener to an `HTMLElement` | `Document` target.\n */\nexport default function on(\n  element: EventTarget,\n  eventName: string,\n  listener: EventListenerObject[\"handleEvent\"],\n  options?: AddEventListenerOptions\n) {\n  const ops = options || false;\n  element.addEventListener(eventName, listener, ops);\n}\n", "/**\n * Remove eventListener from an `HTMLElement` | `Document` | `Window` target.\n */\nexport default function off(\n  element: EventTarget,\n  eventName: string,\n  listener: EventListenerObject[\"handleEvent\"],\n  options?: AddEventListenerOptions\n) {\n  const ops = options || false;\n  element.removeEventListener(eventName, listener, ops);\n}\n", "import on from \"./on\";\nimport off from \"./off\";\n\n/**\n * Add an `eventListener` to an `HTMLElement` | `Document` | `Window`\n * target and remove it once callback is called.\n */\nconst one = (\n  element: EventTarget,\n  eventName: string,\n  listener: EventListenerObject[\"handleEvent\"],\n  options?: AddEventListenerOptions\n) => {\n  /** Wrap the listener for easy on -> off */\n  const handlerWrapper = (e: Event): void => {\n    /* istanbul ignore else */\n    if (e.target === element) {\n      listener.apply(element, [e]);\n      off(element, eventName, handlerWrapper, options);\n    }\n  };\n  on(element, eventName, handlerWrapper, options);\n};\n\nexport default one;\n", "import DOMContentLoadedEvent from \"../strings/DOMContentLoadedEvent\";\nimport one from \"../event/one\";\n\n/**\n * A global `boolean` for passive events support,\n * in general event options are not suited for scroll prevention.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\nconst supportPassive = (() => {\n  let result = false;\n  try {\n    const opts = Object.defineProperty({}, \"passive\", {\n      get() {\n        result = true;\n        return result;\n      },\n    });\n    /* istanbul ignore next */\n    one(document, DOMContentLoadedEvent, () => {}, opts);\n  } catch (e) {\n    // throw Error('Passive events are not supported');\n  }\n\n  return result;\n})();\n\nexport default supportPassive;\n", "import documentHead from \"../blocks/documentHead\";\n\n/**\n * A global `boolean` for CSS3 transform support.\n */\nconst supportTransform = [\"webkitTransform\", \"transform\"].some((p) => p in documentHead.style);\n\nexport default supportTransform;\n", "/**\n * A global `boolean` for touch events support.\n */\nconst supportTouch =\n  \"ontouchstart\" in window || /* istanbul ignore next */ \"msMaxTouchPoints\" in navigator;\n\nexport default supportTouch;\n", "import documentHead from \"../blocks/documentHead\";\n\n/**\n * A global `boolean` for CSS3 animation support.\n */\nconst supportAnimation = [\"webkitAnimation\", \"animation\"].some((p) => p in documentHead.style);\n\nexport default supportAnimation;\n", "import documentHead from \"../blocks/documentHead\";\n\n/**\n * A global `boolean` for CSS3 transition support.\n */\nconst supportTransition = [\"webkitTransition\", \"transition\"].some((p) => p in documentHead.style);\n\nexport default supportTransition;\n", "/**\n * Shortcut for `HTMLElement.getAttribute()` method.\n * @param element target element\n * @param att attribute name\n * @returns attribute value\n */\nconst getAttribute = (element: HTMLElement, att: string): string | null =>\n  element.getAttribute(att);\n\nexport default getAttribute;\n", "/**\n * Shortcut for `HTMLElement.getAttributeNS()` method.\n * @param ns attribute namespace\n * @param element target element\n * @param att attribute name\n * @returns attribute value\n */\nconst getAttributeNS = (ns: string, element: HTMLElement, att: string) =>\n  element.getAttributeNS(ns, att);\n\nexport default getAttributeNS;\n", "/**\n * Shortcut for `HTMLElement.hasAttribute()` method.\n * @param element target element\n * @param att attribute name\n * @returns the query result\n */\nconst hasAttribute = (element: HTMLElement, att: string): boolean => element.hasAttribute(att);\n\nexport default hasAttribute;\n", "/**\n * Shortcut for `HTMLElement.hasAttributeNS()` method.\n * @param ns attribute namespace\n * @param element target element\n * @param att attribute name\n * @returns the query result\n */\nconst hasAttributeNS = (ns: string, element: HTMLElement, att: string): boolean =>\n  element.hasAttributeNS(ns, att);\n\nexport default hasAttributeNS;\n", "/**\n * Shortcut for `HTMLElement.setAttribute()` method.\n * @param element target element\n * @param att attribute name\n * @param value attribute value\n */\nconst setAttribute = (element: HTMLElement, att: string, value: string) =>\n  element.setAttribute(att, value);\n\nexport default setAttribute;\n", "/**\n * Shortcut for `SVGElement.setAttributeNS()` method.\n * @param ns attribute namespace\n * @param element target element\n * @param att attribute name\n * @param value attribute value\n */\nconst setAttributeNS = (ns: string, element: HTMLElement, att: string, value: string): void =>\n  element.setAttributeNS(ns, att, value);\n\nexport default setAttributeNS;\n", "/**\n * Shortcut for `HTMLElement.removeAttribute()` method.\n * @param element target element\n * @param att attribute name\n */\nconst removeAttribute = (element: HTMLElement, att: string): void => element.removeAttribute(att);\n\nexport default removeAttribute;\n", "/**\n * Shortcut for `HTMLElement.removeAttributeNS()` method.\n * @param ns attribute namespace\n * @param  element target element\n * @param att attribute name\n */\nconst removeAttributeNS = (ns: string, element: HTMLElement, att: string): void =>\n  element.removeAttributeNS(ns, att);\n\nexport default removeAttributeNS;\n", "/**\n * Add class to `HTMLElement.classList`.\n *\n * @param element target\n * @param classNAME to add\n */\nconst addClass = (element: HTMLElement, classNAME: string): void => {\n  element.classList.add(classNAME);\n};\n\nexport default addClass;\n", "/**\n * Remove class from `HTMLElement.classList`.\n *\n * @param element target\n * @param classNAME to remove\n */\nconst removeClass = (element: HTMLElement, classNAME: string): void => {\n  element.classList.remove(classNAME);\n};\n\nexport default removeClass;\n", "/**\n * Check class in `HTMLElement.classList`.\n *\n * @param element target\n * @param classNAME to check\n */\nconst hasClass = (element: HTMLElement, classNAME: string): boolean => {\n  return element.classList.contains(classNAME);\n};\n\nexport default hasClass;\n", "/**\n * Shortcut for `Array.from()` static method.\n *\n * @param arr array-like iterable object\n * @returns a new array from iterable object\n */\nconst ArrayFrom = (arr: Iterable<any>): any[] => Array.from(arr);\n\nexport default ArrayFrom;\n", "/**\n * Checks if an element is an `HTMLElement`.\n * @see https://dom.spec.whatwg.org/#node\n *\n * @param element the target object\n * @returns the query result\n */\nconst isHTMLElement = (element?: any): element is HTMLElement =>\n  (element && element.nodeType === 1) || false;\nexport default isHTMLElement;\n", "import isHTMLElement from \"../is/isHTMLElement\";\n\ntype ComponentDataMap = Map<string, Map<HTMLElement, Record<string, any>>>;\n\nconst componentData: ComponentDataMap = new Map();\n\n/**\n * An interface for web components background data.\n * @see https://github.com/thednp/bootstrap.native/blob/master/src/components/base-component.js\n */\nconst Data = {\n  /**\n   * Sets web components data.\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (element: HTMLElement, component: string, instance: Record<string, any>): void => {\n    if (!isHTMLElement(element)) return;\n\n    /* istanbul ignore else */\n    if (!componentData.has(component)) {\n      componentData.set(component, new Map());\n    }\n\n    const instanceMap = componentData.get(component);\n    // not undefined, but defined right above\n    instanceMap.set(element, instance);\n  },\n\n  /**\n   * Returns all instances for specified component.\n   * @param component the component's name or a unique key\n   * @returns {} all the component instances\n   */\n  getAllFor: (component: string): Map<HTMLElement, Record<string, any>> | null => {\n    const instanceMap = componentData.get(component);\n\n    return instanceMap || null;\n  },\n\n  /**\n   * Returns the instance associated with the target.\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (element: HTMLElement, component: string): Record<string, any> | null => {\n    if (!isHTMLElement(element) || !component) return null;\n    const allForC = Data.getAllFor(component);\n    const instance = element && allForC && allForC.get(element);\n\n    return instance || null;\n  },\n\n  /**\n   * Removes web components data.\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (element: HTMLElement, component: string): void => {\n    const instanceMap = componentData.get(component);\n    if (!instanceMap || !isHTMLElement(element)) return;\n\n    instanceMap.delete(element);\n\n    /* istanbul ignore else */\n    if (instanceMap.size === 0) {\n      componentData.delete(component);\n    }\n  },\n};\n\n/**\n * An alias for `Data.get()`.\n */\nexport const getInstance = (target: HTMLElement, component: string) => Data.get(target, component);\n\nexport default Data;\n", "/**\n * Checks if an object is a `Node`.\n *\n * @param node the target object\n * @returns the query result\n */\n\nconst isNode = (node?: any): node is Node =>\n  (node && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((x) => node.nodeType === x)) || false;\n\nexport default isNode;\n", "/**\n * Check if a target object is `Window`.\n * => equivalent to `object instanceof Window`\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isWindow = (obj?: any): obj is Window => (obj && obj.constructor.name === \"Window\") || false;\n\nexport default isWindow;\n", "/**\n * Checks if an object is a `Document`.\n * @see https://dom.spec.whatwg.org/#node\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isDocument = (obj?: any): obj is Document => (obj && obj.nodeType === 9) || false;\n\nexport default isDocument;\n", "import isNode from \"../is/isNode\";\nimport isWindow from \"../is/isWindow\";\nimport isDocument from \"../is/isDocument\";\n\n/**\n * Returns the `document` or the `#document` element.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param node the target node\n * @returns the parent document of the given node\n */\nconst getDocument = (node?: any): Document => {\n  // node instanceof Document\n  if (isDocument(node)) return node;\n  // node instanceof Node\n  if (isNode(node)) return node.ownerDocument;\n  // node instanceof Window\n  if (isWindow(node)) return node.document;\n  // node is undefined | NULL\n  return window.document;\n};\n\nexport default getDocument;\n", "/**\n * Shortcut for `Object.entries()` static method.\n * @param obj a target object\n * @returns the entries of an object in an array format\n */\nconst ObjectEntries = (obj: Record<string, any>): [string, any][] => Object.entries(obj);\n\nexport default ObjectEntries;\n", "import setAttribute from \"../attr/setAttribute\";\nimport getDocument from \"../get/getDocument\";\nimport ObjectEntries from \"./ObjectEntries\";\n\n/**\n * This is a shortie for `document.createElement` method\n * which allows you to create a new `HTMLElement` for a given `tagName`\n * or based on an object with specific non-readonly attributes:\n * `id`, `className`, `textContent`, `style`, etc.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement\n *\n * @param param `tagName` or object\n * @return a new `HTMLElement` or `Element`\n */\nconst createElement = (param?: string | Partial<HTMLElement>): HTMLElement | undefined => {\n  if (!param) return undefined;\n\n  if (typeof param === \"string\") {\n    return getDocument().createElement(param);\n  }\n\n  const { tagName } = param;\n  const newElement = createElement(tagName);\n\n  if (!newElement) return undefined;\n\n  const attr = { ...param };\n  delete attr.tagName;\n\n  ObjectEntries(attr).forEach(([key, value]) => {\n    setAttribute(newElement, key, value);\n  });\n  return newElement;\n};\n\nexport default createElement;\n", "import getDocument from \"../get/getDocument\";\nimport ObjectEntries from \"./ObjectEntries\";\nimport setAttribute from \"../attr/setAttribute\";\n\n/**\n * This is a shortie for `document.createElementNS` method\n * which allows you to create a new `HTMLElement` for a given `tagName`\n * or based on an object with specific non-readonly attributes:\n * `id`, `className`, `textContent`, `style`, etc.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/createElementNS\n *\n * @param ns `namespaceURI` to associate with the new `HTMLElement`\n * @param param `tagName` or object\n * @return a new `HTMLElement`\n */\nconst createElementNS = (\n  ns?: string,\n  param?: string | Partial<HTMLElement>\n): HTMLElement | undefined => {\n  if (!ns && !param) return undefined;\n\n  if (typeof param === \"string\") {\n    return getDocument().createElementNS(ns, param) as HTMLElement;\n  }\n\n  const { tagName } = param;\n  const newElement = createElementNS(ns, tagName as string);\n\n  if (!newElement) return undefined;\n\n  const attr = { ...param };\n  delete attr.tagName;\n\n  ObjectEntries(attr).forEach(([key, value]) => {\n    setAttribute(newElement, key, value);\n  });\n\n  return newElement;\n};\n\nexport default createElementNS;\n", "/**\n * Shortcut for the `Element.dispatchEvent(Event)` method.\n *\n * @param element is the target\n * @param event is the `Event` object\n */\nconst dispatchEvent = (element: HTMLElement, event: Event): boolean => element.dispatchEvent(event);\n\nexport default dispatchEvent;\n", "/**\n * JavaScript `Array` distinct.\n * @see https://codeburst.io/javascript-array-distinct-5edc93501dc4\n *\n * @example\n * ```\n * [0,1,1,2].filter(distinct)\n * // => [0,1,2]\n * ```\n * @param value aray item value\n * @param index array item index\n * @param self the array\n * @returns the query result\n */\nconst distinct = (value: any, index: number, self: any[]): boolean => self.indexOf(value) === index;\n\nexport default distinct;\n", "/**\n * Shortcut for `window.getComputedStyle(element).propertyName`\n * static method.\n *\n * * If `element` parameter is not an `HTMLElement`, `getComputedStyle`\n * throws a `ReferenceError`.\n *\n * @param element target\n * @param property the css property\n * @return the css property value\n */\nconst getElementStyle = (element: HTMLElement, property: string): string => {\n  const computedStyle = getComputedStyle(element);\n\n  // must use camelcase strings,\n  // or non-camelcase strings with `getPropertyValue`\n  return property.includes(\"--\")\n    ? computedStyle.getPropertyValue(property)\n    : computedStyle[property as any];\n};\n\nexport default getElementStyle;\n", "import animationDelay from \"../strings/animationDelay\";\nimport animationName from \"../strings/animationName\";\nimport getElementStyle from \"./getElementStyle\";\n\n/**\n * Utility to get the computed `animationDelay`\n * from Element in miliseconds.\n *\n * @param element target\n * @return the `animationDelay` value in miliseconds\n */\nconst getElementAnimationDelay = (element: HTMLElement): number => {\n  const propertyValue = getElementStyle(element, animationName);\n  const durationValue = getElementStyle(element, animationDelay);\n  const durationScale = durationValue.includes(\"ms\") ? /* istanbul ignore next */ 1 : 1000;\n  const duration =\n    propertyValue && propertyValue !== \"none\" ? parseFloat(durationValue) * durationScale : 0;\n\n  /* istanbul ignore next */\n  return !Number.isNaN(duration) ? duration : 0;\n};\n\nexport default getElementAnimationDelay;\n", "import animationDuration from \"../strings/animationDuration\";\nimport animationName from \"../strings/animationName\";\nimport getElementStyle from \"./getElementStyle\";\n\n/**\n * Utility to get the computed `animationDuration`\n * from `HTMLElement` in miliseconds.\n *\n * @param element target\n * @return the `animationDuration` value in miliseconds\n */\nconst getElementAnimationDuration = (element: HTMLElement): number => {\n  const propertyValue = getElementStyle(element, animationName);\n  const durationValue = getElementStyle(element, animationDuration);\n  const durationScale = durationValue.includes(\"ms\") ? /* istanbul ignore next */ 1 : 1000;\n  const duration =\n    propertyValue && propertyValue !== \"none\" ? parseFloat(durationValue) * durationScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */ 0;\n};\n\nexport default getElementAnimationDuration;\n", "import animationEndEvent from \"../strings/animationEndEvent\";\nimport getElementAnimationDelay from \"../get/getElementAnimationDelay\";\nimport getElementAnimationDuration from \"../get/getElementAnimationDuration\";\nimport dispatchEvent from \"./dispatchEvent\";\n\n/**\n * Utility to make sure callbacks are consistently\n * called when animation ends.\n *\n * @param element target\n * @param handler `animationend` callback\n */\nconst emulateAnimationEnd = (element: HTMLElement, handler: EventListener): void => {\n  let called = 0;\n  const endEvent = new Event(animationEndEvent);\n  const duration = getElementAnimationDuration(element);\n  const delay = getElementAnimationDelay(element);\n\n  if (duration) {\n    /**\n     * Wrap the handler in on -> off callback\n     */\n    const animationEndWrapper = (e: Event): void => {\n      /* istanbul ignore else */\n      if (e.target === element) {\n        handler.apply(element, [e]);\n        element.removeEventListener(animationEndEvent, animationEndWrapper);\n        called = 1;\n      }\n    };\n    element.addEventListener(animationEndEvent, animationEndWrapper);\n    setTimeout(() => {\n      /* istanbul ignore next */\n      if (!called) dispatchEvent(element, endEvent);\n    }, duration + delay + 17);\n  } else {\n    handler.apply(element, [endEvent]);\n  }\n};\n\nexport default emulateAnimationEnd;\n", "import transitionDelay from \"../strings/transitionDelay\";\nimport transitionProperty from \"../strings/transitionProperty\";\nimport getElementStyle from \"./getElementStyle\";\n\n/**\n * Utility to get the computed `transitionDelay`\n * from Element in miliseconds.\n *\n * @param element target\n * @return the `transitionDelay` value in miliseconds\n */\nconst getElementTransitionDelay = (element: HTMLElement): number => {\n  const propertyValue = getElementStyle(element, transitionProperty);\n  const delayValue = getElementStyle(element, transitionDelay);\n  const delayScale = delayValue.includes(\"ms\") ? /* istanbul ignore next */ 1 : 1000;\n  const duration =\n    propertyValue && propertyValue !== \"none\" ? parseFloat(delayValue) * delayScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */ 0;\n};\n\nexport default getElementTransitionDelay;\n", "import transitionDuration from \"../strings/transitionDuration\";\nimport transitionProperty from \"../strings/transitionProperty\";\nimport getElementStyle from \"./getElementStyle\";\n\n/**\n * Utility to get the computed `transitionDuration`\n * from Element in miliseconds.\n *\n * @param element target\n * @return the `transitionDuration` value in miliseconds\n */\nconst getElementTransitionDuration = (element: HTMLElement): number => {\n  const propertyValue = getElementStyle(element, transitionProperty);\n  const durationValue = getElementStyle(element, transitionDuration);\n  const durationScale = durationValue.includes(\"ms\") ? /* istanbul ignore next */ 1 : 1000;\n  const duration =\n    propertyValue && propertyValue !== \"none\" ? parseFloat(durationValue) * durationScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */ 0;\n};\n\nexport default getElementTransitionDuration;\n", "import transitionEndEvent from \"../strings/transitionEndEvent\";\nimport getElementTransitionDelay from \"../get/getElementTransitionDelay\";\nimport getElementTransitionDuration from \"../get/getElementTransitionDuration\";\nimport dispatchEvent from \"./dispatchEvent\";\n\n/**\n * Utility to make sure callbacks are consistently\n * called when transition ends.\n *\n * @param element event target\n * @param handler `transitionend` callback\n */\nconst emulateTransitionEnd = (element: HTMLElement, handler: EventListener): void => {\n  let called = 0;\n  const endEvent = new Event(transitionEndEvent);\n  const duration = getElementTransitionDuration(element);\n  const delay = getElementTransitionDelay(element);\n\n  if (duration) {\n    /**\n     * Wrap the handler in on -> off callback\n     */\n    const transitionEndWrapper = (e: Event) => {\n      /* istanbul ignore else */\n      if (e.target === element) {\n        handler.apply(element, [e]);\n        element.removeEventListener(transitionEndEvent, transitionEndWrapper);\n        called = 1;\n      }\n    };\n    element.addEventListener(transitionEndEvent, transitionEndWrapper);\n    setTimeout(() => {\n      /* istanbul ignore next */\n      if (!called) dispatchEvent(element, endEvent);\n    }, duration + delay + 17);\n  } else {\n    handler.apply(element, [endEvent]);\n  }\n};\n\nexport default emulateTransitionEnd;\n", "/**\n * Shortcut for `Float32Array.from()` static method.\n * @param arr array-like iterable object\n * @returns a new Float32Array\n */\nconst Float32ArrayFrom = (arr: any[] | Map<any, any>): Float32Array =>\n  Float32Array.from(Array.from(arr));\n\nexport default Float32ArrayFrom;\n", "/**\n * Shortcut for `Float64Array.from()` static method.\n * @param arr array-like iterable object\n * @returns a new Float64Array\n */\nconst Float64ArrayFrom = (arr: any[] | Map<any, any>): Float64Array =>\n  Float64Array.from(Array.from(arr));\n\nexport default Float64ArrayFrom;\n", "/**\n * Utility to focus an `HTMLElement` target.\n *\n * @param element is the target\n */\nconst focus = (element: HTMLElement) => element.focus();\n\nexport default focus;\n", "/** A generic function with empty body. */\nconst noop = () => {};\n\nexport default noop;\n", "/**\n * The raw value or a given component option.\n *\n * @typedef {} niceValue\n */\n\n/**\n * Utility to normalize component options\n *\n * @param value the input value\n * @return the normalized value\n */\nconst normalizeValue = (value: any): string | HTMLElement | Function | number | boolean | null => {\n  if ([\"true\", true].includes(value)) {\n    // boolean\n    // if ('true' === value) { // boolean\n    return true;\n  }\n\n  if ([\"false\", false].includes(value)) {\n    // boolean\n    // if ('false' === value) { // boolean\n    return false;\n  }\n\n  if (value === \"\" || value === \"null\") {\n    // null\n    return null;\n  }\n\n  if (value !== \"\" && !Number.isNaN(+value)) {\n    // number\n    return +value;\n  }\n\n  // string / function / HTMLElement / object\n  return value;\n};\n\nexport default normalizeValue;\n", "/**\n * Shortcut for `Object.keys()` static method.\n * @param obj a target object\n * @returns an array with object keys\n */\nconst ObjectKeys = (obj: Record<string, any>): string[] => Object.keys(obj);\n\nexport default ObjectKeys;\n", "/**\n * Shortcut for `String.toLowerCase()`.\n *\n * @param source input string\n * @returns lowercase output string\n */\nconst toLowerCase = (source: string): string => source.toLowerCase();\n\nexport default toLowerCase;\n", "import getAttribute from \"../attr/getAttribute\";\nimport normalizeValue from \"./normalizeValue\";\nimport ObjectKeys from \"./ObjectKeys\";\nimport toLowerCase from \"./toLowerCase\";\n\n/**\n * Utility to normalize component options.\n *\n * @param element target\n * @param defaultOps component default options\n * @param inputOps component instance options\n * @param ns component namespace\n * @return normalized component options object\n */\nconst normalizeOptions = (\n  element: HTMLElement,\n  defaultOps: Record<string, any>,\n  inputOps: Record<string, any>,\n  ns?: string\n) => {\n  const data = { ...element.dataset };\n  const normalOps: Record<string, any> = {};\n  const dataOps: Record<string, any> = {};\n  const title = \"title\";\n\n  ObjectKeys(data).forEach((k) => {\n    const key =\n      ns && k.includes(ns) ? k.replace(ns, \"\").replace(/[A-Z]/, (match) => toLowerCase(match)) : k;\n\n    dataOps[key] = normalizeValue(data[k]);\n  });\n\n  ObjectKeys(inputOps).forEach((k) => {\n    inputOps[k] = normalizeValue(inputOps[k]);\n  });\n\n  ObjectKeys(defaultOps).forEach((k) => {\n    /* istanbul ignore else */\n    if (k in inputOps) {\n      normalOps[k] = inputOps[k];\n    } else if (k in dataOps) {\n      normalOps[k] = dataOps[k];\n    } else {\n      normalOps[k] = k === title ? getAttribute(element, title) : defaultOps[k];\n    }\n  });\n\n  return normalOps;\n};\n\nexport default normalizeOptions;\n", "/**\n * Shortcut for `Object.assign()` static method.\n * @param obj a target object\n * @param source a source object\n */\nconst ObjectAssign = (obj: Record<string, any>, source: Record<string, any>) =>\n  Object.assign(obj, source);\nexport default ObjectAssign;\n", "/**\n * Shortcut for `Object.values()` static method.\n * @param obj a target object\n * @returns an array with the object values\n */\nconst ObjectValues = (obj: Record<string, any>): any[] => Object.values(obj);\n\nexport default ObjectValues;\n", "/**\n * Checks if an object is an `Object`.\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isObject = (obj?: any): obj is object => typeof obj === \"object\" || false;\n\nexport default isObject;\n", "import OriginalEvent from \"../interface/originalEvent\";\nimport isObject from \"../is/isObject\";\nimport ObjectAssign from \"./ObjectAssign\";\n\n/**\n * Returns a namespaced `CustomEvent` specific to each component.\n * @param EventType Event.type\n * @param config Event.options | Event.properties\n * @returns a new namespaced event\n */\nconst OriginalEvent = (EventType: string, config?: Record<string, any>): OriginalEvent => {\n  const OriginalCustomEvent = new CustomEvent(EventType, {\n    cancelable: true,\n    bubbles: true,\n  });\n\n  /* istanbul ignore else */\n  if (isObject(config)) {\n    ObjectAssign(OriginalCustomEvent, config as object);\n  }\n  return OriginalCustomEvent;\n};\n\nexport default OriginalEvent;\n", "/**\n * A global namespace for most scroll event listeners.\n */\nconst passiveHandler: Partial<AddEventListenerOptions> = { passive: true };\n\nexport default passiveHandler;\n", "/**\n * Utility to force re-paint of an `HTMLElement` target.\n *\n * @param element is the target\n * @return the `Element.offsetHeight` value\n */\nconst reflow = (element: HTMLElement): number => element.offsetHeight;\n\nexport default reflow;\n", "import ObjectAssign from \"./ObjectAssign\";\nimport ObjectEntries from \"./ObjectEntries\";\n\n/**\n * Shortcut for multiple uses of `HTMLElement.style.propertyName` method.\n * @param element target element\n * @param styles attribute value\n */\nconst setElementStyle = (element: HTMLElement, styles: Partial<CSSStyleDeclaration>): void => {\n  ObjectEntries(styles).forEach(([key, value]: [string, string]) => {\n    if (key.includes(\"--\")) {\n      element.style.setProperty(key, value);\n    } else {\n      const propObject: Record<string, string> = {};\n      propObject[key] = value;\n      ObjectAssign(element.style, propObject);\n    }\n  });\n};\nexport default setElementStyle;\n", "import isHTMLElement from \"../is/isHTMLElement\";\n\nconst TimeCache = new Map();\n/**\n * An interface for one or more `TimerHandler`s per `Element`.\n * @see https://github.com/thednp/navbar/\n */\nconst Timer = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (element: HTMLElement, callback: ReturnType<any>, delay: number, key?: string) => {\n    if (!isHTMLElement(element)) return;\n\n    /* istanbul ignore else */\n    if (key && key.length) {\n      /* istanbul ignore else */\n      if (!TimeCache.has(element)) {\n        TimeCache.set(element, new Map());\n      }\n      const keyTimers = TimeCache.get(element);\n      keyTimers.set(key, setTimeout(callback, delay));\n    } else {\n      TimeCache.set(element, setTimeout(callback, delay));\n    }\n  },\n\n  /**\n   * Returns the timer associated with the target.\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (element: HTMLElement, key?: string) => {\n    if (!isHTMLElement(element)) return null;\n    const keyTimers = TimeCache.get(element);\n\n    if (key && key.length && keyTimers && keyTimers.get) {\n      return keyTimers.get(key) || /* istanbul ignore next */ null;\n    }\n    return keyTimers || null;\n  },\n\n  /**\n   * Clears the element's timer.\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (element: HTMLElement, key: string) => {\n    if (!isHTMLElement(element)) return;\n\n    if (key && key.length) {\n      const keyTimers = TimeCache.get(element);\n      /* istanbul ignore else */\n      if (keyTimers && keyTimers.get) {\n        clearTimeout(keyTimers.get(key));\n        keyTimers.delete(key);\n        /* istanbul ignore else */\n        if (keyTimers.size === 0) {\n          TimeCache.delete(element);\n        }\n      }\n    } else {\n      clearTimeout(TimeCache.get(element));\n      TimeCache.delete(element);\n    }\n  },\n};\n\nexport default Timer;\n", "/**\n * Shortcut for `String.toUpperCase()`.\n *\n * @param source input string\n * @returns uppercase output string\n */\nconst toUpperCase = (source: string): string => source.toUpperCase();\n\nexport default toUpperCase;\n", "import isHTMLElement from \"../is/isHTMLElement\";\nimport BoundingClientRect from \"../interface/boundingClientRect\";\n\n/**\n * Returns the bounding client rect of a target `HTMLElement`.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element event.target\n * @param includeScale when *true*, the target scale is also computed\n * @returns the bounding client rect object\n */\nconst getBoundingClientRect = (\n  element: HTMLElement,\n  includeScale?: boolean\n): BoundingClientRect => {\n  const { width, height, top, right, bottom, left } = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    const { offsetWidth, offsetHeight } = element;\n    scaleX = offsetWidth > 0 ? Math.round(width) / offsetWidth : /* istanbul ignore next */ 1;\n    scaleY = offsetHeight > 0 ? Math.round(height) / offsetHeight : /* istanbul ignore next */ 1;\n  }\n\n  return {\n    width: width / scaleX,\n    height: height / scaleY,\n    top: top / scaleY,\n    right: right / scaleX,\n    bottom: bottom / scaleY,\n    left: left / scaleX,\n    x: left / scaleX,\n    y: top / scaleY,\n  };\n};\n\nexport default getBoundingClientRect;\n", "import getDocument from \"./getDocument\";\n\n/**\n * Returns the `document.body` or the `<body>` element.\n *\n * @param node reference node\n * @returns the parent `<body>` of the specified node\n */\nconst getDocumentBody = (node?: any): HTMLElement => {\n  return getDocument(node).body;\n};\n\nexport default getDocumentBody;\n", "import getDocument from \"./getDocument\";\n\n/**\n * Returns the `document.documentElement` or the `<HTML>` element.\n *\n * @param node reference node\n * @returns the parent `<HTML>` of the node's parent document\n */\nconst getDocumentElement = (node?: Node): HTMLElement => {\n  return getDocument(node).documentElement;\n};\n\nexport default getDocumentElement;\n", "import getDocument from \"./getDocument\";\n/**\n * Returns the `document.head` or the `<head>` element.\n *\n * @param node reference node\n * @returns the `<head>` of the node's parent document\n */\nconst getDocumentHead = (node?: Node): HTMLElement => {\n  return getDocument(node).head;\n};\n\nexport default getDocumentHead;\n", "import isWindow from \"src/is/isWindow\";\n\n/**\n * Returns an `{x,y}` object with the target\n * `HTMLElement` / `Node` scroll position.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element target node / element\n * @returns the scroll tuple\n */\nconst getNodeScroll = (element: HTMLElement | Window): { x: number; y: number } => {\n  const isWin = isWindow(element);\n  const x = isWin ? element.scrollX : element.scrollLeft;\n  const y = isWin ? element.scrollY : element.scrollTop;\n\n  return { x, y };\n};\n\nexport default getNodeScroll;\n", "/**\n * Check if target is a `ShadowRoot`.\n *\n * @param element target\n * @returns the query result\n */\nconst isShadowRoot = (element?: any): element is ShadowRoot =>\n  (element && element.constructor.name === \"ShadowRoot\") || false;\n\nexport default isShadowRoot;\n", "import getDocumentElement from \"./getDocumentElement\";\nimport isShadowRoot from \"../is/isShadowRoot\";\n\n/**\n * Returns the `parentNode` also going through `ShadowRoot`.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param {Node} node the target node\n * @returns {Node} the apropriate parent node\n */\nconst getParentNode = (node: Node): Node => {\n  if (node.nodeName === \"HTML\") {\n    return node;\n  }\n\n  // this is a quicker (but less type safe) way to save quite some bytes from the bundle\n  return (\n    (node as HTMLElement).assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    node.parentNode || // DOM Element detected\n    (isShadowRoot(node as ShadowRoot) && (node as ShadowRoot).host) || // ShadowRoot detected\n    getDocumentElement(node) // fallback\n  );\n};\n\nexport default getParentNode;\n", "import isHTMLElement from \"./isHTMLElement\";\nimport getBoundingClientRect from \"../get/getBoundingClientRect\";\n\n/**\n * Checks if a target `HTMLElement` is affected by scale.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element target\n * @returns the query result\n */\nexport default function isScaledElement(element?: HTMLElement): boolean {\n  if (!isHTMLElement(element)) return false;\n  const { width, height } = getBoundingClientRect(element);\n  const { offsetWidth, offsetHeight } = element;\n  return Math.round(width) !== offsetWidth || Math.round(height) !== offsetHeight;\n}\n", "import OffsetRect from \"../interface/offsetRect\";\nimport isScaledElement from \"../is/isScaledElement\";\nimport isHTMLElement from \"../is/isHTMLElement\";\nimport getBoundingClientRect from \"./getBoundingClientRect\";\n\n/**\n * Returns the rect relative to an offset parent.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element target\n * @param offsetParent the container / offset parent\n * @param scroll the offsetParent scroll position\n * @returns {SHORTY.OffsetRect}\n */\nconst getRectRelativeToOffsetParent = (\n  element: HTMLElement,\n  offsetParent: HTMLElement,\n  scroll: { x: number; y: number }\n): OffsetRect => {\n  const isParentAnElement = isHTMLElement(offsetParent);\n  const rect = getBoundingClientRect(element, isParentAnElement && isScaledElement(offsetParent));\n  const offsets = { x: 0, y: 0 };\n\n  /* istanbul ignore next */\n  if (isParentAnElement) {\n    const offsetRect = getBoundingClientRect(offsetParent, true);\n    offsets.x = offsetRect.x + offsetParent.clientLeft;\n    offsets.y = offsetRect.y + offsetParent.clientTop;\n  }\n\n  return {\n    x: rect.left + scroll.x - offsets.x,\n    y: rect.top + scroll.y - offsets.y,\n    width: rect.width,\n    height: rect.height,\n  };\n};\n\nexport default getRectRelativeToOffsetParent;\n", "let elementUID = 0;\nlet elementMapUID = 0;\nconst elementIDMap = new Map();\n\n/**\n * Returns a unique identifier for popover, tooltip, scrollspy.\n *\n * @param element target element\n * @param key predefined key\n * @returns an existing or new unique ID\n */\nconst getUID = (element: HTMLElement, key?: string): number => {\n  let result = key ? elementUID : elementMapUID;\n\n  if (key) {\n    const elID = getUID(element);\n    const elMap = elementIDMap.get(elID) || new Map();\n    if (!elementIDMap.has(elID)) {\n      elementIDMap.set(elID, elMap);\n    }\n    if (!elMap.has(key)) {\n      elMap.set(key, result);\n      elementUID += 1;\n    } else result = elMap.get(key);\n  } else {\n    const elkey = element.id || element;\n\n    if (!elementIDMap.has(elkey)) {\n      elementIDMap.set(elkey, result);\n      elementMapUID += 1;\n    } else result = elementIDMap.get(elkey);\n  }\n  return result;\n};\n\nexport default getUID;\n", "import isDocument from \"../is/isDocument\";\nimport isNode from \"../is/isNode\";\n\n/**\n * Returns the `Window` object of a target node.\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param node target node\n * @returns the `Window` object\n */\nconst getWindow = (node?: any): Window => {\n  // node is undefined | NULL\n  if (!node) return window;\n  // node instanceof Document\n  if (isDocument(node)) return node.defaultView;\n  // node instanceof Node\n  if (isNode(node)) return node.ownerDocument.defaultView;\n  // node is instanceof Window\n  return node;\n};\n\nexport default getWindow;\n", "/**\n * Shortcut for `Array.isArray()` static method.\n *\n * @param arr array-like iterable object\n * @returns the query result\n */\nconst isArray = (arr?: any): arr is any[] => Array.isArray(arr) || false;\n\nexport default isArray;\n", "/**\n * Checks if an object is a `CustomElement`.\n *\n * @param element the target object\n * @returns the query result\n */\nconst isCustomElement = <T extends HTMLElement & { shadowRoot: Node }>(\n  element?: any\n): element is T => (element && !!element.shadowRoot) || false;\nexport default isCustomElement;\n", "/**\n * Checks if an object is an `Element`.\n * @see https://dom.spec.whatwg.org/#node\n * ELEMENT_NODE = 1;\n * ATTRIBUTE_NODE = 2;\n * TEXT_NODE = 3;\n * CDATA_SECTION_NODE = 4;\n * ENTITY_REFERENCE_NODE = 5; // legacy\n * ENTITY_NODE = 6; // legacy\n * PROCESSING_INSTRUCTION_NODE = 7;\n * COMMENT_NODE = 8;\n * DOCUMENT_NODE = 9;\n * DOCUMENT_TYPE_NODE = 10;\n * DOCUMENT_FRAGMENT_NODE = 11;\n *\n * @param element the target object\n * @returns the query result\n */\nconst isElement = (element?: any): element is Element =>\n  (element && [1, 2, 3, 4, 5, 6, 7, 8].some((x) => element.nodeType === x)) || false;\n\nexport default isElement;\n", "import getBoundingClientRect from \"../get/getBoundingClientRect\";\nimport getDocumentElement from \"../get/getDocumentElement\";\nimport isNode from \"./isNode\";\n\n/**\n * Utility to determine if an `HTMLElement`\n * is partially visible in viewport.\n *\n * @param element target\n * @return the query result\n */\nconst isElementInScrollRange = (element?: HTMLElement): boolean => {\n  if (!element || !isNode(element)) return false;\n\n  const { top, bottom } = getBoundingClientRect(element);\n  const { clientHeight } = getDocumentElement(element);\n  return top <= clientHeight && bottom >= 0;\n};\n\nexport default isElementInScrollRange;\n", "import getBoundingClientRect from \"../get/getBoundingClientRect\";\nimport getDocumentElement from \"../get/getDocumentElement\";\nimport isNode from \"./isNode\";\n\n/**\n * Utility to determine if an `HTMLElement`\n * is fully visible in the viewport.\n *\n * @param element target\n * @return the query result\n */\nconst isElementInViewport = (element?: HTMLElement): boolean => {\n  if (!element || !isNode(element)) return false;\n\n  const { clientWidth, clientHeight } = getDocumentElement(element);\n  const { top, left, bottom, right } = getBoundingClientRect(element, true);\n\n  return top >= 0 && left >= 0 && bottom <= clientHeight && right <= clientWidth;\n};\nexport default isElementInViewport;\n", "import isHTMLElement from \"./isHTMLElement\";\nimport isArray from \"./isArray\";\n\n/**\n * Checks if an object is an `Array` in which all items are `Element`.\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isElementsArray = (obj?: any): obj is HTMLElement[] =>\n  (isArray(obj) && obj.every(isHTMLElement)) || false;\n\nexport default isElementsArray;\n", "/**\n * Checks if an object is a `Function`.\n *\n * @param fn the target object\n * @returns the query result\n */\nconst isFunction = (fn?: any): fn is Function =>\n  (fn && fn.constructor.name === \"Function\") || false;\n\nexport default isFunction;\n", "/**\n * Checks if an object is an `HTMLCollection`.\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isHTMLCollection = (obj?: any): obj is HTMLCollection =>\n  (obj && obj.constructor.name === \"HTMLCollection\") || false;\n\nexport default isHTMLCollection;\n", "/**\n * Check if a target element is an `<img>`.\n * @param element the target element\n * @returns the query result\n */\nconst isHTMLImageElement = (element?: any): element is HTMLImageElement =>\n  (element && element.tagName === \"IMG\") || false;\n\nexport default isHTMLImageElement;\n", "/**\n * Checks if an element is an `<svg>` (or any type of SVG element),\n * `<img>` or `<video>`.\n *\n * *Tooltip* / *Popover* works different with media elements.\n * @param element the target element\n * @returns the query result\n */\n\nconst isMedia = (element?: any): element is SVGElement | HTMLImageElement | HTMLVideoElement =>\n  (element &&\n    element.nodeType === 1 &&\n    [\"SVG\", \"Image\", \"Video\"].some((s) => element.constructor.name.includes(s))) ||\n  false;\n\nexport default isMedia;\n", "/**\n * Checks if an object is a `NodeList`.\n * => equivalent to `object instanceof NodeList`\n *\n * @param obj the target object\n * @returns the query result\n */\nconst isNodeList = (obj?: any): obj is NodeList =>\n  (obj && obj.constructor.name === \"NodeList\") || false;\n\nexport default isNodeList;\n", "/**\n * Shortcut for `typeof SOMETHING === \"number\"`.\n *\n * @param num input value\n * @returns the query result\n */\nconst isNumber = (num?: any): num is number => typeof num === \"number\" || false;\n\nexport default isNumber;\n", "import getDocumentElement from \"../get/getDocumentElement\";\n\n/**\n * Checks if a page is Right To Left.\n * @param node the target\n * @returns the query result\n */\nconst isRTL = (node?: Node): boolean => getDocumentElement(node).dir === \"rtl\";\n\nexport default isRTL;\n", "/**\n * Shortcut for `typeof SOMETHING === \"string\"`.\n *\n * @param str input value\n * @returns the query result\n */\nconst isString = (str?: any): str is string => typeof str === \"string\" || false;\n\nexport default isString;\n", "/**\n * Check if an element is an `<svg>` or any other SVG element,\n * an equivalent to `SOMETHING instanceof SVGElement`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst isSVGElement = (element?: any): element is SVGElement =>\n  (element && element.constructor.name.includes(\"SVG\")) || false;\n\nexport default isSVGElement;\n", "/**\n * Check if a target element is a `<table>`, `<td>` or `<th>`.\n * This specific check is important for determining\n * the `offsetParent` of a given element.\n *\n * @param element the target element\n * @returns the query result\n */\nconst isTableElement = (element?: any): element is HTMLTableElement | HTMLTableCellElement =>\n  (element && [\"TABLE\", \"TD\", \"TH\"].includes(element.tagName)) || false;\n\nexport default isTableElement;\n", "/**\n * Shortcut for `HTMLElement.closest` method which also works\n * with children of `ShadowRoot`. The order of the parameters\n * is intentional since they're both required.\n *\n * @see https://stackoverflow.com/q/54520554/803358\n *\n * @param element Element to look into\n * @param selector the selector name\n * @return the query result\n */\nconst closest = (element: HTMLElement, selector: string): HTMLElement | null => {\n  return element\n    ? element.closest(selector) ||\n        // break out of `ShadowRoot`\n        closest((element.getRootNode() as HTMLElement & { host: HTMLElement }).host, selector)\n    : null;\n};\n\nexport default closest;\n", "import getDocument from \"../get/getDocument\";\nimport isNode from \"../is/isNode\";\n\n/**\n * Utility to check if target is typeof `HTMLElement`, `Element`, `Node`\n * or find one that matches a selector.\n *\n * @param selector the input selector or target element\n * @param parent optional node to look into\n * @return the `HTMLElement` or `querySelector` result\n */\nconst querySelector = (selector: Node | string, parent?: ParentNode): HTMLElement | null => {\n  if (typeof selector === \"object\" && isNode(selector)) {\n    return selector as HTMLElement;\n  }\n  const lookUp = parent && isNode(parent) ? parent : getDocument();\n\n  return lookUp.querySelector(selector as string);\n};\n\nexport default querySelector;\n", "import getDocument from \"../get/getDocument\";\nimport isNode from \"../is/isNode\";\n\n/**\n * Shortcut for `HTMLElement.getElementsByTagName` method. Some `Node` elements\n * like `ShadowRoot` do not support `getElementsByTagName`.\n *\n * @param selector the tag name\n * @param parent optional Element to look into\n * @return the 'HTMLCollection'\n */\nconst getElementsByTagName = (\n  selector: string,\n  parent?: ParentNode\n): HTMLCollectionOf<HTMLElement> => {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return (lookUp as Document).getElementsByTagName(selector) as HTMLCollectionOf<HTMLElement>;\n};\n\nexport default getElementsByTagName;\n", "import isCustomElement from \"../is/isCustomElement\";\nimport getElementsByTagName from \"./getElementsByTagName\";\n\n/**\n * Returns an `Array` of `Node` elements that are registered as\n * `CustomElement`.\n * @see https://stackoverflow.com/questions/27334365/how-to-get-list-of-registered-custom-elements\n *\n * @param parent parent to look into\n * @returns the query result\n */\nconst getCustomElements = (parent?: ParentNode): HTMLElement[] => {\n  const collection = getElementsByTagName(\"*\", parent);\n\n  return [...collection].filter(isCustomElement);\n};\n\nexport default getCustomElements;\n", "import getDocument from \"../get/getDocument\";\n\n/**\n * Returns an `Element` that matches the id in the document.\n * Within multiple <iframe> elements, a `parent` parameter\n * would decisively locate the correct element.\n *\n * @param id the ID selector\n * @param context an element in it's document or document\n * @returns the requested element\n */\nconst getElementById = (id: string, context?: ParentNode): HTMLElement | null => {\n  return getDocument(context).getElementById(id) || null;\n};\n\nexport default getElementById;\n", "import getDocument from \"../get/getDocument\";\nimport isNode from \"../is/isNode\";\n\n/**\n * A shortcut for `(document|Element).querySelectorAll`.\n *\n * @param selector the input selector\n * @param parent optional node to look into\n * @return the query result\n */\nconst querySelectorAll = (selector: string, parent?: ParentNode): NodeListOf<HTMLElement> => {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return (lookUp as Document).querySelectorAll(selector);\n};\n\nexport default querySelectorAll;\n", "import getDocument from \"../get/getDocument\";\nimport isNode from \"../is/isNode\";\n\n/**\n * Shortcut for `HTMLElement.getElementsByClassName` method. Some `Node` elements\n * like `ShadowRoot` do not support `getElementsByClassName`.\n *\n * @param elector the class name\n * @param parent optional Element to look into\n * @return the 'HTMLCollection'\n */\nconst getElementsByClassName = (\n  selector: string,\n  parent?: ParentNode\n): HTMLCollectionOf<HTMLElement> => {\n  const lookUp = parent && isNode(parent) ? parent : getDocument();\n  return (lookUp as HTMLElement | Document).getElementsByClassName(\n    selector\n  ) as HTMLCollectionOf<HTMLElement>;\n};\n\nexport default getElementsByClassName;\n", "/**\n * Check if element matches a CSS selector.\n *\n * @param target the target element\n * @param selector the selector to match\n * @returns the query result\n */\nconst matches = (target: HTMLElement, selector: string): boolean => target.matches(selector);\n\nexport default matches;\n", "// strings\nimport ariaChecked from \"./strings/ariaChecked\";\nimport ariaDescription from \"./strings/ariaDescription\";\nimport ariaDescribedBy from \"./strings/ariaDescribedBy\";\nimport ariaExpanded from \"./strings/ariaExpanded\";\nimport ariaHasPopup from \"./strings/ariaHasPopup\";\nimport ariaHidden from \"./strings/ariaHidden\";\nimport ariaLabel from \"./strings/ariaLabel\";\nimport ariaLabelledBy from \"./strings/ariaLabelledBy\";\nimport ariaModal from \"./strings/ariaModal\";\nimport ariaPressed from \"./strings/ariaPressed\";\nimport ariaSelected from \"./strings/ariaSelected\";\nimport ariaValueMin from \"./strings/ariaValueMin\";\nimport ariaValueMax from \"./strings/ariaValueMax\";\nimport ariaValueNow from \"./strings/ariaValueNow\";\nimport ariaValueText from \"./strings/ariaValueText\";\n\nimport nativeEvents from \"./strings/nativeEvents\";\nimport abortEvent from \"./strings/abortEvent\";\nimport blurEvent from \"./strings/blurEvent\";\nimport moveEvent from \"./strings/moveEvent\";\nimport changeEvent from \"./strings/changeEvent\";\nimport errorEvent from \"./strings/errorEvent\";\nimport resetEvent from \"./strings/resetEvent\";\nimport resizeEvent from \"./strings/resizeEvent\";\nimport scrollEvent from \"./strings/scrollEvent\";\nimport submitEvent from \"./strings/submitEvent\";\nimport loadEvent from \"./strings/loadEvent\";\nimport loadstartEvent from \"./strings/loadstartEvent\";\nimport unloadEvent from \"./strings/unloadEvent\";\nimport readystatechangeEvent from \"./strings/readystatechangeEvent\";\nimport beforeunloadEvent from \"./strings/beforeunloadEvent\";\nimport orientationchangeEvent from \"./strings/orientationchangeEvent\";\nimport contextmenuEvent from \"./strings/contextmenuEvent\";\nimport DOMContentLoadedEvent from \"./strings/DOMContentLoadedEvent\";\nimport DOMMouseScrollEvent from \"./strings/DOMMouseScrollEvent\";\n\nimport selectEvent from \"./strings/selectEvent\";\nimport selectendEvent from \"./strings/selectendEvent\";\nimport selectstartEvent from \"./strings/selectstartEvent\";\n\nimport mouseSwipeEvents from \"./strings/mouseSwipeEvents\";\nimport mouseClickEvents from \"./strings/mouseClickEvents\";\nimport mouseclickEvent from \"./strings/mouseclickEvent\";\nimport mousedblclickEvent from \"./strings/mousedblclickEvent\";\nimport mousedownEvent from \"./strings/mousedownEvent\";\nimport mouseupEvent from \"./strings/mouseupEvent\";\nimport mousehoverEvent from \"./strings/mousehoverEvent\";\nimport mouseHoverEvents from \"./strings/mouseHoverEvents\";\nimport mouseenterEvent from \"./strings/mouseenterEvent\";\nimport mouseleaveEvent from \"./strings/mouseleaveEvent\";\nimport mouseinEvent from \"./strings/mouseinEvent\";\nimport mouseoutEvent from \"./strings/mouseoutEvent\";\nimport mouseoverEvent from \"./strings/mouseoverEvent\";\nimport mousemoveEvent from \"./strings/mousemoveEvent\";\nimport mousewheelEvent from \"./strings/mousewheelEvent\";\n\nimport touchEvents from \"./strings/touchEvents\";\nimport touchstartEvent from \"./strings/touchstartEvent\";\nimport touchmoveEvent from \"./strings/touchmoveEvent\";\nimport touchcancelEvent from \"./strings/touchcancelEvent\";\nimport touchendEvent from \"./strings/touchendEvent\";\n\nimport pointercancelEvent from \"./strings/pointercancelEvent\";\nimport pointerdownEvent from \"./strings/pointerdownEvent\";\nimport pointerleaveEvent from \"./strings/pointerleaveEvent\";\nimport pointermoveEvent from \"./strings/pointermoveEvent\";\nimport pointerupEvent from \"./strings/pointerupEvent\";\n\nimport focusEvents from \"./strings/focusEvents\";\nimport focusEvent from \"./strings/focusEvent\";\nimport focusinEvent from \"./strings/focusinEvent\";\nimport focusoutEvent from \"./strings/focusoutEvent\";\n\nimport gesturechangeEvent from \"./strings/gesturechangeEvent\";\nimport gestureendEvent from \"./strings/gestureendEvent\";\nimport gesturestartEvent from \"./strings/gesturestartEvent\";\n\nimport keyboardEventKeys from \"./strings/keyboardEventKeys\";\nimport keydownEvent from \"./strings/keydownEvent\";\nimport keyupEvent from \"./strings/keyupEvent\";\nimport keypressEvent from \"./strings/keypressEvent\";\nimport keyAlt from \"./strings/keyAlt\";\nimport keyArrowDown from \"./strings/keyArrowDown\";\nimport keyArrowUp from \"./strings/keyArrowUp\";\nimport keyArrowLeft from \"./strings/keyArrowLeft\";\nimport keyArrowRight from \"./strings/keyArrowRight\";\nimport keyBackspace from \"./strings/keyBackspace\";\nimport keyCapsLock from \"./strings/keyCapsLock\";\nimport keyControl from \"./strings/keyControl\";\nimport keyDelete from \"./strings/keyDelete\";\nimport keyEnter from \"./strings/keyEnter\";\nimport keyEscape from \"./strings/keyEscape\";\nimport keyInsert from \"./strings/keyInsert\";\nimport keyMeta from \"./strings/keyMeta\";\nimport keyPause from \"./strings/keyPause\";\nimport keyScrollLock from \"./strings/keyScrollLock\";\nimport keyShift from \"./strings/keyShift\";\nimport keySpace from \"./strings/keySpace\";\nimport keyTab from \"./strings/keyTab\";\n\nimport animationDuration from \"./strings/animationDuration\";\nimport animationDelay from \"./strings/animationDelay\";\nimport animationName from \"./strings/animationName\";\nimport animationEndEvent from \"./strings/animationEndEvent\";\nimport transitionDuration from \"./strings/transitionDuration\";\nimport transitionDelay from \"./strings/transitionDelay\";\nimport transitionEndEvent from \"./strings/transitionEndEvent\";\nimport transitionProperty from \"./strings/transitionProperty\";\n\nimport addEventListener from \"./strings/addEventListener\";\nimport removeEventListener from \"./strings/removeEventListener\";\n\nimport bezierEasings from \"./strings/bezierEasings\";\n\nimport offsetHeight from \"./strings/offsetHeight\";\nimport offsetWidth from \"./strings/offsetWidth\";\nimport scrollHeight from \"./strings/scrollHeight\";\nimport scrollWidth from \"./strings/scrollWidth\";\nimport tabindex from \"./strings/tabindex\";\n\nimport userAgentData from \"./strings/userAgentData\";\nimport userAgent from \"./strings/userAgent\";\n\n// boolean\nimport isMobile from \"./boolean/isMobile\";\nimport isApple from \"./boolean/isApple\";\nimport isFirefox from \"./boolean/isFirefox\";\nimport support3DTransform from \"./boolean/support3DTransform\";\nimport supportPassive from \"./boolean/supportPassive\";\nimport supportTransform from \"./boolean/supportTransform\";\nimport supportTouch from \"./boolean/supportTouch\";\nimport supportAnimation from \"./boolean/supportAnimation\";\nimport supportTransition from \"./boolean/supportTransition\";\n\n// attributes\nimport getAttribute from \"./attr/getAttribute\";\nimport getAttributeNS from \"./attr/getAttributeNS\";\nimport hasAttribute from \"./attr/hasAttribute\";\nimport hasAttributeNS from \"./attr/hasAttributeNS\";\nimport setAttribute from \"./attr/setAttribute\";\nimport setAttributeNS from \"./attr/setAttributeNS\";\nimport removeAttribute from \"./attr/removeAttribute\";\nimport removeAttributeNS from \"./attr/removeAttributeNS\";\n\n// class\nimport addClass from \"./class/addClass\";\nimport removeClass from \"./class/removeClass\";\nimport hasClass from \"./class/hasClass\";\n\n// event\nimport on from \"./event/on\";\nimport off from \"./event/off\";\nimport one from \"./event/one\";\n\n// misc\nimport ArrayFrom from \"./misc/ArrayFrom\";\nimport Data, { getInstance } from \"./misc/data\";\nimport createElement from \"./misc/createElement\";\nimport createElementNS from \"./misc/createElementNS\";\nimport dispatchEvent from \"./misc/dispatchEvent\";\nimport distinct from \"./misc/distinct\";\nimport emulateAnimationEnd from \"./misc/emulateAnimationEnd\";\nimport emulateTransitionEnd from \"./misc/emulateTransitionEnd\";\nimport Float32ArrayFrom from \"./misc/Float32ArrayFrom\";\nimport Float64ArrayFrom from \"./misc/Float64ArrayFrom\";\nimport focus from \"./misc/focus\";\nimport noop from \"./misc/noop\";\nimport normalizeOptions from \"./misc/normalizeOptions\";\nimport normalizeValue from \"./misc/normalizeValue\";\nimport ObjectAssign from \"./misc/ObjectAssign\";\nimport ObjectEntries from \"./misc/ObjectEntries\";\nimport ObjectKeys from \"./misc/ObjectKeys\";\nimport ObjectValues from \"./misc/ObjectValues\";\nimport OriginalEvent from \"./misc/OriginalEvent\";\nimport passiveHandler from \"./misc/passiveHandler\";\nimport reflow from \"./misc/reflow\";\nimport setElementStyle from \"./misc/setElementStyle\";\nimport Timer from \"./misc/timer\";\nimport toLowerCase from \"./misc/toLowerCase\";\nimport toUpperCase from \"./misc/toUpperCase\";\n\n// get\nimport getBoundingClientRect from \"./get/getBoundingClientRect\";\nimport getDocument from \"./get/getDocument\";\nimport getDocumentBody from \"./get/getDocumentBody\";\nimport getDocumentElement from \"./get/getDocumentElement\";\nimport getDocumentHead from \"./get/getDocumentHead\";\nimport getElementAnimationDuration from \"./get/getElementAnimationDuration\";\nimport getElementAnimationDelay from \"./get/getElementAnimationDelay\";\nimport getElementStyle from \"./get/getElementStyle\";\nimport getElementTransitionDuration from \"./get/getElementTransitionDuration\";\nimport getElementTransitionDelay from \"./get/getElementTransitionDelay\";\nimport getNodeScroll from \"./get/getNodeScroll\";\nimport getParentNode from \"./get/getParentNode\";\nimport getRectRelativeToOffsetParent from \"./get/getRectRelativeToOffsetParent\";\nimport getUID from \"./get/getUID\";\nimport getWindow from \"./get/getWindow\";\n\n// is\nimport isArray from \"./is/isArray\";\nimport isDocument from \"./is/isDocument\";\nimport isCustomElement from \"./is/isCustomElement\";\nimport isElement from \"./is/isElement\";\nimport isElementInScrollRange from \"./is/isElementInScrollRange\";\nimport isElementInViewport from \"./is/isElementInViewport\";\nimport isElementsArray from \"./is/isElementsArray\";\nimport isFunction from \"./is/isFunction\";\nimport isObject from \"./is/isObject\";\nimport isHTMLCollection from \"./is/isHTMLCollection\";\nimport isHTMLElement from \"./is/isHTMLElement\";\nimport isHTMLImageElement from \"./is/isHTMLImageElement\";\nimport isMedia from \"./is/isMedia\";\nimport isNode from \"./is/isNode\";\nimport isNodeList from \"./is/isNodeList\";\nimport isNumber from \"./is/isNumber\";\nimport isRTL from \"./is/isRTL\";\nimport isScaledElement from \"./is/isScaledElement\";\nimport isShadowRoot from \"./is/isShadowRoot\";\nimport isString from \"./is/isString\";\nimport isSVGElement from \"./is/isSVGElement\";\nimport isTableElement from \"./is/isTableElement\";\nimport isWindow from \"./is/isWindow\";\n\n// selectors\nimport closest from \"./selectors/closest\";\nimport querySelector from \"./selectors/querySelector\";\nimport getCustomElements from \"./selectors/getCustomElements\";\nimport getElementById from \"./selectors/getElementById\";\nimport querySelectorAll from \"./selectors/querySelectorAll\";\nimport getElementsByTagName from \"./selectors/getElementsByTagName\";\nimport getElementsByClassName from \"./selectors/getElementsByClassName\";\nimport matches from \"./selectors/matches\";\n\nconst SHORTY = {\n  ariaChecked,\n  ariaDescription,\n  ariaDescribedBy,\n  ariaExpanded,\n  ariaHidden,\n  ariaHasPopup,\n  ariaLabel,\n  ariaLabelledBy,\n  ariaModal,\n  ariaPressed,\n  ariaSelected,\n  ariaValueMin,\n  ariaValueMax,\n  ariaValueNow,\n  ariaValueText,\n  nativeEvents,\n  abortEvent,\n  blurEvent,\n  moveEvent,\n  changeEvent,\n  errorEvent,\n  resetEvent,\n  resizeEvent,\n  scrollEvent,\n  submitEvent,\n  loadEvent,\n  loadstartEvent,\n  unloadEvent,\n  readystatechangeEvent,\n  beforeunloadEvent,\n  orientationchangeEvent,\n  contextmenuEvent,\n  DOMContentLoadedEvent,\n  DOMMouseScrollEvent,\n  selectEvent,\n  selectendEvent,\n  selectstartEvent,\n  mouseClickEvents,\n  mouseclickEvent,\n  mousedblclickEvent,\n  mousedownEvent,\n  mouseupEvent,\n  mousehoverEvent,\n  mouseHoverEvents,\n  mouseenterEvent,\n  mouseleaveEvent,\n  mouseinEvent,\n  mouseoutEvent,\n  mouseoverEvent,\n  mousemoveEvent,\n  mousewheelEvent,\n  mouseSwipeEvents,\n  touchEvents,\n  touchstartEvent,\n  touchmoveEvent,\n  touchcancelEvent,\n  touchendEvent,\n  pointercancelEvent,\n  pointerdownEvent,\n  pointerleaveEvent,\n  pointermoveEvent,\n  pointerupEvent,\n  focusEvents,\n  focusEvent,\n  focusinEvent,\n  focusoutEvent,\n  gesturechangeEvent,\n  gestureendEvent,\n  gesturestartEvent,\n  bezierEasings,\n  animationDuration,\n  animationDelay,\n  animationName,\n  animationEndEvent,\n  transitionDuration,\n  transitionDelay,\n  transitionEndEvent,\n  transitionProperty,\n  isMobile,\n  isApple,\n  isFirefox,\n  support3DTransform,\n  supportPassive,\n  supportTransform,\n  supportTouch,\n  supportAnimation,\n  supportTransition,\n  addEventListener,\n  removeEventListener,\n  keyboardEventKeys,\n  keydownEvent,\n  keypressEvent,\n  keyupEvent,\n  keyAlt,\n  keyArrowDown,\n  keyArrowLeft,\n  keyArrowRight,\n  keyArrowUp,\n  keyBackspace,\n  keyCapsLock,\n  keyControl,\n  keyDelete,\n  keyEnter,\n  keyEscape,\n  keyInsert,\n  keyMeta,\n  keyPause,\n  keyScrollLock,\n  keyShift,\n  keySpace,\n  keyTab,\n  offsetHeight,\n  offsetWidth,\n  scrollHeight,\n  scrollWidth,\n  userAgentData,\n  userAgent,\n  tabindex,\n  addClass,\n  removeClass,\n  hasClass,\n  on,\n  off,\n  one,\n  dispatchEvent,\n  distinct,\n  Data,\n  getInstance,\n  createElement,\n  createElementNS,\n  toUpperCase,\n  toLowerCase,\n  Timer,\n  emulateAnimationEnd,\n  emulateTransitionEnd,\n  isElementInScrollRange,\n  isElementInViewport,\n  passiveHandler,\n  getElementAnimationDuration,\n  getElementAnimationDelay,\n  getElementTransitionDuration,\n  getElementTransitionDelay,\n  getNodeScroll,\n  getParentNode,\n  getRectRelativeToOffsetParent,\n  getWindow,\n  isArray,\n  isString,\n  isCustomElement,\n  isElement,\n  isNode,\n  isNumber,\n  isHTMLElement,\n  isHTMLImageElement,\n  isSVGElement,\n  isNodeList,\n  isHTMLCollection,\n  isScaledElement,\n  isTableElement,\n  isShadowRoot,\n  isDocument,\n  isElementsArray,\n  isFunction,\n  isObject,\n  isWindow,\n  isMedia,\n  isRTL,\n  closest,\n  querySelector,\n  getCustomElements,\n  getElementById,\n  querySelectorAll,\n  getElementsByClassName,\n  getElementsByTagName,\n  matches,\n  normalizeValue,\n  normalizeOptions,\n  reflow,\n  noop,\n  focus,\n  getUID,\n  ArrayFrom,\n  Float32ArrayFrom,\n  Float64ArrayFrom,\n  ObjectAssign,\n  ObjectEntries,\n  ObjectKeys,\n  ObjectValues,\n  OriginalEvent,\n  getBoundingClientRect,\n  getDocument,\n  getDocumentBody,\n  getDocumentElement,\n  getDocumentHead,\n  getElementStyle,\n  setElementStyle,\n  hasAttribute,\n  hasAttributeNS,\n  getAttribute,\n  getAttributeNS,\n  setAttribute,\n  setAttributeNS,\n  removeAttribute,\n  removeAttributeNS,\n};\n\nexport default SHORTY;\n"],
  "mappings": "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A,mBACA,sBACA,kBACA,gBACA,mBACA,oBACA,mBACA,mBACA,gBACA,iBACA,kBACA,kBACA,mBACA,oBACA,eACA,mBACA,kBACA,oBACA,iBACA,sBACA,oBACA,qBACA,oBACA,kBACA,eACA,aACA,eACA,gBACA,qBACA,kBACA,oBACA,iBACA,qBACA,kBACA,gBACA,oBACA,sBACA,mBACA,qBACA,qBACA,YACA,WACA,aACA,sBACA,kBACA,oBACA,gBACA,oBACA,qBACA,oBACA,uBACA,qBACA,eACA,gBACA,cACA,UACA,gBACA,gBACA,iBACA,cACA,gBACA,eACA,cACA,aACA,YACA,aACA,aACA,WACA,YACA,iBACA,YACA,YACA,UACA,gBACA,eACA,gBACA,eACA,gBACA,YACA,YACA,YACA,eACA,YACA,KACA,MACA,OACA,gBACA,YACA,QACA,eACA,iBACA,mBACA,eACA,eACA,SACA,uBACA,wBACA,0BACA,uBACA,kBACA,+BACA,4BACA,gCACA,6BACA,iBACA,iBACA,iCACA,aACA,WACA,YACA,mBACA,aACA,SACA,YACA,gBACA,sBACA,gBACA,cACA,oBACA,kBACA,kBACA,gBACA,aACA,mBACA,cACA,YACA,WACA,WACA,SACA,WACA,iBACA,qBACA,kBACA,oBACA,0BACA,wBACA,WACA,iBACA,oBACA,UACA,QACA,SACA,UACA,aACA,oBACA,oBACA,eACA,gBACA,aACA,gBACA,iBACA,wBACA,cACA,mBACA,qBACA,mBACA,kBACA,mBACA,gBACA,kBACA,gBACA,kBACA,eACA,kBACA,mBACA,oBACF,EAEO,GAAQ",
  "names": []
}
