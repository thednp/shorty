{"version":3,"file":"getElementsByClassName.cjs","sources":["../../src/selectors/getElementsByClassName.ts"],"sourcesContent":["import getDocument from '../get/getDocument';\nimport isNode from '../is/isNode';\n\n/**\n * Shortcut for `HTMLElement.getElementsByClassName` method. Some `Node` elements\n * like `ShadowRoot` do not support `getElementsByClassName`.\n *\n * @param selector the class name\n * @param parent optional Element to look into\n * @return the 'HTMLCollection'\n */\nconst getElementsByClassName = (\n  selector: string,\n  parent?: ParentNode,\n): HTMLCollectionOf<HTMLElement> => {\n  const lookUp = parent && isNode(parent) ? parent : getDocument();\n  return (lookUp as HTMLElement | Document).getElementsByClassName(\n    selector,\n  ) as HTMLCollectionOf<HTMLElement>;\n};\n\nexport default getElementsByClassName;\n"],"names":[],"mappings":";;;;;;;;AAWM,MAAA,sBAAA,GAAyB,CAC7B,QAAA,EACA,MACkC,KAAA;AAClC,EAAA,MAAM,SAAS,MAAU,IAAA,MAAA,CAAO,MAAM,CAAA,GAAI,SAAS,WAAY,EAAA,CAAA;AAC/D,EAAA,OAAQ,MAAkC,CAAA,sBAAA;AAAA,IACxC,QAAA;AAAA,GACF,CAAA;AACF;;;;"}