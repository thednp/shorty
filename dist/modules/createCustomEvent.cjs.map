{"version":3,"file":"createCustomEvent.cjs","sources":["../../src/misc/createCustomEvent.ts"],"sourcesContent":["import type { OriginalEvent } from '../interface/originalEvent';\nimport isObject from '../is/isObject';\nimport ObjectAssign from './ObjectAssign';\n\n/**\n * Returns a namespaced `CustomEvent` specific to each component.\n *\n * @param eventType Event.type\n * @param config Event.options | Event.properties\n * @returns a new namespaced event\n */\nconst createCustomEvent = <T extends OriginalEvent>(\n  eventType: string,\n  config?: CustomEventInit<any>,\n): T => {\n  const OriginalCustomEvent = new CustomEvent<any>(eventType, {\n    cancelable: true,\n    bubbles: true,\n  } as CustomEventInit<any>) as T;\n\n  /* istanbul ignore else */\n  if (isObject(config)) {\n    ObjectAssign(OriginalCustomEvent, config);\n  }\n  return OriginalCustomEvent;\n};\n\nexport default createCustomEvent;\n"],"names":[],"mappings":";;;;;AAWM,MAAA,iBAAA,GAAoB,CACxB,SAAA,EACA,MACM,KAAA;AACN,EAAM,MAAA,mBAAA,GAAsB,IAAI,WAAA,CAAiB,SAAW,EAAA;AAAA,IAC1D,UAAY,EAAA,IAAA;AAAA,IACZ,OAAS,EAAA,IAAA;AAAA,GACc,CAAA,CAAA;AAGzB,EAAI,IAAA,QAAA,CAAS,MAAM,CAAG,EAAA;AACpB,IAAA,YAAA,CAAa,qBAAqB,MAAM,CAAA,CAAA;AAAA,GAC1C;AACA,EAAO,OAAA,mBAAA,CAAA;AACT;;;;"}