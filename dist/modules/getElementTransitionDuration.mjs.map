{"version":3,"file":"getElementTransitionDuration.mjs","sources":["../../src/strings/transitionDuration.ts","../../src/get/getElementTransitionDuration.ts"],"sourcesContent":["/**\n * A global namespace for 'transitionDuration' string.\n */\nconst transitionDuration = 'transitionDuration';\nexport default transitionDuration;\n","import transitionDuration from '../strings/transitionDuration';\nimport transitionProperty from '../strings/transitionProperty';\nimport getElementStyle from './getElementStyle';\n\n/**\n * Utility to get the computed `transitionDuration`\n * from Element in miliseconds.\n *\n * @param element target\n * @return the `transitionDuration` value in miliseconds\n */\nconst getElementTransitionDuration = (element: HTMLElement): number => {\n  const propertyValue = getElementStyle(element, transitionProperty);\n  const durationValue = getElementStyle(element, transitionDuration);\n  const durationScale = durationValue.includes('ms') ? /* istanbul ignore next */ 1 : 1000;\n  const duration =\n    propertyValue && propertyValue !== 'none'\n      ? parseFloat(durationValue) * durationScale\n      : /* istanbul ignore next */ 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */ 0;\n};\n\nexport default getElementTransitionDuration;\n"],"names":[],"mappings":";;;AAGA,MAAM,kBAAqB,GAAA,oBAAA;;ACQrB,MAAA,4BAAA,GAA+B,CAAC,OAAiC,KAAA;AACrE,EAAM,MAAA,aAAA,GAAgB,eAAgB,CAAA,OAAA,EAAS,kBAAkB,CAAA,CAAA;AACjE,EAAM,MAAA,aAAA,GAAgB,eAAgB,CAAA,OAAA,EAAS,kBAAkB,CAAA,CAAA;AACjE,EAAA,MAAM,aAAgB,GAAA,aAAA,CAAc,QAAS,CAAA,IAAI,IAA+B,CAAI,GAAA,GAAA,CAAA;AACpF,EAAA,MAAM,WACJ,aAAiB,IAAA,aAAA,KAAkB,SAC/B,UAAW,CAAA,aAAa,IAAI,aACD,GAAA,CAAA,CAAA;AAEjC,EAAA,OAAO,CAAC,MAAA,CAAO,KAAM,CAAA,QAAQ,IAAI,QAAsC,GAAA,CAAA,CAAA;AACzE;;;;"}