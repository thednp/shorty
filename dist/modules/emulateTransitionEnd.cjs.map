{"version":3,"file":"emulateTransitionEnd.cjs","sources":["../../src/strings/transitionEndEvent.ts","../../src/misc/emulateTransitionEnd.ts"],"sourcesContent":["/**\n * A global namespace for 'transitionend' string.\n */\nconst transitionEndEvent = 'transitionend';\nexport default transitionEndEvent;\n","import transitionEndEvent from '../strings/transitionEndEvent';\nimport getElementTransitionDelay from '../get/getElementTransitionDelay';\nimport getElementTransitionDuration from '../get/getElementTransitionDuration';\nimport dispatchEvent from './dispatchEvent';\n\n/**\n * Utility to make sure callbacks are consistently\n * called when transition ends.\n *\n * @param element event target\n * @param handler `transitionend` callback\n */\nconst emulateTransitionEnd = (element: HTMLElement, handler: EventListener): void => {\n  let called = 0;\n  const endEvent = new Event(transitionEndEvent);\n  const duration = getElementTransitionDuration(element);\n  const delay = getElementTransitionDelay(element);\n\n  if (duration) {\n    /** Wrap the handler in on -> off callback */\n    const transitionEndWrapper = (e: Event): void => {\n      /* istanbul ignore else */\n      if (e.target === element) {\n        handler.apply(element, [e]);\n        element.removeEventListener(transitionEndEvent, transitionEndWrapper);\n        called = 1;\n      }\n    };\n    element.addEventListener(transitionEndEvent, transitionEndWrapper);\n    setTimeout(() => {\n      /* istanbul ignore next */\n      if (!called) dispatchEvent(element, endEvent);\n    }, duration + delay + 17);\n  } else {\n    handler.apply(element, [endEvent]);\n  }\n};\n\nexport default emulateTransitionEnd;\n"],"names":[],"mappings":";;;;;;;;AAGA,MAAM,kBAAqB,GAAA,eAAA;;ACSrB,MAAA,oBAAA,GAAuB,CAAC,OAAA,EAAsB,OAAiC,KAAA;AACnF,EAAA,IAAI,MAAS,GAAA,CAAA,CAAA;AACb,EAAM,MAAA,QAAA,GAAW,IAAI,KAAA,CAAM,kBAAkB,CAAA,CAAA;AAC7C,EAAM,MAAA,QAAA,GAAW,6BAA6B,OAAO,CAAA,CAAA;AACrD,EAAM,MAAA,KAAA,GAAQ,0BAA0B,OAAO,CAAA,CAAA;AAE/C,EAAA,IAAI,QAAU,EAAA;AAEZ,IAAM,MAAA,oBAAA,GAAuB,CAAC,CAAmB,KAAA;AAE/C,MAAI,IAAA,CAAA,CAAE,WAAW,OAAS,EAAA;AACxB,QAAA,OAAA,CAAQ,KAAM,CAAA,OAAA,EAAS,CAAC,CAAC,CAAC,CAAA,CAAA;AAC1B,QAAQ,OAAA,CAAA,mBAAA,CAAoB,oBAAoB,oBAAoB,CAAA,CAAA;AACpE,QAAS,MAAA,GAAA,CAAA,CAAA;AAAA,OACX;AAAA,KACF,CAAA;AACA,IAAQ,OAAA,CAAA,gBAAA,CAAiB,oBAAoB,oBAAoB,CAAA,CAAA;AACjE,IAAA,UAAA,CAAW,MAAM;AAEf,MAAA,IAAI,CAAC,MAAA;AAAQ,QAAA,aAAA,CAAc,SAAS,QAAQ,CAAA,CAAA;AAAA,KAC9C,EAAG,QAAW,GAAA,KAAA,GAAQ,EAAE,CAAA,CAAA;AAAA,GACnB,MAAA;AACL,IAAA,OAAA,CAAQ,KAAM,CAAA,OAAA,EAAS,CAAC,QAAQ,CAAC,CAAA,CAAA;AAAA,GACnC;AACF;;;;"}