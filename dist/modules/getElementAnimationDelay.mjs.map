{"version":3,"file":"getElementAnimationDelay.mjs","sources":["../../src/strings/animationDelay.ts","../../src/get/getElementAnimationDelay.ts"],"sourcesContent":["/**\n * A global namespace for 'animationDelay' string.\n */\nconst animationDelay = 'animationDelay';\nexport default animationDelay;\n","import animationDelay from '../strings/animationDelay';\nimport animationName from '../strings/animationName';\nimport getElementStyle from './getElementStyle';\n\n/**\n * Utility to get the computed `animationDelay`\n * from Element in miliseconds.\n *\n * @param element target\n * @return the `animationDelay` value in miliseconds\n */\nconst getElementAnimationDelay = (element: HTMLElement): number => {\n  const propertyValue = getElementStyle(element, animationName);\n  const durationValue = getElementStyle(element, animationDelay);\n  const durationScale = durationValue.includes('ms') ? /* istanbul ignore next */ 1 : 1000;\n  const duration =\n    propertyValue && propertyValue !== 'none' ? parseFloat(durationValue) * durationScale : 0;\n\n  return !Number.isNaN(duration) ? duration : /* istanbul ignore next */ 0;\n};\n\nexport default getElementAnimationDelay;\n"],"names":[],"mappings":";;;AAGA,MAAM,cAAiB,GAAA,gBAAA;;ACQjB,MAAA,wBAAA,GAA2B,CAAC,OAAiC,KAAA;AACjE,EAAM,MAAA,aAAA,GAAgB,eAAgB,CAAA,OAAA,EAAS,aAAa,CAAA,CAAA;AAC5D,EAAM,MAAA,aAAA,GAAgB,eAAgB,CAAA,OAAA,EAAS,cAAc,CAAA,CAAA;AAC7D,EAAA,MAAM,aAAgB,GAAA,aAAA,CAAc,QAAS,CAAA,IAAI,IAA+B,CAAI,GAAA,GAAA,CAAA;AACpF,EAAA,MAAM,WACJ,aAAiB,IAAA,aAAA,KAAkB,SAAS,UAAW,CAAA,aAAa,IAAI,aAAgB,GAAA,CAAA,CAAA;AAE1F,EAAA,OAAO,CAAC,MAAA,CAAO,KAAM,CAAA,QAAQ,IAAI,QAAsC,GAAA,CAAA,CAAA;AACzE;;;;"}