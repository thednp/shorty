{"version":3,"file":"getElementsByTagName.cjs","sources":["../../src/selectors/getElementsByTagName.ts"],"sourcesContent":["import getDocument from '../get/getDocument';\nimport isNode from '../is/isNode';\n\n/**\n * Shortcut for `HTMLElement.getElementsByTagName` method. Some `Node` elements\n * like `ShadowRoot` do not support `getElementsByTagName`.\n *\n * @param selector the tag name\n * @param parent optional Element to look into\n * @return the 'HTMLCollection'\n */\nconst getElementsByTagName = (\n  selector: string,\n  parent?: ParentNode,\n): HTMLCollectionOf<HTMLElement> => {\n  const lookUp = isNode(parent) ? parent : getDocument();\n  return (lookUp as Document).getElementsByTagName(selector) as HTMLCollectionOf<HTMLElement>;\n};\n\nexport default getElementsByTagName;\n"],"names":[],"mappings":";;;;;;;;AAWM,MAAA,oBAAA,GAAuB,CAC3B,QAAA,EACA,MACkC,KAAA;AAClC,EAAA,MAAM,MAAS,GAAA,MAAA,CAAO,MAAM,CAAA,GAAI,SAAS,WAAY,EAAA,CAAA;AACrD,EAAQ,OAAA,MAAA,CAAoB,qBAAqB,QAAQ,CAAA,CAAA;AAC3D;;;;"}