{"version":3,"file":"one.mjs","sources":["../../src/event/one.ts"],"sourcesContent":["import on from './on';\nimport off from './off';\n\n/**\n * Add an `eventListener` to an `EventTarget`\n * element and remove it once callback is called.\n */\nconst one = (\n  element: EventTarget,\n  eventName: string,\n  listener: EventListener,\n  options?: AddEventListenerOptions,\n) => {\n  /** Wrap the listener for easy on -> off */\n  const handlerWrapper = (e: Event): void => {\n    /* istanbul ignore else */\n    if (e.target === element || e.currentTarget === element) {\n      listener.apply(element, [e]);\n      off(element, eventName, handlerWrapper, options);\n    }\n  };\n  on(element, eventName, handlerWrapper, options);\n};\n\nexport default one;\n"],"names":[],"mappings":";;;AAOA,MAAM,GAAM,GAAA,CACV,OACA,EAAA,SAAA,EACA,UACA,OACG,KAAA;AAEH,EAAM,MAAA,cAAA,GAAiB,CAAC,CAAmB,KAAA;AAEzC,IAAA,IAAI,CAAE,CAAA,MAAA,KAAW,OAAW,IAAA,CAAA,CAAE,kBAAkB,OAAS,EAAA;AACvD,MAAA,QAAA,CAAS,KAAM,CAAA,OAAA,EAAS,CAAC,CAAC,CAAC,CAAA,CAAA;AAC3B,MAAI,GAAA,CAAA,OAAA,EAAS,SAAW,EAAA,cAAA,EAAgB,OAAO,CAAA,CAAA;AAAA,KACjD;AAAA,GACF,CAAA;AACA,EAAG,EAAA,CAAA,OAAA,EAAS,SAAW,EAAA,cAAA,EAAgB,OAAO,CAAA,CAAA;AAChD;;;;"}