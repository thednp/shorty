{"version":3,"file":"isElement.cjs","sources":["../../src/is/isElement.ts"],"sourcesContent":["import isNode from './isNode';\n\n/**\n * Checks if an object is an `Element`.\n *\n * @see https://dom.spec.whatwg.org/#node\n *\n * ```\n * ELEMENT_NODE = 1;\n * ATTRIBUTE_NODE = 2;\n * TEXT_NODE = 3;\n * CDATA_SECTION_NODE = 4;\n * ENTITY_REFERENCE_NODE = 5; // legacy\n * ENTITY_NODE = 6; // legacy\n * PROCESSING_INSTRUCTION_NODE = 7;\n * COMMENT_NODE = 8;\n * DOCUMENT_NODE = 9;\n * DOCUMENT_TYPE_NODE = 10;\n * DOCUMENT_FRAGMENT_NODE = 11;\n * ```\n * @param element the target object\n * @returns the query result\n */\nconst isElement = (element?: unknown): element is Element =>\n  (isNode(element) && [1, 2, 3, 4, 5, 6, 7, 8].some(x => element.nodeType === x)) || false;\n\nexport default isElement;\n"],"names":[],"mappings":";;;;;AAuBM,MAAA,SAAA,GAAY,CAAC,OAChB,KAAA,MAAA,CAAO,OAAO,CAAK,IAAA,CAAC,GAAG,CAAG,EAAA,CAAA,EAAG,GAAG,CAAG,EAAA,CAAA,EAAG,GAAG,CAAC,CAAA,CAAE,KAAK,CAAK,CAAA,KAAA,OAAA,CAAQ,QAAa,KAAA,CAAC,CAAM,IAAA;;;;"}