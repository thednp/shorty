{"version":3,"file":"getElementStyle.mjs","sources":["../../src/get/getElementStyle.ts"],"sourcesContent":["// import CSS4Declaration from \"../interface/css4Declaration\";\n\n/**\n * Shortcut for `window.getComputedStyle(element).propertyName`\n * static method.\n *\n * * If `element` parameter is not an `HTMLElement`, `getComputedStyle`\n * throws a `ReferenceError`.\n *\n * @param element target\n * @param property the css property\n * @return the css property value\n */\nconst getElementStyle = (element: HTMLElement, property: string): string => {\n  const computedStyle = getComputedStyle(element);\n  const prop = property\n    .replace('webkit', 'Webkit')\n    .replace(/([A-Z])/g, '-$1')\n    .toLowerCase();\n\n  // modern browsers only\n  return computedStyle.getPropertyValue(prop);\n};\n\nexport default getElementStyle;\n"],"names":[],"mappings":"AAaM,MAAA,eAAA,GAAkB,CAAC,OAAA,EAAsB,QAA6B,KAAA;AAC1E,EAAM,MAAA,aAAA,GAAgB,iBAAiB,OAAO,CAAA,CAAA;AAC9C,EAAM,MAAA,IAAA,GAAO,QACV,CAAA,OAAA,CAAQ,QAAU,EAAA,QAAQ,EAC1B,OAAQ,CAAA,UAAA,EAAY,KAAK,CAAA,CACzB,WAAY,EAAA,CAAA;AAGf,EAAO,OAAA,aAAA,CAAc,iBAAiB,IAAI,CAAA,CAAA;AAC5C;;;;"}