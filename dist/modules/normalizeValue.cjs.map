{"version":3,"file":"normalizeValue.cjs","sources":["../../src/misc/normalizeValue.ts"],"sourcesContent":["type NormalValue = boolean | number | string | ((...args: any[]) => any) | null;\n\n/**\n * Utility to normalize component options\n *\n * @param value the input value\n * @return the normalized value\n */\nconst normalizeValue = (value?: boolean | number | string): NormalValue => {\n  if (['true', true].includes(value as boolean)) {\n    return true;\n  }\n\n  if (['false', false].includes(value as boolean)) {\n    return false;\n  }\n\n  if (['null', '', null, undefined].includes(value as string | undefined)) {\n    return null;\n  }\n\n  if (value !== '' && !Number.isNaN(+(value as string))) {\n    return +(value as string);\n  }\n\n  // string / function / HTMLElement / object / undefined\n  return value as NormalValue;\n};\n\nexport default normalizeValue;\n"],"names":[],"mappings":";;AAQM,MAAA,cAAA,GAAiB,CAAC,KAAmD,KAAA;AACzE,EAAA,IAAI,CAAC,MAAQ,EAAA,IAAI,CAAE,CAAA,QAAA,CAAS,KAAgB,CAAG,EAAA;AAC7C,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAEA,EAAA,IAAI,CAAC,OAAS,EAAA,KAAK,CAAE,CAAA,QAAA,CAAS,KAAgB,CAAG,EAAA;AAC/C,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AAEA,EAAI,IAAA,CAAC,QAAQ,EAAI,EAAA,IAAA,EAAM,MAAS,CAAE,CAAA,QAAA,CAAS,KAA2B,CAAG,EAAA;AACvE,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAEA,EAAA,IAAI,UAAU,EAAM,IAAA,CAAC,OAAO,KAAM,CAAA,CAAE,KAAgB,CAAG,EAAA;AACrD,IAAA,OAAO,CAAE,KAAA,CAAA;AAAA,GACX;AAGA,EAAO,OAAA,KAAA,CAAA;AACT;;;;"}