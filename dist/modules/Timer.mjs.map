{"version":3,"file":"Timer.mjs","sources":["../../src/misc/timer.ts"],"sourcesContent":["import isMap from '../is/isMap';\nimport isHTMLElement from '../is/isHTMLElement';\nimport isNumber from '../is/isNumber';\n\ntype KeyMap = Map<string, number>;\ntype TimeMap = Map<HTMLElement, number | KeyMap>;\n\nconst TimeCache: TimeMap = new Map() as TimeMap;\n/**\n * An interface for one or more `TimerHandler`s per `Element`.\n *\n * @see https://github.com/thednp/navbar/\n */\nconst Timer = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (element: HTMLElement, callback: TimerHandler, delay: number, key?: string): void => {\n    if (!isHTMLElement(element)) return;\n\n    /* istanbul ignore else */\n    if (key && key.length) {\n      /* istanbul ignore else */\n      if (!TimeCache.has(element)) {\n        TimeCache.set(element, new Map());\n      }\n      // eslint-disable-next-line @typescript-eslint/no-implied-eval\n      (TimeCache.get(element) as KeyMap).set(key, setTimeout(callback, delay));\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-implied-eval\n      TimeCache.set(element, setTimeout(callback, delay));\n    }\n  },\n\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (element: HTMLElement, key?: string): number | null => {\n    if (!isHTMLElement(element)) return null;\n    const keyTimers = TimeCache.get(element);\n\n    if (key && keyTimers && isMap(keyTimers as KeyMap)) {\n      return (keyTimers as KeyMap).get(key) || /* istanbul ignore next */ null;\n    } else if (isNumber(keyTimers as number)) {\n      return keyTimers as number;\n    }\n    return null;\n  },\n\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (element: HTMLElement, key?: string): void => {\n    if (!isHTMLElement(element)) return;\n\n    const keyTimers = TimeCache.get(element);\n\n    if (key && key.length && isMap(keyTimers as KeyMap)) {\n      clearTimeout((keyTimers as KeyMap).get(key));\n      (keyTimers as KeyMap).delete(key);\n      /* istanbul ignore else */\n      if ((keyTimers as KeyMap).size === 0) {\n        TimeCache.delete(element);\n      }\n    } else {\n      clearTimeout(keyTimers as number);\n      TimeCache.delete(element);\n    }\n  },\n};\n\nexport default Timer;\n"],"names":[],"mappings":";;;;;;AAOA,MAAM,SAAA,uBAAyB,GAAI,EAAA,CAAA;AAMnC,MAAM,KAAQ,GAAA;AAAA,EASZ,GAAK,EAAA,CAAC,OAAsB,EAAA,QAAA,EAAwB,OAAe,GAAuB,KAAA;AACxF,IAAI,IAAA,CAAC,cAAc,OAAO,CAAA;AAAG,MAAA,OAAA;AAG7B,IAAI,IAAA,GAAA,IAAO,IAAI,MAAQ,EAAA;AAErB,MAAA,IAAI,CAAC,SAAA,CAAU,GAAI,CAAA,OAAO,CAAG,EAAA;AAC3B,QAAA,SAAA,CAAU,GAAI,CAAA,OAAA,kBAAa,IAAA,GAAA,EAAK,CAAA,CAAA;AAAA,OAClC;AAEA,MAAC,SAAA,CAAU,IAAI,OAAO,CAAA,CAAa,IAAI,GAAK,EAAA,UAAA,CAAW,QAAU,EAAA,KAAK,CAAC,CAAA,CAAA;AAAA,KAClE,MAAA;AAEL,MAAA,SAAA,CAAU,GAAI,CAAA,OAAA,EAAS,UAAW,CAAA,QAAA,EAAU,KAAK,CAAC,CAAA,CAAA;AAAA,KACpD;AAAA,GACF;AAAA,EASA,GAAA,EAAK,CAAC,OAAA,EAAsB,GAAgC,KAAA;AAC1D,IAAI,IAAA,CAAC,cAAc,OAAO,CAAA;AAAG,MAAO,OAAA,IAAA,CAAA;AACpC,IAAM,MAAA,SAAA,GAAY,SAAU,CAAA,GAAA,CAAI,OAAO,CAAA,CAAA;AAEvC,IAAA,IAAI,GAAO,IAAA,SAAA,IAAa,KAAM,CAAA,SAAmB,CAAG,EAAA;AAClD,MAAQ,OAAA,SAAA,CAAqB,GAAI,CAAA,GAAG,CAAgC,IAAA,IAAA,CAAA;AAAA,KACtE,MAAA,IAAW,QAAS,CAAA,SAAmB,CAAG,EAAA;AACxC,MAAO,OAAA,SAAA,CAAA;AAAA,KACT;AACA,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAAA,EAQA,KAAA,EAAO,CAAC,OAAA,EAAsB,GAAuB,KAAA;AACnD,IAAI,IAAA,CAAC,cAAc,OAAO,CAAA;AAAG,MAAA,OAAA;AAE7B,IAAM,MAAA,SAAA,GAAY,SAAU,CAAA,GAAA,CAAI,OAAO,CAAA,CAAA;AAEvC,IAAA,IAAI,GAAO,IAAA,GAAA,CAAI,MAAU,IAAA,KAAA,CAAM,SAAmB,CAAG,EAAA;AACnD,MAAc,YAAA,CAAA,SAAA,CAAqB,GAAI,CAAA,GAAG,CAAC,CAAA,CAAA;AAC3C,MAAC,SAAA,CAAqB,OAAO,GAAG,CAAA,CAAA;AAEhC,MAAK,IAAA,SAAA,CAAqB,SAAS,CAAG,EAAA;AACpC,QAAA,SAAA,CAAU,OAAO,OAAO,CAAA,CAAA;AAAA,OAC1B;AAAA,KACK,MAAA;AACL,MAAA,YAAA,CAAa,SAAmB,CAAA,CAAA;AAChC,MAAA,SAAA,CAAU,OAAO,OAAO,CAAA,CAAA;AAAA,KAC1B;AAAA,GACF;AACF;;;;"}