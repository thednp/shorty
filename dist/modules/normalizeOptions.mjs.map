{"version":3,"file":"normalizeOptions.mjs","sources":["../../src/misc/normalizeOptions.ts"],"sourcesContent":["import getAttribute from '../attr/getAttribute';\nimport normalizeValue from './normalizeValue';\nimport ObjectEntries from './ObjectEntries';\nimport toLowerCase from './toLowerCase';\n// import { optionValues } from '../types';\n\n/**\n * Utility to normalize component options.\n *\n * @param element target\n * @param defaultOps component default options\n * @param inputOps component instance options\n * @param ns component namespace\n * @return normalized component options object\n */\nconst normalizeOptions = <T extends { [key: string]: any }>(\n  element: HTMLElement,\n  defaultOps: T,\n  inputOps: Partial<T>,\n  ns?: string,\n): T => {\n  const INPUT = { ...inputOps };\n  const data = { ...element.dataset };\n  const normalOps = { ...defaultOps };\n  const dataOps: Partial<T> = {};\n  const title = 'title';\n\n  ObjectEntries(data).forEach(([k, v]) => {\n    const key: keyof T =\n      ns && typeof k === 'string' && k.includes(ns)\n        ? k.replace(ns, '').replace(/[A-Z]/g, (match: string) => toLowerCase(match))\n        : k;\n\n    dataOps[key] = normalizeValue(v) as T[keyof T];\n  });\n\n  ObjectEntries(INPUT).forEach(([k, v]) => {\n    INPUT[k] = normalizeValue(v) as T[keyof T];\n  });\n\n  ObjectEntries(defaultOps).forEach(([k, v]) => {\n    /* istanbul ignore else */\n    if (k in INPUT) {\n      normalOps[k] = INPUT[k] as T[keyof T];\n    } else if (k in dataOps) {\n      normalOps[k] = dataOps[k] as T[keyof T];\n    } else {\n      normalOps[k] = (k === title ? getAttribute(element, title) : v) as T[keyof T];\n    }\n  });\n\n  return normalOps;\n};\n\nexport default normalizeOptions;\n"],"names":[],"mappings":";;;;;AAeA,MAAM,gBAAmB,GAAA,CACvB,OACA,EAAA,UAAA,EACA,UACA,EACM,KAAA;AACN,EAAM,MAAA,KAAA,GAAQ,EAAE,GAAG,QAAS,EAAA,CAAA;AAC5B,EAAA,MAAM,IAAO,GAAA,EAAE,GAAG,OAAA,CAAQ,OAAQ,EAAA,CAAA;AAClC,EAAM,MAAA,SAAA,GAAY,EAAE,GAAG,UAAW,EAAA,CAAA;AAClC,EAAA,MAAM,UAAsB,EAAC,CAAA;AAC7B,EAAA,MAAM,KAAQ,GAAA,OAAA,CAAA;AAEd,EAAA,aAAA,CAAc,IAAI,CAAE,CAAA,OAAA,CAAQ,CAAC,CAAC,CAAA,EAAG,CAAC,CAAM,KAAA;AACtC,IAAM,MAAA,GAAA,GACJ,MAAM,OAAO,CAAA,KAAM,YAAY,CAAE,CAAA,QAAA,CAAS,EAAE,CACxC,GAAA,CAAA,CAAE,QAAQ,EAAI,EAAA,EAAE,EAAE,OAAQ,CAAA,QAAA,EAAU,CAAC,KAAkB,KAAA,WAAA,CAAY,KAAK,CAAC,CACzE,GAAA,CAAA,CAAA;AAEN,IAAQ,OAAA,CAAA,GAAA,CAAA,GAAO,eAAe,CAAC,CAAA,CAAA;AAAA,GAChC,CAAA,CAAA;AAED,EAAA,aAAA,CAAc,KAAK,CAAE,CAAA,OAAA,CAAQ,CAAC,CAAC,CAAA,EAAG,CAAC,CAAM,KAAA;AACvC,IAAM,KAAA,CAAA,CAAA,CAAA,GAAK,eAAe,CAAC,CAAA,CAAA;AAAA,GAC5B,CAAA,CAAA;AAED,EAAA,aAAA,CAAc,UAAU,CAAE,CAAA,OAAA,CAAQ,CAAC,CAAC,CAAA,EAAG,CAAC,CAAM,KAAA;AAE5C,IAAA,IAAI,KAAK,KAAO,EAAA;AACd,MAAA,SAAA,CAAU,KAAK,KAAM,CAAA,CAAA,CAAA,CAAA;AAAA,KACvB,MAAA,IAAW,KAAK,OAAS,EAAA;AACvB,MAAA,SAAA,CAAU,KAAK,OAAQ,CAAA,CAAA,CAAA,CAAA;AAAA,KAClB,MAAA;AACL,MAAA,SAAA,CAAU,KAAM,CAAM,KAAA,KAAA,GAAQ,YAAa,CAAA,OAAA,EAAS,KAAK,CAAI,GAAA,CAAA,CAAA;AAAA,KAC/D;AAAA,GACD,CAAA,CAAA;AAED,EAAO,OAAA,SAAA,CAAA;AACT;;;;"}